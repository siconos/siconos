#
# use mksenv --distrib=<distrib> --pkgs=pkg1,pkg2,pkg3,... \
#     --split=[true,false] <thisfile.yml> [--docker,--script]
#

##############################################################################
wildcard: any

match:
  ubuntu: debian
##############################################################################
installer:
  any:
    fedora: dnf --setopt=deltarpm=false install -y
    debian: apt-get install -y --force-yes

updater:
  any:
    debian-sid: printf "deb http://llvm.org/apt/unstable/ llvm-toolchain-3.8 main\ndeb-src http://llvm.org/apt/unstable/ llvm-toolchain-3.8 main" >> /etc/apt/sources.list && apt-get update -y
    debian-jessie: printf "deb http://llvm.org/apt/jessie/ llvm-toolchain-jessie-3.8 main\ndeb-src http://llvm.org/apt/jessie/ llvm-toolchain-jessie-3.8 main" >> /etc/apt/sources.list && apt-get update -y
    debian: apt-get update -y
    ubuntu-16.04: printf "deb http://ppa.launchpad.net/siconos/siconos-daily/ubuntu xenial main\ndeb-src http://ppa.launchpad.net/siconos/siconos-daily/ubuntu xenial main\ndeb http://ppa.launchpad.net/siconos/fclib-daily/ubuntu xenial main\ndeb-src http://ppa.launchpad.net/siconos/fclib-daily/ubuntu xenial main " >> /etc/apt/sources.list && apt-get update -y
    fedora:  dnf --setopt=deltarpm=false install -y dnf-plugins-core && dnf -y copr enable xhub/siconos-git

##############################################################################
env:
  clang-3.9:
    any:
      - CC=/usr/bin/clang-3.9
      - CXX=/usr/bin/clang++-3.9
      - OMPI_CC=/usr/bin/clang-3.9
      - OMPI_CXX=/usr/bin/clang++-3.9
      - LLVM_SYMBOLIZER=/usr/lib/llvm-3.9/bin/llvm-symbolizer
      - ASAN_SYMBOLIZER_PATH=/usr/lib/llvm-3.9/bin/llvm-symbolizer
      - MSAN_SYMBOLIZER_PATH=/usr/lib/llvm-3.9/bin/llvm-symbolizer

  clang-3.8:
    any:
      - CC=/usr/bin/clang-3.8
      - CXX=/usr/bin/clang++-3.8
      - OMPI_CC=/usr/bin/clang-3.8
      - OMPI_CXX=/usr/bin/clang++-3.8
      - LLVM_SYMBOLIZER=/usr/lib/llvm-3.8/bin/llvm-symbolizer
      - ASAN_SYMBOLIZER_PATH=/usr/lib/llvm-3.8/bin/llvm-symbolizer
      - MSAN_SYMBOLIZER_PATH=/usr/lib/llvm-3.8/bin/llvm-symbolizer

  clang:
    any:
      - CC=/usr/bin/clang
      - CXX=/usr/bin/clang++
      - OMPI_CC=/usr/bin/clang
      - OMPI_CXX=/usr/bin/clang++

  mumps:
    any:
      - CC=mpicc
      - FC=mpif90
      - CXX=mpicxx

  frama-c:
    any:
      - CAML_LD_LIBRARY_PATH="/root/.opam/system/lib/stublibs:/usr/lib/ocaml/stublibs"
      - MANPATH="/root/.opam/system/man:"
      - PERL5LIB="/root/.opam/system/lib/perl5"
      - OCAML_TOPLEVEL_PATH="/root/.opam/system/lib/toplevel"
      - PATH="/root/.opam/system/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"


  # see http://pages.cs.wisc.edu/~ferris/path/LICENSE
  path:
    any:
      - PATH_LICENSE_STRING="3413119131&Courtesy&&&USR&54784&12_1_2016&1000&PATH&GEN&31_12_2017&0_0_0&5000&0_0"

##############################################################################
pkgs:

  build-base:
    any:
      - git-core
      - wget
      - make
      - cmake
      - boost
      - gmp
      - swig
      - cppunit

  python-env:
    debian:
      - python
      - python-dev
      - python-lxml
      - python-pytest
      - python-scipy
      - python-matplotlib
    fedora:
      - python
      - python-devel
      - python-lxml
      - pytest
      - scipy
      - python-matplotlib

  python3-env:
    debian:
      - python3
      - python3-dev
      - libpython3-dev
      - python3-lxml
      - python3-pytest
      - python3-scipy
      - python3-matplotlib
    fedora:
      - python3
      - python3-devel
      - python3-lxml
      - python3-scipy
      - python3-pytest
      - python3-scipy
      - python3-matplotlib

  # bullet & serialization for full doc
  documentation:
    debian:
      - doxygen
      - graphviz
      - python-sphinx
      - python-sphinx-bootstrap-theme
      - python-sphinx-rtd-theme
      - sphinx-common
      - sphinx-doc
      - sphinx-rtd-theme-common
      - pip-command
      - siconos-doc-pip-pkgs
      - bullet
      - serialization

  pip-command:
    debian:
      - python-pip
      - pip-upgrade

  pip-upgrade:
    any:
      command:
        pip install --upgrade pip
      
  siconos-doc-pip-pkgs:
    ubuntu:
      command:
        pip install sphinxcontrib-bibtex &&
        pip install sphinxcontrib-doxylink
      
  profiling:
    debian:
      - valgrind
      - python-dbg
    fedora:
      - valgrind
      - python-debuginfo

  lpsolve:
    debian:
      - lp-solve
      - liblpsolve55-dev
    fedora:
      - lpsolve-devel

  cmake:
    ubuntu-12.04:
       - python-software-properties
       - cmake-3.0.2
       - python-matplotlib

    ubuntu-14.04:
       - cmake-3.0.2


  cmake-3.0.2:
    ubuntu-12.04:
      command:
        wget http://www.cmake.org/files/v3.0/cmake-3.0.2.tar.gz&&
        tar xf cmake-3.0.2.tar.gz&&
        cd cmake-3.0.2&&
        ./configure&&
        make install

    ubuntu-14.04:
      command:
        wget http://www.cmake.org/files/v3.0/cmake-3.0.2.tar.gz&&
        tar xf cmake-3.0.2.tar.gz&&
        cd cmake-3.0.2&&
        ./configure&&
        make install

  gfortran:
    fedora: gcc-gfortran

  gnu-c++:
    debian: g++
    fedora: gcc-c++

  boost:
    debian: libboost-dev
    fedora: boost-devel

  serialization:
    debian:
      libboost-filesystem-dev
      libboost-serialization-dev
    fedora:
      boost-filesystem
      boost-serialization

  gmp:
    debian: libgmp-dev
    fedora: gmp-devel


  cppunit:
    debian:
      - libcppunit-dev

    fedora:
      - cppunit
      - cppunit-devel

  hdf5:
    fedora: hdf5-devel
    debian: libhdf5-dev

  h5py:
    fedora: h5py
    debian: python-h5py

  h5py3:
    any: python3-h5py

  openblas-lapacke:
    debian:
      - libopenblas-dev
      - liblapacke-dev
    fedora:
      - openblas-devel
      - lapack-devel

  atlas-lapack:
    debian:
      - libblas-dev
      - liblapack-dev
      - libatlas-base-dev
      - libatlas-dev

    fedora:
      - blas
      - blas-devel
      - atlas-devel

  oce:
    debian:
      - liboce-foundation-dev
      - liboce-modeling-dev
      - liboce-ocaf-dev
      - liboce-visualization-dev
      - oce-draw

    fedora:
      - OCE-devel

  mumps:
    debian-7.8:
      - libopenmpi-dev
      - openssh-client
      - libscalapack-mpi-dev
      - libscotchmetis-dev
      - libmumps-dev

    debian:
      - libopenmpi-dev
      - openssh-client
      - libscalapack-mpi-dev
      - libmetis-dev
      - libmumps-dev

    fedora:
      - ptscotch-openmpi
      - ptscotch-openmpi-devel
      - blacs-openmpi-devel
      - openmpi-devel
      - scalapack-openmpi
      - MUMPS-openmpi-devel
      - environment-modules

  bullet:
    debian:
      - libbullet-dev

  umfpack:
    debian:
      - libsuitesparse-dev
    fedora:
      - suitesparse-devel

  asan:
    fedora:
      - libasan
      - libubsan

  xz:
    debian:
      - xz-utils

  fclib:
    any:
      command: svn checkout svn://scm.gforge.inria.fr/svnroot/fclib/ &&
               cd fclib/trunk &&
               cmake . -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release &&
               make &&
               make install

  clang:
    debian-jessie:
      - clang-3.8
  # Don't worry, this is a hack to get cppunit to work with clang on ubuntu 15.10, because the system cppunit
  # has been compiled with a different string impl ...
  cppunit_clang-3.9:
    ubuntu-16.10:
      command:  wget http://siconos.gforge.inria.fr/build-42/cppunit-clang-3.9-ubuntu-16.10.tar.xz &&
                tar xJf cppunit-clang-3.9-ubuntu-16.10.tar.xz --strip-components=1 -C /usr/lib/x86_64-linux-gnu/ lib &&
                tar xJf cppunit-clang-3.9-ubuntu-16.10.tar.xz --strip-components=1 -C /usr/include/cppunit/ include

  # this is for msan. It also contains the so files for cppunit compiled with msan
  libcxx_msan:
    any:
      command: wget http://siconos.gforge.inria.fr/build-42/libcxx_msan-clang-3.6.tar.xz &&
               tar xJf libcxx_msan-clang-3.6.tar.xz -C /

  # dummy target
  cfi:
    any:
      command: mkdir /tmp/clang && ln -s /usr/bin/ld.gold /tmp/clang/ld

  path:
    debian:
      command: wget -O - https://github.com/ampl/pathlib/raw/master/lib/linux64/libpath47.so > /usr/lib/x86_64-linux-gnu/libpath47.so
    fedora:
      command: wget -O - https://github.com/ampl/pathlib/raw/master/lib/linux64/libpath47.so > /usr/lib64/libpath47.so

  pythonocc:
    any:
      command: wget https://github.com/tpaviot/pythonocc-core/archive/0.16.3.tar.gz &&
               tar xvfz 0.16.3.tar.gz &&
               cd pythonocc-core-0.16.3 &&
               mkdir build &&
               cd build &&
               cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release &&
               make -j2 &&
               make install

  pythonocc-conda:
    any:
      command: wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh &&
               bash ./Miniconda-latest-Linux-x86_64.sh -b -p /opt/conda &&
               /opt/conda/bin/conda install numpy scipy lxml pytest matplotlib vtk &&
               /opt/conda/bin/conda install -c https://conda.anaconda.org/dlr-sc pythonocc-core &&
               rm /opt/conda/lib/libgfortran.so* &&
               rm /opt/conda/pkgs/*.tar.bz2 -f &&
               for i in $(ls /opt/conda/lib/libvtk*.so); do ii=$(echo $i | sed s/-.*/.so/); ln -s $i $ii ; done

               # conda is borken as of 10/03/2017: we need to install vtk by hand and the lib provided by conda ahave their name sufficex by -MV.mv.
               # So we have to create the right symlink :( --xhub

               #echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&
               #echo 'export PATH=/opt/conda/bin:$PATH' >> $HOME/.profile &&

  pythonocc-conda-dep:
    debian:
      - libgl1-mesa-glx
      - libglu1-mesa
      - libsm6
      - libice6
      - libxt6


  # deps required for oce/pythonocc install, when oce/occ sources = git repos, last version.
  oce-pythonocc-deps:
    debian:
      - libgl1-mesa-glx
      - libglu1-mesa
      - libgl1-mesa-dev
      - libglu1-mesa-dev
      - libglapi-mesa
      - libfreetype6-dev


  oce-pythonocc:
    any:
      command: git clone https://github.com/tpaviot/oce.git &&
               git clone https://github.com/tpaviot/pythonocc-core.git &&
               mkdir build &&
               cd build &&
               mkdir oce-last pythonocc &&
               cd oce-last &&
               cmake ../../oce -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release &&
               make -j 2 &&
               make install &&
               cd ../pythonocc &&
               cmake ../../pythonocc-core -DCMAKE_BUILD_TYPE=Release &&
               make install &&
               cd &&
               python -c 'import OCC'

  # ocaml package manager

  frama-c:
    any:
      command:
        opam init &&
        eval `opam config env` &&
        opam install -y frama-c &&
        git clone https://github.com/sylvainnahas/framac-werror &&
        cd framac-werror &&
        touch Werror.mli &&
        make &&
        make install

