# Templates for ci jobs - test cdash
include: 
  - ci_gitlab/gitlab-ci-siconos-templates.yml
  #- template: Code-Quality.gitlab-ci.yml

# test workflows
workflow:
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /-wip$/
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /AARG$/
      when: never
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline"'
      when: never
    - when: always

# --- First, build docker images that contains all the required dependencies to build siconos ---
# This step is optional and run only when the commit message starts with "[docker-build]"
debian-buster:docker-build:
  variables:
    IMAGE_NAME: debian-buster
  extends: .docker-build

debian-stretch:docker-build:
  variables:
    IMAGE_NAME: debian-stretch
  extends: .docker-build

ubuntu20.4-light:docker-build:
  variables:
    IMAGE_NAME: ubuntu20.04-light
  extends: .docker-build

ubuntu20.4:docker-build:
  variables:
    IMAGE_NAME: ubuntu20.04
  extends: .docker-build
  stage: docker-build-layer2
  needs: ["ubuntu20.4-light:docker-build"]

ubuntu20.4-oce:docker-build:
  variables:
    IMAGE_NAME: ubuntu20.04-oce
  extends: .docker-build
  stage: docker-build-layer3
  needs: ["ubuntu20.4:docker-build"]

ubuntu18.04:docker-build:
  variables:
    IMAGE_NAME: ubuntu18.04
  extends: .docker-build

# This job create a docker image with all required dependencies
# (including serialization, python wrapper, bullet but not OCE)
# It's based on ubuntu 18.04.
# ubuntu18.04-oce:docker-build:
#   variables:
#     IMAGE_NAME: ubuntu18.04-oce
#   extends: .docker-build
#   stage: docker-build-layer2
#   needs: ["ubuntu18.04:docker-build"]

opensuse-leap-15.0:docker-build:
  variables:
    IMAGE_NAME: opensuse-leap-15.0
  extends: .docker-build

archlinux-oce:docker-build:
  variables:
    IMAGE_NAME: archlinux-oce
  extends: .docker-build
  when: manual

centos-7:docker-build:
  variables:
    IMAGE_NAME: centos-7
  extends: .docker-build

fedora33:docker-build:
  variables:
    IMAGE_NAME: fedora-33
  extends: .docker-build

ubuntu20.4-doc:docker-build:
  variables:
    IMAGE_NAME: ubuntu20.04-doc
  extends: .docker-build
  stage: docker-build-layer3
  needs: ["ubuntu20.4:docker-build"]



ubuntu18.04:full:
      variables:
        IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu18.04
        cdash_submit: 1
        user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
      extends: .siconos-full
      
debian-buster:configure:
   variables:
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/debian-buster
     cdash_submit: 1
     user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
   extends: .siconos-configure

debian-buster:build:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/debian-buster
      cdash_submit: 1
      user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
    extends: .siconos-build
    needs: ["debian-buster:configure"]

debian-buster:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/debian-buster
      cdash_submit: 1
      user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
    needs: ["debian-buster:build"]
    extends: .siconos-test

ubuntu20.04-fclib:configure:
   variables:
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04
     cdash_submit: 1
     user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_with_fclib.cmake
   extends: .siconos-configure

ubuntu20.04-fclib:build:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04
      cdash_submit: 1
      user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_with_fclib.cmake
    extends: .siconos-build
    needs: ["ubuntu20.04-fclib:configure"]

ubuntu20.04-fclib:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04
      cdash_submit: 1
      user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_with_fclib.cmake
    needs: ["ubuntu20.04-fclib:build"]
    extends: .siconos-test

ubuntu20.04:configure:
   variables:
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04
     cdash_submit: 1
     user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
   extends: .siconos-configure

ubuntu20.04:build:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04
      cdash_submit: 1
      user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
    extends: .siconos-build
    needs: ["ubuntu20.04:configure"]

ubuntu20.04:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04
      cdash_submit: 1
      user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
    needs: ["ubuntu20.04:build"]
    extends: .siconos-test

ubuntu20.04-oce:configure:
   variables:
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04-oce
     cdash_submit: 1
     user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_with_mechanisms.cmake
   extends: .siconos-configure

ubuntu20.04-oce:build:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04-oce
      cdash_submit: 1
      user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_with_mechanisms.cmake
    extends: .siconos-build
    needs: ["ubuntu20.04-oce:configure"]

ubuntu20.04-oce:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04-oce
      cdash_submit: 1
      user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_with_mechanisms.cmake
    needs: ["ubuntu20.04-oce:build"]
    extends: .siconos-test

fedora-33:configure:
   variables:
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/fedora-33
     cdash_submit: 1
     user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
   extends: .siconos-configure

fedora-33:build:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/fedora-33
      cdash_submit: 1
      user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
    extends: .siconos-build
    needs: ["fedora-33:configure"]

fedora-33:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/fedora-33
      cdash_submit: 1
      user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
    needs: ["fedora-33:build"]
    extends: .siconos-test

# Generate sico install
#debianbuster:install:
#  variables:
#    siconos_docker_name: siconos-$CI_COMMIT_REF_NAME-debian-buster
#  extends: .siconos-install
#  needs: ["debian-buster:build"]


debianbuster:install:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/debian-buster
    siconos_docker_name: siconos-$CI_COMMIT_REF_NAME-debian-buster
  #allow_failure: true
  extends: .siconos-install
  needs: ["debian-buster:build"]

ubuntu20-oce:install:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04-oce
    siconos_docker_name: siconos-$CI_COMMIT_REF_NAME-ubuntu-fossa
  extends: .siconos-install
  needs: ["ubuntu20.04-oce:build"]

# --- Creates a new pipeline to build documentation
# Trigger : manual.
# When the job is activated (manual trigger through the web interface),
# it starts a new pipeline, i.e. includes jobs declared in docs/build-doc.yml
generate-doc:
  stage: configure
  trigger:
    include:
      - docs/build-doc.yml
  when: manual

# -- Jobs on demand --
# Triggered through the interface

archlinux-oce:
  stage: configure
  trigger:
    include:
      - ci_gitlab/archlinux-oce.yml
  when: manual
# debianbuster:
#   stage: configure
#   trigger:
#     include:
#       - ci_gitlab/debianbuster.yml
