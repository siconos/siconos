# Templates for ci jobs - test cdash
# It defines workflow rules, templates to create docker images, to configure, build siconos and so on.
include:
   - ci_gitlab/gitlab-ci-siconos-templates.yml

# --- First, build docker images that contains all the required dependencies to build siconos ---
# This step is optional and run only when the commit message starts with "[docker-build]"
debian-bookworm:docker-build:
  variables:
    IMAGE_NAME: debian-bookworm
  extends: .docker-build

fedora38:docker-build:
  variables:
    IMAGE_NAME: fedora-38
  extends: .docker-build

ubuntu22.04:docker-build:
  variables:
    IMAGE_NAME: ubuntu22.04
  extends: .docker-build

# A specific image, that will be used to install siconos,
# get examples and provide some notebooks to
# run siconos software.
jupyter-notebook:docker-build:
  variables:
    IMAGE_NAME: jupyterlab
  extends: .docker-build
  stage: docker-build

# Manual jobs, used to create docker images.
docker-manual-img:
  extends: .docker-rules
  stage: docker-build-layer2
  trigger:
    include:
      - ci_gitlab/docker-manual.yml


# -------------- Configure, build and test Siconos --------------

# -- Jobs that will always be executed (rule .devel-rules) --

# ------ ubuntu 22, debug setup -------
ubuntu22.04-debug:configure:
   variables:
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu22.04
     cdash_submit: 1
     CONF_FILE: $SICONOS_CMAKE_CONF_PATH/siconos_devmode.cmake
   extends:
    - .siconos-configure
    - .devel-rules

ubuntu22.04-debug:build:
  variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu22.04
      cdash_submit: 1
  extends:
    - .siconos-build
    - .devel-rules
  needs: ["ubuntu22.04-debug:configure"]

ubuntu22.04-debug:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu22.04
      cdash_submit: 1
    needs: ["ubuntu22.04-debug:build"]
    extends:
      - .siconos-test
      - .devel-rules

# ------ ubuntu 22, default setup -------
ubuntu22.04:configure:
   variables:
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu22.04
     cdash_submit: 1
   extends:
    - .siconos-configure
    - .devel-rules

ubuntu22.04:build:
  variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu22.04
      cdash_submit: 1
  extends:
    - .siconos-build
    - .devel-rules
  needs: ["ubuntu22.04:configure"]

ubuntu22.04:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu22.04
      cdash_submit: 1
    needs: ["ubuntu22.04:build"]
    extends:
      - .siconos-test
      - .devel-rules

# --- Siconos inside a notebook, default setup ---
jupyterlab:configure:
  variables:
     OPENBLAS_NUM_THREADS: 1
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/jupyterlab
     cdash_submit: 1
     CMAKE_PREFIX_PATH: /opt/conda
  extends:
    - .siconos-configure
    - .devel-rules

jupyterlab:build:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/jupyterlab
    cdash_submit: 1
  extends:
    - .siconos-build
    - .devel-rules
  needs: ["jupyterlab:configure"]

jupyterlab:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/jupyterlab
      cdash_submit: 1
    needs: ["jupyterlab:build"]
    extends:
    - .siconos-test
    - .devel-rules

# -- Jobs executed for MR or main branch only --

# ------ ubuntu 22, numerics only, fclib -------
ubuntu22.04-fclib:configure:
   variables:
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu22.04
     cdash_submit: 1
     CONF_FILE: $SICONOS_CMAKE_CONF_PATH/numerics_with_fclib.cmake
   extends:
    - .siconos-configure

ubuntu22.04-fclib:build:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu22.04
    cdash_submit: 1
  extends:
    - .siconos-build
  needs: ["ubuntu22.04-fclib:configure"]

ubuntu22.04-fclib:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu22.04
      cdash_submit: 1
    needs: ["ubuntu22.04-fclib:build"]
    extends:
      - .siconos-test

# ------ debian bookworm, default setup -------
debian-bookworm:configure:
  variables:
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/debian-bookworm
     cdash_submit: 1
  extends:
    - .siconos-configure

debian-bookworm:build:
  variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/debian-bookworm
      cdash_submit: 1
  extends:
    - .siconos-build
  needs: ["debian-bookworm:configure"]

debian-bookworm:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/debian-bookworm
      cdash_submit: 1
    needs: ["debian-bookworm:build"]
    extends:
      - .siconos-test

      
# --- fedora 38, default setup ---
fedora-38:configure:
  variables:
     IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/fedora-38
     cdash_submit: 1
  extends:
    - .siconos-configure

fedora-38:build:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/fedora-38
    cdash_submit: 1
  extends:
    - .siconos-build
  needs: ["fedora-38:configure"]

fedora-38:test:
    variables:
      IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/fedora-38
      cdash_submit: 1
    needs: ["fedora-38:build"]
    extends:
    - .siconos-test


# --- Jobs to install siconos and produce a Docker image "Siconos ready" ---

# Chosen OS for the install is ubuntu 22
# The image is saved in siconos-tutorials (public) registries
# Remark: branch name will be appended to image name.
# Tag will correspond to the commit ref
siconos:install:
  variables: 
    IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu22.04
    RESULT_NAME: $CI_REGISTRY/nonsmooth/siconos-tutorials/siconos
  extends:
    - .siconos-install
    - .devel-rules
  needs: ["ubuntu22.04:build"] 

# The image is saved in siconos-tutorials (public) registries
# Remark: branch name will be appended to image name.
# Tag will correspond to the commit ref
jupyterlab:install:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/jupyterlab
    RESULT_NAME: $CI_REGISTRY/nonsmooth/siconos-tutorials/siconoslab
  extends:
    - .siconos-jupyterlab-install
    - .devel-rules
  needs: ["jupyterlab:build"]

# Job run when a new tag (release) is created.
release_job:
    stage: release
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
      when: always
    script:
    - echo "running release_job"
    release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
      tag_name: '$CI_COMMIT_TAG'
      description: '$CI_COMMIT_TAG'

# Start CI in siconos-tutorials, when required
# How? Use [with examples] in your commit message.
# Based on the specific docker image build and saved during siconos:install step.
bridge:examples:
  variables:
    SICONOS_DOCKER_NAME: siconos-$CI_COMMIT_REF_NAME
    TRIGGERED: 1
  stage: examples
  trigger: 
    project: nonsmooth/siconos-tutorials
    strategy: depend
  needs: ["siconos:install"]
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[with examples\]/
    

# --- Creates a new pipeline to build documentation
# Trigger : manual.
# When the job is activated (manual trigger through the web interface),
# it starts a new pipeline, i.e. includes jobs declared in docs/build-doc.yml
generate-doc:
  stage: configure
  trigger:
    include:
      - docs/build-doc.yml
  when: manual

# -- Jobs on demand --
# Triggered through the interface
# Build siconos with oce component
siconos-oce:
  stage: configure
  trigger:
    include:
      - ci_gitlab/siconos-with-oce.yml
  when: manual


ubuntu20.04:full:
      variables:
        IMAGE_NAME: $CI_REGISTRY_IMAGE/sources/ubuntu20.04
        cdash_submit: 1
      extends:
        - .siconos-full
      when: manual
