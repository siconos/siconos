
This doc shall explain how a few Siconos developer internals work.

* Docstring conventions

Numpy convention

https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt


* Serialization

** Generated headers

The headers SiconosFullGenerated.hpp and SiconosKernelGenerated.hpp
are generated from the Siconos headers.  We do not re-generate these
at every build, and therefore they are committed to the repository,
however from time to time as Siconos evolves they need to be updated.

Previously we used gccxml, however now we use the XML output of
Doxygen.  Therefore to generate these headers you must compile with
the following flags:

    cmake <siconos_dir> -DWITH_SERIALIZATION=ON -DWITH_GENERATION=ON -DWITH_DOCUMENTATION=ON -DWITH_DOXY2SWIG=ON

When WITH_GENERATION=ON, then io/src/SiconosFullGenerated.hpp will be deleted!

Now run,

    make SerializersGeneration

to re-generate it.  It will call a script in io/src/tools called build_from_doxygen.py.

* Packaging

** Debian package

Information on how to manage and update the Debian package can be
found in Build/debian/README-debian-packaging.org.
* Testing

You can test all examples by running cmake in the examples directory:

#+BEGIN_SRC shell
mkdir build_examples
cd build_examples
cmake <path to siconos>/examples
make
#+END_SRC
