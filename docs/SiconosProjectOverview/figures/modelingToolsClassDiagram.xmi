<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>3.0.0</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="modelingToolsClassDiagram" href="/scratch/Franck/SicoTmp/siconos/trunk/Docs/Dev/figures/modelingToolsClassDiagram.xmi" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <docsettings viewid="1" documentation="" uniqueid="1396" />
  <UML:Model>
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="2" name="int" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="3" name="char" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="4" name="bool" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="5" name="float" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="6" name="double" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="7" name="long" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="8" name="short" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="9" name="string" />
   <UML:Class stereotype="class" visibility="public" xmi.id="10" name="PeriodicBC" >
    <UML:Operation visibility="public" xmi.id="11" type="" name="PeriodicBC" />
    <UML:Operation visibility="public" xmi.id="12" type="" name="PeriodicBC" >
     <UML:Parameter visibility="private" xmi.id="13" value="" type="BoundaryConditionXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="14" type="PeriodicBC *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="15" value="" type="BoundaryCondition *" name="bc" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="16" type="void" name="createBoundaryCondition" >
     <UML:Parameter visibility="private" xmi.id="17" value="" type="BoundaryConditionXML *" name="bcXML" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="18" type="void" name="fillBCWithBCXML" />
    <UML:Operation visibility="public" xmi.id="19" type="void" name="saveBCToXML" />
    <UML:Operation visibility="public" xmi.id="20" type="" name="~PeriodicBC" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="21" name="LinearBC" >
    <UML:Operation visibility="public" xmi.id="25" type="" name="LinearBC" />
    <UML:Operation visibility="public" xmi.id="26" type="" name="LinearBC" >
     <UML:Parameter visibility="private" xmi.id="27" value="" type="BoundaryConditionXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="28" type="LinearBC *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="29" value="" type="BoundaryCondition *" name="bc" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="30" type="void" name="createBoundaryCondition" >
     <UML:Parameter visibility="private" xmi.id="31" value="" type="BoundaryConditionXML *" name="bcXML" />
     <UML:Parameter visibility="private" xmi.id="32" value="" type="SiconosVector *" name="omega" />
     <UML:Parameter visibility="private" xmi.id="33" value="" type="SiconosMatrix *" name="omega0" />
     <UML:Parameter visibility="private" xmi.id="34" value="" type="SiconosMatrix *" name="omegaT" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="35" type="void" name="fillBCWithBCXML" />
    <UML:Operation visibility="public" xmi.id="36" type="SimpleVector" name="getOmega" />
    <UML:Operation visibility="public" xmi.id="37" type="SiconosMatrix" name="getOmega0" />
    <UML:Operation visibility="public" xmi.id="38" type="SiconosMatrix" name="getOmegaT" />
    <UML:Operation visibility="public" xmi.id="39" type="void" name="saveBCToXML" />
    <UML:Operation visibility="public" xmi.id="40" type="void" name="setOmega" >
     <UML:Parameter visibility="private" xmi.id="41" value="" type="SimpleVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="42" type="void" name="setOmega0" >
     <UML:Parameter visibility="private" xmi.id="43" value="" type="SiconosMatrix &amp;" name="M" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="44" type="void" name="setOmegaT" >
     <UML:Parameter visibility="private" xmi.id="45" value="" type="SiconosMatrix &amp;" name="M" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="46" type="" name="~LinearBC" />
    <UML:Attribute visibility="private" xmi.id="22" value="" type="SimpleVector" name="omega" />
    <UML:Attribute visibility="private" xmi.id="23" value="" type="SiconosMatrix" name="omega0" />
    <UML:Attribute visibility="private" xmi.id="24" value="" type="SiconosMatrix" name="omegaT" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="47" name="NonSmoothDynamicalSystem" >
    <UML:Operation visibility="public" xmi.id="53" type="" name="NonSmoothDynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="54" value="" type="NSDSXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="55" type="" name="NonSmoothDynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="56" value="" type="const NonSmoothDynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="57" type="" name="NonSmoothDynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="58" value="" type="const bool &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="59" type="void" name="addDynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="60" value="" type="DynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="61" type="void" name="addEqualityConstraint" >
     <UML:Parameter visibility="private" xmi.id="62" value="" type="EqualityConstraint *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="63" type="void" name="addInteraction" >
     <UML:Parameter visibility="private" xmi.id="64" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="65" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="66" type="const int" name="getDSVectorSize" />
    <UML:Operation visibility="public" xmi.id="67" type="DynamicalSystem *" name="getDynamicalSystemPtr" >
     <UML:Parameter visibility="private" xmi.id="68" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="69" type="DynamicalSystem *" name="getDynamicalSystemPtrNumber" >
     <UML:Parameter visibility="private" xmi.id="70" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="71" type="EqualityConstraint *" name="getEqualityConstraintPtr" >
     <UML:Parameter visibility="private" xmi.id="72" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="73" type="Interaction *" name="getInteractionPtr" >
     <UML:Parameter visibility="private" xmi.id="74" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="75" type="Interaction *" name="getInteractionPtrNumber" >
     <UML:Parameter visibility="private" xmi.id="76" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="77" type="const int" name="getInteractionVectorSize" />
    <UML:Operation visibility="public" xmi.id="78" type="NSDSXML *" name="getNSDSXMLPtr" />
    <UML:Operation visibility="public" xmi.id="79" type="Topology *" name="getTopologyPtr" />
    <UML:Operation visibility="public" xmi.id="80" type="bool" name="hasDynamicalSystemNumber" >
     <UML:Parameter visibility="private" xmi.id="81" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="82" type="bool" name="hasInteractionNumber" >
     <UML:Parameter visibility="private" xmi.id="83" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="84" type="const bool" name="isBVP" />
    <UML:Operation visibility="public" xmi.id="85" type="const bool" name="isIVP" />
    <UML:Operation visibility="public" xmi.id="86" type="double" name="nsdsConvergenceIndicator" />
    <UML:Operation visibility="public" xmi.id="87" type="void" name="saveNSDSToXML" />
    <UML:Operation visibility="public" xmi.id="88" type="void" name="setBVP" >
     <UML:Parameter visibility="private" xmi.id="89" value="" type="const bool &amp;" name="newBvp" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="90" type="void" name="setDynamicalSystems" >
     <UML:Parameter visibility="private" xmi.id="91" value="" type="const std :: vector &lt; DynamicalSystem * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="92" type="void" name="setEqualityConstraints" >
     <UML:Parameter visibility="private" xmi.id="93" value="" type="const std :: vector &lt; EqualityConstraint * > &amp;" name="newEcVect" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="94" type="void" name="setInteractions" >
     <UML:Parameter visibility="private" xmi.id="95" value="" type="const std :: vector &lt; Interaction * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="96" type="void" name="setNSDSXMLPtr" >
     <UML:Parameter visibility="private" xmi.id="97" value="" type="NSDSXML *" name="newNsdsxml" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="98" type="" name="~NonSmoothDynamicalSystem" />
    <UML:Attribute visibility="private" xmi.id="48" value="" type="bool" name="BVP" />
    <UML:Attribute visibility="private" xmi.id="49" value="" type="bool" name="isTopologyAllocatedIn" />
    <UML:Attribute visibility="private" xmi.id="50" value="" type="NSDSXML *" name="nsdsxml" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="51" name="Topology" >
    <UML:Operation visibility="protected" xmi.id="241" type="" name="Topology" />
    <UML:Operation visibility="public" xmi.id="242" type="" name="Topology" >
     <UML:Parameter visibility="private" xmi.id="243" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="244" type="void" name="computeEffectiveSizeOutput" />
    <UML:Operation visibility="public" xmi.id="245" type="unsigned int" name="computeEffectiveSizeOutput" >
     <UML:Parameter visibility="private" xmi.id="246" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="247" type="void" name="computeIndexMinMap" />
    <UML:Operation visibility="public" xmi.id="248" type="void" name="computeInteractionEffectivePositionMap" />
    <UML:Operation visibility="protected" xmi.id="249" type="void" name="computeLinkedInteractionMap" />
    <UML:Operation visibility="protected" xmi.id="250" type="void" name="computeRelativeDegreesMap" />
    <UML:Operation visibility="public" xmi.id="251" type="const unsigned int" name="getEffectiveSizeOutput" />
    <UML:Operation visibility="public" xmi.id="252" type="const unsigned int" name="getInteractionEffectivePosition" >
     <UML:Parameter visibility="private" xmi.id="253" value="" type="Interaction *" name="inter" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="254" type="bool" name="isTimeInvariant" />
    <UML:Operation visibility="public" xmi.id="255" type="bool" name="isUpToDate" />
    <UML:Operation visibility="public" xmi.id="256" type="void" name="setEffectiveIndexes" >
     <UML:Parameter visibility="private" xmi.id="257" value="" type="Interaction *" name="inter" />
     <UML:Parameter visibility="private" xmi.id="258" value="" type="const std :: vector &lt; unsigned int > &amp;" name="index" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="259" type="void" name="setEffectiveSizeOutput" >
     <UML:Parameter visibility="private" xmi.id="260" value="" type="const unsigned int &amp;" name="newVal" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="261" type="void" name="setIndexMax" >
     <UML:Parameter visibility="private" xmi.id="262" value="" type="Interaction *" name="inter" />
     <UML:Parameter visibility="private" xmi.id="263" value="" type="const std :: vector &lt; unsigned int > &amp;" name="index" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="264" type="void" name="setTimeInvariant" >
     <UML:Parameter visibility="private" xmi.id="265" value="" type="const bool &amp;" name="val" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="266" type="void" name="setUpToDate" >
     <UML:Parameter visibility="private" xmi.id="267" value="" type="const bool &amp;" name="val" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="268" type="void" name="updateTopology" />
    <UML:Operation visibility="public" xmi.id="269" type="" name="~Topology" />
    <UML:Attribute visibility="private" xmi.id="237" value="" type="unsigned int" name="effectiveSizeOutput" />
    <UML:Attribute visibility="private" xmi.id="238" value="" type="bool" name="isTopologyTimeInvariant" />
    <UML:Attribute visibility="private" xmi.id="239" value="" type="bool" name="isTopologyUpToDate" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="99" name="LagrangianLinearEC" >
    <UML:Operation visibility="public" xmi.id="102" type="" name="LagrangianLinearEC" />
    <UML:Operation visibility="public" xmi.id="103" type="" name="LagrangianLinearEC" >
     <UML:Parameter visibility="private" xmi.id="104" value="" type="EqualityConstraintXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="105" type="" name="LagrangianLinearEC" >
     <UML:Parameter visibility="private" xmi.id="106" value="" type="SiconosMatrix" />
     <UML:Parameter visibility="private" xmi.id="107" value="" type="SimpleVector" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="108" type="void" name="computeFreeOutput" >
     <UML:Parameter visibility="private" xmi.id="109" value="" type="double" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="110" type="void" name="computeInput" >
     <UML:Parameter visibility="private" xmi.id="111" value="" type="double" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="112" type="void" name="computeOutput" >
     <UML:Parameter visibility="private" xmi.id="113" value="" type="double" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="114" type="LagrangianLinearEC *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="115" value="" type="EqualityConstraint *" name="ec" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="116" type="void" name="createEqualityConstraint" >
     <UML:Parameter visibility="private" xmi.id="117" value="" type="EqualityConstraintXML *" name="ecXML" />
     <UML:Parameter visibility="private" xmi.id="118" value="" type="SiconosMatrix *" name="H" />
     <UML:Parameter visibility="private" xmi.id="119" value="" type="SiconosVector *" name="b" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="120" type="void" name="display" />
    <UML:Operation visibility="protected" xmi.id="121" type="void" name="fillEqualityConstraintWithEqualityConstraintXML" />
    <UML:Operation visibility="public" xmi.id="122" type="SimpleVector" name="getB" />
    <UML:Operation visibility="public" xmi.id="123" type="SiconosVector *" name="getBPtr" />
    <UML:Operation visibility="public" xmi.id="124" type="SiconosMatrix" name="getH" />
    <UML:Operation visibility="public" xmi.id="125" type="SiconosMatrix *" name="getHPtr" />
    <UML:Operation visibility="public" xmi.id="126" type="void" name="saveEqualityConstraintToXML" />
    <UML:Operation visibility="public" xmi.id="127" type="void" name="setB" >
     <UML:Parameter visibility="private" xmi.id="128" value="" type="SimpleVector &amp;" name="B" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="129" type="void" name="setH" >
     <UML:Parameter visibility="private" xmi.id="130" value="" type="const SiconosMatrix &amp;" name="H" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="131" type="" name="~LagrangianLinearEC" />
    <UML:Attribute visibility="private" xmi.id="100" value="" type="SimpleVector" name="b" />
    <UML:Attribute visibility="private" xmi.id="101" value="" type="SiconosMatrix" name="h" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="132" name="Relation" >
    <UML:Operation visibility="public" xmi.id="137" type="" name="Relation" >
     <UML:Parameter visibility="private" xmi.id="138" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="139" type="" name="Relation" >
     <UML:Parameter visibility="private" xmi.id="140" value="" type="RelationXML *" />
     <UML:Parameter visibility="private" xmi.id="141" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="142" type="" name="Relation" >
     <UML:Parameter visibility="private" xmi.id="143" value="" type="const Relation &amp;" />
     <UML:Parameter visibility="private" xmi.id="144" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="145" type="void" name="addDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="146" value="" type="DSInputOutput *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="147" type="virtual void" name="computeFreeOutput" >
     <UML:Parameter visibility="private" xmi.id="148" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="149" type="virtual void" name="computeInput" >
     <UML:Parameter visibility="private" xmi.id="150" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="151" type="virtual void" name="computeOutput" >
     <UML:Parameter visibility="private" xmi.id="152" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="153" type="DSInputOutput *" name="getDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="154" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="155" type="Interaction *" name="getInteractionPtr" />
    <UML:Operation visibility="public" xmi.id="156" type="RelationXML *" name="getRelationXML" />
    <UML:Operation visibility="public" xmi.id="157" type="virtual void" name="setComputeInputFunction" >
     <UML:Parameter visibility="private" xmi.id="158" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="159" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="160" type="virtual void" name="setComputeOutputFunction" >
     <UML:Parameter visibility="private" xmi.id="161" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="162" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="163" type="void" name="setDSInputOutputs" >
     <UML:Parameter visibility="private" xmi.id="164" value="" type="std :: vector &lt; DSInputOutput * >" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="165" type="void" name="setInteractionPtr" >
     <UML:Parameter visibility="private" xmi.id="166" value="" type="Interaction *" name="i" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="167" type="void" name="setRelationXML" >
     <UML:Parameter visibility="private" xmi.id="168" value="" type="RelationXML *" name="rxml" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="169" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="170" value="" type="*" name="computeInputPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="171" type="virtual " name="~Relation" />
    <UML:Attribute visibility="protected" xmi.id="133" value="" type="SiconosSharedLibrary" name="cShared" />
    <UML:Attribute visibility="protected" xmi.id="136" value="" type="RelationXML *" name="relationxml" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="134" name="Interaction" >
    <UML:Operation visibility="protected" xmi.id="476" type="" name="Interaction" />
    <UML:Operation visibility="public" xmi.id="477" type="" name="Interaction" >
     <UML:Parameter visibility="private" xmi.id="478" value="" type="InteractionXML *" />
     <UML:Parameter visibility="private" xmi.id="479" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="480" type="" name="Interaction" >
     <UML:Parameter visibility="private" xmi.id="481" value="" type="const Interaction &amp;" name="inter" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="482" type="" name="Interaction" >
     <UML:Parameter visibility="private" xmi.id="483" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="484" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="485" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="486" value="" type="std :: vector &lt; DynamicalSystem * > *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="487" type="NonSmoothLaw *" name="createComplementarityConditionNSL" />
    <UML:Operation visibility="public" xmi.id="488" type="NonSmoothLaw *" name="createNewtonImpactFrictionNSL" >
     <UML:Parameter visibility="private" xmi.id="489" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="490" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="491" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="492" type="NonSmoothLaw *" name="createNewtonImpactLawNSL" >
     <UML:Parameter visibility="private" xmi.id="493" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="494" type="NonSmoothLaw *" name="createRelayNSL" >
     <UML:Parameter visibility="private" xmi.id="495" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="496" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="497" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="498" type="DynamicalSystem" name="getDynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="499" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="500" type="DynamicalSystem *" name="getDynamicalSystemPtr" >
     <UML:Parameter visibility="private" xmi.id="501" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="502" type="InteractionXML *" name="getInteractionXMLPtr" />
    <UML:Operation visibility="public" xmi.id="503" type="const SimpleVector" name="getLambda" >
     <UML:Parameter visibility="private" xmi.id="504" value="" type="const unsigned int &amp;" name="i" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="505" type="const SimpleVector" name="getLambdaOld" >
     <UML:Parameter visibility="private" xmi.id="506" value="" type="const unsigned int &amp;" name="i" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="507" type="SimpleVector *" name="getLambdaOldPtr" >
     <UML:Parameter visibility="private" xmi.id="508" value="" type="const unsigned int &amp;" name="i" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="509" type="SimpleVector *" name="getLambdaPtr" >
     <UML:Parameter visibility="private" xmi.id="510" value="" type="const unsigned int &amp;" name="i" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="511" type="const unsigned int" name="getNInteraction" />
    <UML:Operation visibility="public" xmi.id="512" type="NonSmoothLaw *" name="getNonSmoothLawPtr" />
    <UML:Operation visibility="public" xmi.id="513" type="const int" name="getNumber" />
    <UML:Operation visibility="public" xmi.id="514" type="Relation *" name="getRelationPtr" />
    <UML:Operation visibility="public" xmi.id="515" type="const SimpleVector" name="getY" >
     <UML:Parameter visibility="private" xmi.id="516" value="" type="const unsigned int &amp;" name="i" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="517" type="const SimpleVector" name="getYOld" >
     <UML:Parameter visibility="private" xmi.id="518" value="" type="const unsigned int &amp;" name="i" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="519" type="SimpleVector *" name="getYOldPtr" >
     <UML:Parameter visibility="private" xmi.id="520" value="" type="const unsigned int &amp;" name="i" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="521" type="SimpleVector *" name="getYPtr" >
     <UML:Parameter visibility="private" xmi.id="522" value="" type="const unsigned int &amp;" name="i" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="523" type="void" name="saveInteractionToXML" />
    <UML:Operation visibility="public" xmi.id="524" type="void" name="setDynamicalSystems" >
     <UML:Parameter visibility="private" xmi.id="525" value="" type="const std :: vector &lt; DynamicalSystem * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="526" type="void" name="setId" >
     <UML:Parameter visibility="private" xmi.id="527" value="" type="const int &amp;" name="newId" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="528" type="void" name="setInteractionXMLPtr" >
     <UML:Parameter visibility="private" xmi.id="529" value="" type="InteractionXML *" name="interxml" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="530" type="void" name="setLambda" >
     <UML:Parameter visibility="private" xmi.id="531" value="" type="const std :: vector &lt; SimpleVector * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="532" type="void" name="setLambda" >
     <UML:Parameter visibility="private" xmi.id="533" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="534" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="535" type="void" name="setLambdaOld" >
     <UML:Parameter visibility="private" xmi.id="536" value="" type="const std :: vector &lt; SimpleVector * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="537" type="void" name="setLambdaOld" >
     <UML:Parameter visibility="private" xmi.id="538" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="539" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="540" type="void" name="setLambdaOldPtr" >
     <UML:Parameter visibility="private" xmi.id="541" value="" type="const std :: vector &lt; SimpleVector * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="542" type="void" name="setLambdaOldPtr" >
     <UML:Parameter visibility="private" xmi.id="543" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="544" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="545" type="void" name="setLambdaPtr" >
     <UML:Parameter visibility="private" xmi.id="546" value="" type="const std :: vector &lt; SimpleVector * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="547" type="void" name="setLambdaPtr" >
     <UML:Parameter visibility="private" xmi.id="548" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="549" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="550" type="void" name="setNInteraction" >
     <UML:Parameter visibility="private" xmi.id="551" value="" type="const unsigned int &amp;" name="nInter" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="552" type="void" name="setNonSmoothLawPtr" >
     <UML:Parameter visibility="private" xmi.id="553" value="" type="NonSmoothLaw *" name="newNslaw" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="554" type="void" name="setNumber" >
     <UML:Parameter visibility="private" xmi.id="555" value="" type="const int &amp;" name="newNumber" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="556" type="void" name="setRelationPtr" >
     <UML:Parameter visibility="private" xmi.id="557" value="" type="Relation *" name="newRelation" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="558" type="void" name="setY" >
     <UML:Parameter visibility="private" xmi.id="559" value="" type="const std :: vector &lt; SimpleVector * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="560" type="void" name="setY" >
     <UML:Parameter visibility="private" xmi.id="561" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="562" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="563" type="void" name="setYOld" >
     <UML:Parameter visibility="private" xmi.id="564" value="" type="const std :: vector &lt; SimpleVector * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="565" type="void" name="setYOld" >
     <UML:Parameter visibility="private" xmi.id="566" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="567" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="568" type="void" name="setYOldPtr" >
     <UML:Parameter visibility="private" xmi.id="569" value="" type="const std :: vector &lt; SimpleVector * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="570" type="void" name="setYOldPtr" >
     <UML:Parameter visibility="private" xmi.id="571" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="572" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="573" type="void" name="setYPtr" >
     <UML:Parameter visibility="private" xmi.id="574" value="" type="const std :: vector &lt; SimpleVector * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="575" type="void" name="setYPtr" >
     <UML:Parameter visibility="private" xmi.id="576" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="577" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="578" type="void" name="swapInMemory" />
    <UML:Operation visibility="public" xmi.id="579" type="" name="~Interaction" />
    <UML:Attribute visibility="private" xmi.id="468" value="" type="InteractionXML *" name="interactionxml" />
    <UML:Attribute visibility="private" xmi.id="469" value="" type="bool" name="isNsLawAllocatedIn" />
    <UML:Attribute visibility="private" xmi.id="470" value="" type="bool" name="isRelationAllocatedIn" />
    <UML:Attribute visibility="private" xmi.id="471" value="" type="unsigned int" name="nInteraction" />
    <UML:Attribute visibility="private" xmi.id="474" value="" type="int" name="number" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="172" name="DSInputOutput" >
    <UML:Operation visibility="public" xmi.id="177" type="" name="DSInputOutput" />
    <UML:Operation visibility="public" xmi.id="178" type="" name="DSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="179" value="" type="DSInputOutputXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="180" type="void" name="createDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="181" value="" type="DSInputOutputXML *" name="dsioXML" />
     <UML:Parameter visibility="private" xmi.id="182" value="" type="int" name="number" />
     <UML:Parameter visibility="private" xmi.id="183" value="" type="std :: string" name="computeInput" />
     <UML:Parameter visibility="private" xmi.id="184" value="" type="std :: string" name="computeOutput" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="185" type="void" name="display" />
    <UML:Operation visibility="protected" xmi.id="186" type="void" name="fillDSInputOutputWithDSInputOutputXML" />
    <UML:Operation visibility="public" xmi.id="187" type="DSInputOutputXML *" name="getDSInputOutputXML" />
    <UML:Operation visibility="public" xmi.id="188" type="SiconosMatrix *" name="getHPtr" />
    <UML:Operation visibility="public" xmi.id="189" type="int" name="getNumber" />
    <UML:Operation visibility="protected" xmi.id="190" type="virtual void" name="init" />
    <UML:Operation visibility="public" xmi.id="191" type="void" name="saveDSInputOutputToXML" />
    <UML:Operation visibility="public" xmi.id="192" type="virtual void" name="setComputeInputFunction" >
     <UML:Parameter visibility="private" xmi.id="193" value="" type="std :: string" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="194" value="" type="std :: string" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="195" type="virtual void" name="setComputeOutputFunction" >
     <UML:Parameter visibility="private" xmi.id="196" value="" type="std :: string" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="197" value="" type="std :: string" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="198" type="void" name="setDSInputOutputXML" >
     <UML:Parameter visibility="private" xmi.id="199" value="" type="DSInputOutputXML *" name="rxml" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="200" type="void" name="setDynamicalSystems" >
     <UML:Parameter visibility="private" xmi.id="201" value="" type="const std :: vector &lt; DynamicalSystem * > dsVect" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="202" type="void" name="setH" >
     <UML:Parameter visibility="private" xmi.id="203" value="" type="SiconosMatrix &amp;" name="H" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="204" type="void" name="setId" >
     <UML:Parameter visibility="private" xmi.id="205" value="" type="const std :: string" name="id" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="206" type="void" name="setNumber" >
     <UML:Parameter visibility="private" xmi.id="207" value="" type="const int" name="number" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="208" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="209" value="" type="*" name="computeInputPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="210" type="virtual " name="~DSInputOutput" />
    <UML:Attribute visibility="protected" xmi.id="173" value="" type="SiconosMatrix" name="H" />
    <UML:Attribute visibility="protected" xmi.id="174" value="" type="SiconosSharedLibrary" name="cShared" />
    <UML:Attribute visibility="protected" xmi.id="175" value="" type="DSInputOutputXML *" name="dsioxml" />
    <UML:Attribute visibility="protected" xmi.id="176" value="" type="int" name="number" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="211" name="NewtonImpactFrictionNSL" >
    <UML:Operation visibility="public" xmi.id="215" type="" name="NewtonImpactFrictionNSL" />
    <UML:Operation visibility="public" xmi.id="216" type="" name="NewtonImpactFrictionNSL" >
     <UML:Parameter visibility="private" xmi.id="217" value="" type="NonSmoothLawXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="218" type="" name="NewtonImpactFrictionNSL" >
     <UML:Parameter visibility="private" xmi.id="219" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="220" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="221" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="222" type="NewtonImpactFrictionNSL *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="223" value="" type="NonSmoothLaw *" name="nsl" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="224" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="225" type="const double" name="getEn" />
    <UML:Operation visibility="public" xmi.id="226" type="const double" name="getEt" />
    <UML:Operation visibility="public" xmi.id="227" type="const double" name="getMu" />
    <UML:Operation visibility="public" xmi.id="228" type="bool" name="isVerified" />
    <UML:Operation visibility="public" xmi.id="229" type="void" name="saveNonSmoothLawToXML" />
    <UML:Operation visibility="public" xmi.id="230" type="void" name="setEn" >
     <UML:Parameter visibility="private" xmi.id="231" value="" type="const double &amp;" name="newVal" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="232" type="void" name="setEt" >
     <UML:Parameter visibility="private" xmi.id="233" value="" type="const double &amp;" name="newVal" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="234" type="void" name="setMu" >
     <UML:Parameter visibility="private" xmi.id="235" value="" type="const double &amp;" name="newVal" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="236" type="" name="~NewtonImpactFrictionNSL" />
    <UML:Attribute visibility="private" xmi.id="212" value="" type="double" name="en" />
    <UML:Attribute visibility="private" xmi.id="213" value="" type="double" name="et" />
    <UML:Attribute visibility="private" xmi.id="214" value="" type="double" name="mu" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="270" name="BoundaryCondition" >
    <UML:Operation visibility="public" xmi.id="272" type="" name="BoundaryCondition" />
    <UML:Operation visibility="public" xmi.id="273" type="" name="BoundaryCondition" >
     <UML:Parameter visibility="private" xmi.id="274" value="" type="BoundaryConditionXML *" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="275" type="virtual void" name="fillBCWithBCXML" />
    <UML:Operation visibility="public" xmi.id="276" type="void" name="setBoundaryConditionXML" >
     <UML:Parameter visibility="private" xmi.id="277" value="" type="BoundaryConditionXML *" name="bcxml" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="278" type="virtual " name="~BoundaryCondition" />
    <UML:Attribute visibility="protected" xmi.id="271" value="" type="BoundaryConditionXML *" name="bcXML" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="279" name="RelayNSL" >
    <UML:Operation visibility="public" xmi.id="282" type="" name="RelayNSL" />
    <UML:Operation visibility="public" xmi.id="283" type="" name="RelayNSL" >
     <UML:Parameter visibility="private" xmi.id="284" value="" type="NonSmoothLawXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="285" type="" name="RelayNSL" >
     <UML:Parameter visibility="private" xmi.id="286" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="287" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="288" type="RelayNSL *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="289" value="" type="NonSmoothLaw *" name="nsl" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="290" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="291" type="const double" name="getC" />
    <UML:Operation visibility="public" xmi.id="292" type="const double" name="getD" />
    <UML:Operation visibility="public" xmi.id="293" type="bool" name="isVerified" />
    <UML:Operation visibility="public" xmi.id="294" type="void" name="saveNonSmoothLawToXML" />
    <UML:Operation visibility="public" xmi.id="295" type="void" name="setC" >
     <UML:Parameter visibility="private" xmi.id="296" value="" type="const double &amp;" name="newVal" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="297" type="void" name="setD" >
     <UML:Parameter visibility="private" xmi.id="298" value="" type="const double &amp;" name="newVal" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="299" type="" name="~RelayNSL" />
    <UML:Attribute visibility="private" xmi.id="280" value="" type="double" name="c" />
    <UML:Attribute visibility="private" xmi.id="281" value="" type="double" name="d" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="300" name="ComplementarityConditionNSL" >
    <UML:Operation visibility="public" xmi.id="301" type="" name="ComplementarityConditionNSL" />
    <UML:Operation visibility="public" xmi.id="302" type="" name="ComplementarityConditionNSL" >
     <UML:Parameter visibility="private" xmi.id="303" value="" type="NonSmoothLawXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="304" type="ComplementarityConditionNSL *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="305" value="" type="NonSmoothLaw *" name="nsl" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="306" type="bool" name="isVerified" />
    <UML:Operation visibility="public" xmi.id="307" type="void" name="saveNonSmoothLawToXML" />
    <UML:Operation visibility="public" xmi.id="308" type="" name="~ComplementarityConditionNSL" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="309" name="LinearDSIO" >
    <UML:Operation visibility="public" xmi.id="312" type="" name="LinearDSIO" />
    <UML:Operation visibility="public" xmi.id="313" type="" name="LinearDSIO" >
     <UML:Parameter visibility="private" xmi.id="314" value="" type="DSInputOutputXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="315" type="void" name="createDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="316" value="" type="DSInputOutputXML *" name="dsioXML" />
     <UML:Parameter visibility="private" xmi.id="317" value="" type="int" name="number" />
     <UML:Parameter visibility="private" xmi.id="318" value="" type="SiconosMatrix *" name="A" />
     <UML:Parameter visibility="private" xmi.id="319" value="" type="SiconosMatrix *" name="B" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="320" type="void" name="fillDSInputOutputWithDSInputOutputXML" />
    <UML:Operation visibility="public" xmi.id="321" type="void" name="saveDSInputOutputToXML" />
    <UML:Operation visibility="public" xmi.id="322" type="" name="~LinearDSIO" />
    <UML:Attribute visibility="private" xmi.id="310" value="" type="SiconosMatrix" name="A" />
    <UML:Attribute visibility="private" xmi.id="311" value="" type="SiconosMatrix" name="B" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="323" name="LagrangianDSIO" >
    <UML:Operation visibility="public" xmi.id="325" type="" name="LagrangianDSIO" />
    <UML:Operation visibility="protected" xmi.id="326" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="327" value="" type="*" name="computeInputPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="328" type="" name="~LagrangianDSIO" />
    <UML:Attribute visibility="private" xmi.id="324" value="" type="SiconosSharedLibrary" name="cShared" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="329" name="LagrangianLinearDSIO" >
    <UML:Operation visibility="public" xmi.id="332" type="" name="LagrangianLinearDSIO" />
    <UML:Operation visibility="public" xmi.id="333" type="" name="LagrangianLinearDSIO" >
     <UML:Parameter visibility="private" xmi.id="334" value="" type="DSInputOutputXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="335" type="void" name="computeFreeOutput" >
     <UML:Parameter visibility="private" xmi.id="336" value="" type="double" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="337" type="void" name="computeInput" >
     <UML:Parameter visibility="private" xmi.id="338" value="" type="double" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="339" type="void" name="computeOutput" >
     <UML:Parameter visibility="private" xmi.id="340" value="" type="double" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="341" type="LagrangianLinearDSIO *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="342" value="" type="DSInputOutput *" name="r" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="343" type="void" name="createDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="344" value="" type="DSInputOutputXML *" name="dsioXML" />
     <UML:Parameter visibility="private" xmi.id="345" value="" type="SiconosMatrix *" name="H" />
     <UML:Parameter visibility="private" xmi.id="346" value="" type="SiconosVector *" name="b" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="347" type="void" name="display" />
    <UML:Operation visibility="protected" xmi.id="348" type="void" name="fillDSInputOutputWithDSInputOutputXML" />
    <UML:Operation visibility="public" xmi.id="349" type="SimpleVector" name="getB" />
    <UML:Operation visibility="public" xmi.id="350" type="SiconosVector *" name="getBPtr" />
    <UML:Operation visibility="public" xmi.id="351" type="SiconosMatrix" name="getH" />
    <UML:Operation visibility="public" xmi.id="352" type="SiconosMatrix *" name="getHPtr" />
    <UML:Operation visibility="public" xmi.id="353" type="void" name="saveDSInputOutputToXML" />
    <UML:Operation visibility="public" xmi.id="354" type="void" name="setB" >
     <UML:Parameter visibility="private" xmi.id="355" value="" type="SimpleVector &amp;" name="B" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="356" type="void" name="setH" >
     <UML:Parameter visibility="private" xmi.id="357" value="" type="const SiconosMatrix &amp;" name="H" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="358" type="virtual " name="~LagrangianLinearDSIO" />
    <UML:Attribute visibility="private" xmi.id="330" value="" type="SiconosMatrix" name="H" />
    <UML:Attribute visibility="private" xmi.id="331" value="" type="SimpleVector" name="b" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="359" name="LinearEC" >
    <UML:Operation visibility="public" xmi.id="360" type="" name="LinearEC" />
    <UML:Operation visibility="public" xmi.id="361" type="" name="LinearEC" >
     <UML:Parameter visibility="private" xmi.id="362" value="" type="EqualityConstraintXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="363" type="void" name="createEqualityConstraint" >
     <UML:Parameter visibility="private" xmi.id="364" value="" type="EqualityConstraintXML *" name="ecXML" />
     <UML:Parameter visibility="private" xmi.id="365" value="" type="int" name="number" />
     <UML:Parameter visibility="private" xmi.id="366" value="" type="SiconosMatrix *" name="G" />
     <UML:Parameter visibility="private" xmi.id="367" value="" type="std :: vector &lt; DSInputOutput * > *" name="dsioVector" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="368" type="virtual " name="~LinearEC" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="369" name="LinearDS" >
    <UML:Operation visibility="protected" xmi.id="375" type="" name="LinearDS" />
    <UML:Operation visibility="public" xmi.id="376" type="" name="LinearDS" >
     <UML:Parameter visibility="private" xmi.id="377" value="" type="DSXML *" name="dsXML" />
     <UML:Parameter visibility="private" xmi.id="378" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="379" type="" name="LinearDS" >
     <UML:Parameter visibility="private" xmi.id="380" value="" type="const DynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="381" type="" name="LinearDS" >
     <UML:Parameter visibility="private" xmi.id="382" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="383" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="384" value="" type="const SiconosVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="385" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="386" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="387" type="" name="LinearDS" >
     <UML:Parameter visibility="private" xmi.id="388" value="" type="const int &amp;" name="newNumber" />
     <UML:Parameter visibility="private" xmi.id="389" value="" type="const SiconosVector &amp;" name="newX0" />
     <UML:Parameter visibility="private" xmi.id="390" value="" type="const SiconosMatrix &amp;" name="newA" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="391" type="void" name="computeA" >
     <UML:Parameter visibility="private" xmi.id="392" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="393" type="void" name="computeB" >
     <UML:Parameter visibility="private" xmi.id="394" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="395" type="LinearDS *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="396" value="" type="DynamicalSystem *" name="ds" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="397" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="398" type="const SiconosMatrix" name="getA" />
    <UML:Operation visibility="public" xmi.id="399" type="SiconosMatrix *" name="getAPtr" />
    <UML:Operation visibility="public" xmi.id="400" type="const SimpleVector" name="getB" />
    <UML:Operation visibility="public" xmi.id="401" type="SimpleVector *" name="getBPtr" />
    <UML:Operation visibility="public" xmi.id="402" type="void" name="saveDSToXML" />
    <UML:Operation visibility="public" xmi.id="403" type="void" name="setA" >
     <UML:Parameter visibility="private" xmi.id="404" value="" type="const SiconosMatrix &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="405" type="void" name="setAPtr" >
     <UML:Parameter visibility="private" xmi.id="406" value="" type="SiconosMatrix *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="407" type="void" name="setB" >
     <UML:Parameter visibility="private" xmi.id="408" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="409" type="void" name="setBPtr" >
     <UML:Parameter visibility="private" xmi.id="410" value="" type="SimpleVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="411" type="void" name="setComputeAFunction" >
     <UML:Parameter visibility="private" xmi.id="412" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="413" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="414" type="void" name="setComputeBFunction" >
     <UML:Parameter visibility="private" xmi.id="415" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="416" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="417" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="418" value="" type="*" name="computeBPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="419" type="" name="~LinearDS" />
    <UML:Attribute visibility="private" xmi.id="370" value="" type="SiconosMatrix *" name="A" />
    <UML:Attribute visibility="private" xmi.id="371" value="" type="SimpleVector *" name="b" />
    <UML:Attribute visibility="private" xmi.id="372" value="" type="SiconosSharedLibrary" name="cShared" />
    <UML:Attribute visibility="private" xmi.id="373" value="" type="bool" name="isAAllocatedIn" />
    <UML:Attribute visibility="private" xmi.id="374" value="" type="bool" name="isBAllocatedIn" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="420" name="LagrangianLinearR" >
    <UML:Operation visibility="protected" xmi.id="425" type="" name="LagrangianLinearR" />
    <UML:Operation visibility="public" xmi.id="426" type="" name="LagrangianLinearR" >
     <UML:Parameter visibility="private" xmi.id="427" value="" type="RelationXML *" />
     <UML:Parameter visibility="private" xmi.id="428" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="429" type="" name="LagrangianLinearR" >
     <UML:Parameter visibility="private" xmi.id="430" value="" type="const Relation &amp;" />
     <UML:Parameter visibility="private" xmi.id="431" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="432" type="" name="LagrangianLinearR" >
     <UML:Parameter visibility="private" xmi.id="433" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="434" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="435" type="" name="LagrangianLinearR" >
     <UML:Parameter visibility="private" xmi.id="436" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="437" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="438" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="439" type="void" name="computeFreeOutput" >
     <UML:Parameter visibility="private" xmi.id="440" value="" type="const double &amp;" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="441" type="void" name="computeInput" >
     <UML:Parameter visibility="private" xmi.id="442" value="" type="const double &amp;" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="443" type="void" name="computeOutput" >
     <UML:Parameter visibility="private" xmi.id="444" value="" type="const double &amp;" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="445" type="LagrangianLinearR *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="446" value="" type="Relation *" name="r" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="447" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="448" type="const SimpleVector" name="getB" />
    <UML:Operation visibility="public" xmi.id="449" type="SimpleVector *" name="getBPtr" />
    <UML:Operation visibility="public" xmi.id="450" type="const SiconosMatrix" name="getH" />
    <UML:Operation visibility="public" xmi.id="451" type="void" name="getHBlockDS" >
     <UML:Parameter visibility="private" xmi.id="452" value="" type="DynamicalSystem *" />
     <UML:Parameter visibility="private" xmi.id="453" value="" type="SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="454" type="void" name="getHBlockDS" >
     <UML:Parameter visibility="private" xmi.id="455" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="456" value="" type="SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="457" type="SiconosMatrix *" name="getHPtr" />
    <UML:Operation visibility="public" xmi.id="458" type="void" name="saveRelationToXML" />
    <UML:Operation visibility="public" xmi.id="459" type="void" name="setB" >
     <UML:Parameter visibility="private" xmi.id="460" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="461" type="void" name="setBPtr" >
     <UML:Parameter visibility="private" xmi.id="462" value="" type="SimpleVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="463" type="void" name="setH" >
     <UML:Parameter visibility="private" xmi.id="464" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="465" type="void" name="setHPtr" >
     <UML:Parameter visibility="private" xmi.id="466" value="" type="SiconosMatrix *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="467" type="" name="~LagrangianLinearR" />
    <UML:Attribute visibility="private" xmi.id="421" value="" type="SiconosMatrix *" name="H" />
    <UML:Attribute visibility="private" xmi.id="422" value="" type="SimpleVector *" name="b" />
    <UML:Attribute visibility="private" xmi.id="423" value="" type="bool" name="isBAllocatedIn" />
    <UML:Attribute visibility="private" xmi.id="424" value="" type="bool" name="isHAllocatedIn" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="472" name="NonSmoothLaw" >
    <UML:Operation visibility="public" xmi.id="1004" type="" name="NonSmoothLaw" />
    <UML:Operation visibility="public" xmi.id="1005" type="" name="NonSmoothLaw" >
     <UML:Parameter visibility="private" xmi.id="1006" value="" type="NonSmoothLawXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1007" type="virtual void" name="display" />
    <UML:Operation visibility="public" xmi.id="1008" type="NonSmoothLawXML *" name="getNonSmoothLawXML" />
    <UML:Operation visibility="public" xmi.id="1009" type="virtual bool" isAbstract="true" name="isVerified" />
    <UML:Operation visibility="public" xmi.id="1010" type="virtual void" isAbstract="true" name="saveNonSmoothLawToXML" />
    <UML:Operation visibility="public" xmi.id="1011" type="void" name="setNonSmoothLawXML" >
     <UML:Parameter visibility="private" xmi.id="1012" value="" type="NonSmoothLawXML *" name="newNslawxml" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1013" type="void" name="setType" >
     <UML:Parameter visibility="private" xmi.id="1014" value="" type="const std :: string &amp;" name="newType" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1015" type="virtual " name="~NonSmoothLaw" />
    <UML:Attribute visibility="protected" xmi.id="1003" value="" type="NonSmoothLawXML *" name="nslawxml" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="580" name="DynamicalSystem" >
    <UML:Operation visibility="protected" xmi.id="601" type="" name="DynamicalSystem" />
    <UML:Operation visibility="public" xmi.id="602" type="" name="DynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="603" value="" type="DSXML *" name="dsXML" />
     <UML:Parameter visibility="private" xmi.id="604" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="605" type="" name="DynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="606" value="" type="const DynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="607" type="" name="DynamicalSystem" >
     <UML:Parameter visibility="private" xmi.id="608" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="609" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="610" value="" type="const SiconosVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="611" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="612" type="void" name="addDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="613" value="" type="DSInputOutput *" name="dsio" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="614" type="void" name="addTmpWorkVector" >
     <UML:Parameter visibility="private" xmi.id="615" value="" type="SimpleVector *" name="newVal" />
     <UML:Parameter visibility="private" xmi.id="616" value="" type="const std :: string &amp;" name="id" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="617" type="void" name="allocateTmpWorkVector" >
     <UML:Parameter visibility="private" xmi.id="618" value="" type="const std :: string &amp;" name="id" />
     <UML:Parameter visibility="private" xmi.id="619" value="" type="const int &amp;" name="size" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="620" type="virtual void" name="computeJacobianX" >
     <UML:Parameter visibility="private" xmi.id="621" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="622" type="virtual void" name="computeT" />
    <UML:Operation visibility="public" xmi.id="623" type="virtual void" name="computeU" >
     <UML:Parameter visibility="private" xmi.id="624" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="625" type="virtual void" name="computeVectorField" >
     <UML:Parameter visibility="private" xmi.id="626" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="627" type="virtual void" name="display" />
    <UML:Operation visibility="public" xmi.id="628" type="virtual double" name="dsConvergenceIndicator" />
    <UML:Operation visibility="protected" xmi.id="629" type="virtual void" name="fillBoundaryConditionsFromXml" />
    <UML:Operation visibility="protected" xmi.id="630" type="virtual void" name="fillDsioFromXml" />
    <UML:Operation visibility="public" xmi.id="631" type="void" name="freeTmpWorkVector" >
     <UML:Parameter visibility="private" xmi.id="632" value="" type="const std :: string &amp;" name="id" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="633" type="BoundaryCondition *" name="getBoundaryConditionPtr" />
    <UML:Operation visibility="public" xmi.id="634" type="DSInputOutput *" name="getDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="635" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="636" type="const DSXML *" name="getDynamicalSystemXMLPtr" />
    <UML:Operation visibility="public" xmi.id="637" type="const SiconosMatrix" name="getJacobianX" />
    <UML:Operation visibility="public" xmi.id="638" type="SiconosMatrix *" name="getJacobianXPtr" />
    <UML:Operation visibility="public" xmi.id="639" type="const unsigned int" name="getN" />
    <UML:Operation visibility="public" xmi.id="640" type="NonSmoothDynamicalSystem *" name="getNSDSPtr" />
    <UML:Operation visibility="public" xmi.id="641" type="const int" name="getNumber" />
    <UML:Operation visibility="public" xmi.id="642" type="const SimpleVector" name="getR" />
    <UML:Operation visibility="public" xmi.id="643" type="const SiconosMemory" name="getRMemory" />
    <UML:Operation visibility="public" xmi.id="644" type="SiconosMemory *" name="getRMemoryPtr" />
    <UML:Operation visibility="public" xmi.id="645" type="SimpleVector *" name="getRPtr" />
    <UML:Operation visibility="public" xmi.id="646" type="const int" name="getStepsInMemory" />
    <UML:Operation visibility="public" xmi.id="647" type="const SiconosMatrix" name="getT" />
    <UML:Operation visibility="public" xmi.id="648" type="SiconosMatrix *" name="getTPtr" />
    <UML:Operation visibility="public" xmi.id="649" type="SimpleVector *" name="getTmpWorkVector" >
     <UML:Parameter visibility="private" xmi.id="650" value="" type="const std :: string &amp;" name="id" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="651" type="const SimpleVector" name="getU" />
    <UML:Operation visibility="public" xmi.id="652" type="SiconosVector *" name="getUPtr" />
    <UML:Operation visibility="public" xmi.id="653" type="const unsigned int" name="getUSize" />
    <UML:Operation visibility="public" xmi.id="654" type="vfPtr" name="getVectorFieldPtr" />
    <UML:Operation visibility="public" xmi.id="655" type="const SimpleVector" name="getX" />
    <UML:Operation visibility="public" xmi.id="656" type="const SimpleVector" name="getX0" />
    <UML:Operation visibility="public" xmi.id="657" type="SiconosVector *" name="getX0Ptr" />
    <UML:Operation visibility="public" xmi.id="658" type="const SimpleVector" name="getXDot" />
    <UML:Operation visibility="public" xmi.id="659" type="const SiconosMemory" name="getXDotMemory" />
    <UML:Operation visibility="public" xmi.id="660" type="SiconosMemory *" name="getXDotMemoryPtr" />
    <UML:Operation visibility="public" xmi.id="661" type="SiconosVector *" name="getXDotPtr" />
    <UML:Operation visibility="public" xmi.id="662" type="const SimpleVector" name="getXFree" />
    <UML:Operation visibility="public" xmi.id="663" type="SiconosVector *" name="getXFreePtr" />
    <UML:Operation visibility="public" xmi.id="664" type="const SiconosMemory" name="getXMemory" />
    <UML:Operation visibility="public" xmi.id="665" type="SiconosMemory *" name="getXMemoryPtr" />
    <UML:Operation visibility="public" xmi.id="666" type="SiconosVector *" name="getXPtr" />
    <UML:Operation visibility="public" xmi.id="667" type="virtual void" name="initMemory" >
     <UML:Parameter visibility="private" xmi.id="668" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="669" type="virtual void" name="saveBCToXML" />
    <UML:Operation visibility="public" xmi.id="670" type="virtual void" name="saveDSDataToXML" />
    <UML:Operation visibility="public" xmi.id="671" type="virtual void" name="saveDSIOToXML" />
    <UML:Operation visibility="public" xmi.id="672" type="virtual void" name="saveDSToXML" />
    <UML:Operation visibility="public" xmi.id="673" type="void" name="setBoundaryConditionPtr" >
     <UML:Parameter visibility="private" xmi.id="674" value="" type="BoundaryCondition *" name="newBC" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="675" type="void" name="setComputeJacobianXFunction" >
     <UML:Parameter visibility="private" xmi.id="676" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="677" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="678" type="void" name="setComputeTFunction" >
     <UML:Parameter visibility="private" xmi.id="679" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="680" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="681" type="void" name="setComputeUFunction" >
     <UML:Parameter visibility="private" xmi.id="682" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="683" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="684" type="void" name="setDSInputOutputs" >
     <UML:Parameter visibility="private" xmi.id="685" value="" type="std :: vector &lt; DSInputOutput * > newDsioVect" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="686" type="void" name="setDynamicalSystemXMLPtr" >
     <UML:Parameter visibility="private" xmi.id="687" value="" type="DSXML *" name="newDsxml" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="688" type="void" name="setId" >
     <UML:Parameter visibility="private" xmi.id="689" value="" type="const std :: string &amp;" name="newId" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="690" type="void" name="setJacobianX" >
     <UML:Parameter visibility="private" xmi.id="691" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="692" type="void" name="setJacobianXPtr" >
     <UML:Parameter visibility="private" xmi.id="693" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="694" type="void" name="setN" >
     <UML:Parameter visibility="private" xmi.id="695" value="" type="const int &amp;" name="newN" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="696" type="void" name="setNSDSPtr" >
     <UML:Parameter visibility="private" xmi.id="697" value="" type="NonSmoothDynamicalSystem *" name="newNsds" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="698" type="void" name="setNumber" >
     <UML:Parameter visibility="private" xmi.id="699" value="" type="const int &amp;" name="newNumber" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="700" type="void" name="setR" >
     <UML:Parameter visibility="private" xmi.id="701" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="702" type="void" name="setRMemory" >
     <UML:Parameter visibility="private" xmi.id="703" value="" type="const SiconosMemory &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="704" type="void" name="setRMemoryPtr" >
     <UML:Parameter visibility="private" xmi.id="705" value="" type="SiconosMemory *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="706" type="void" name="setRPtr" >
     <UML:Parameter visibility="private" xmi.id="707" value="" type="SimpleVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="708" type="void" name="setStepsInMemory" >
     <UML:Parameter visibility="private" xmi.id="709" value="" type="const int &amp;" name="steps" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="710" type="void" name="setT" >
     <UML:Parameter visibility="private" xmi.id="711" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="712" type="void" name="setTPtr" >
     <UML:Parameter visibility="private" xmi.id="713" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="714" type="void" name="setTmpWorkVector" >
     <UML:Parameter visibility="private" xmi.id="715" value="" type="std :: map &lt; const std :: string" />
     <UML:Parameter visibility="private" xmi.id="716" value="" type="SimpleVector * > newVect" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="717" type="void" name="setType" >
     <UML:Parameter visibility="private" xmi.id="718" value="" type="const std :: string" name="newType" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="719" type="void" name="setU" >
     <UML:Parameter visibility="private" xmi.id="720" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="721" type="void" name="setUPtr" >
     <UML:Parameter visibility="private" xmi.id="722" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="723" type="void" name="setUSize" >
     <UML:Parameter visibility="private" xmi.id="724" value="" type="const int &amp;" name="newUSize" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="725" type="void" name="setVectorFieldFunction" >
     <UML:Parameter visibility="private" xmi.id="726" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="727" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="728" type="void" name="setX" >
     <UML:Parameter visibility="private" xmi.id="729" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="730" type="void" name="setX0" >
     <UML:Parameter visibility="private" xmi.id="731" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="732" type="void" name="setX0Ptr" >
     <UML:Parameter visibility="private" xmi.id="733" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="734" type="void" name="setXDot" >
     <UML:Parameter visibility="private" xmi.id="735" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="736" type="void" name="setXDotMemory" >
     <UML:Parameter visibility="private" xmi.id="737" value="" type="const SiconosMemory &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="738" type="void" name="setXDotMemoryPtr" >
     <UML:Parameter visibility="private" xmi.id="739" value="" type="SiconosMemory *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="740" type="void" name="setXDotPtr" >
     <UML:Parameter visibility="private" xmi.id="741" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="742" type="void" name="setXFree" >
     <UML:Parameter visibility="private" xmi.id="743" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="744" type="void" name="setXFreePtr" >
     <UML:Parameter visibility="private" xmi.id="745" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="746" type="void" name="setXMemory" >
     <UML:Parameter visibility="private" xmi.id="747" value="" type="const SiconosMemory &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="748" type="void" name="setXMemoryPtr" >
     <UML:Parameter visibility="private" xmi.id="749" value="" type="SiconosMemory *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="750" type="void" name="setXPtr" >
     <UML:Parameter visibility="private" xmi.id="751" value="" type="SiconosVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="752" type="virtual void" name="swapInMemory" />
    <UML:Operation visibility="protected" xmi.id="753" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="754" value="" type="*" name="computeTPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="755" type="virtual " name="~DynamicalSystem" />
    <UML:Attribute visibility="protected" xmi.id="582" value="" type="SiconosMatrix *" name="T" />
    <UML:Attribute visibility="protected" xmi.id="583" value="" type="SiconosSharedLibrary" name="cShared" />
    <UML:Attribute visibility="protected" xmi.id="584" value="" type="DSXML *" name="dsxml" />
    <UML:Attribute visibility="protected" xmi.id="585" value="" type="bool" name="isBCAllocatedIn" />
    <UML:Attribute visibility="protected" xmi.id="586" value="" type="SiconosMatrix *" name="jacobianX" />
    <UML:Attribute visibility="protected" xmi.id="587" value="" type="unsigned int" name="n" />
    <UML:Attribute visibility="protected" xmi.id="589" value="" type="int" name="number" />
    <UML:Attribute visibility="protected" xmi.id="590" value="" type="SimpleVector *" name="r" />
    <UML:Attribute visibility="protected" xmi.id="591" value="" type="SiconosMemory *" name="rMemory" />
    <UML:Attribute visibility="protected" xmi.id="592" value="" type="unsigned int" name="stepsInMemory" />
    <UML:Attribute visibility="protected" xmi.id="593" value="" type="SiconosVector *" name="u" />
    <UML:Attribute visibility="protected" xmi.id="594" value="" type="unsigned int" name="uSize" />
    <UML:Attribute visibility="protected" xmi.id="595" value="" type="SiconosVector *" name="x" />
    <UML:Attribute visibility="protected" xmi.id="596" value="" type="SiconosVector *" name="x0" />
    <UML:Attribute visibility="protected" xmi.id="597" value="" type="SiconosVector *" name="xDot" />
    <UML:Attribute visibility="protected" xmi.id="598" value="" type="SiconosMemory *" name="xDotMemory" />
    <UML:Attribute visibility="protected" xmi.id="599" value="" type="SiconosVector *" name="xFree" />
    <UML:Attribute visibility="protected" xmi.id="600" value="" type="SiconosMemory *" name="xMemory" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="756" name="LagrangianEC" >
    <UML:Operation visibility="public" xmi.id="757" type="" name="LagrangianEC" />
    <UML:Operation visibility="public" xmi.id="758" type="" name="LagrangianEC" >
     <UML:Parameter visibility="private" xmi.id="759" value="" type="EqualityConstraintXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="760" type="void" name="createEqualityConstraint" >
     <UML:Parameter visibility="private" xmi.id="761" value="" type="EqualityConstraintXML *" name="ecXML" />
     <UML:Parameter visibility="private" xmi.id="762" value="" type="int" name="number" />
     <UML:Parameter visibility="private" xmi.id="763" value="" type="SiconosMatrix *" name="G" />
     <UML:Parameter visibility="private" xmi.id="764" value="" type="std :: vector &lt; DSInputOutput * > *" name="dsioVector" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="765" type="" name="~LagrangianEC" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="766" name="LagrangianDS" >
    <UML:Operation visibility="protected" xmi.id="788" type="" name="LagrangianDS" />
    <UML:Operation visibility="public" xmi.id="789" type="" name="LagrangianDS" >
     <UML:Parameter visibility="private" xmi.id="790" value="" type="DSXML *" name="dsXML" />
     <UML:Parameter visibility="private" xmi.id="791" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="792" type="" name="LagrangianDS" >
     <UML:Parameter visibility="private" xmi.id="793" value="" type="const DynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="794" type="" name="LagrangianDS" >
     <UML:Parameter visibility="private" xmi.id="795" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="796" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="797" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="798" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="799" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="800" type="" name="LagrangianDS" >
     <UML:Parameter visibility="private" xmi.id="801" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="802" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="803" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="804" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="805" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="806" type="void" name="computeFExt" >
     <UML:Parameter visibility="private" xmi.id="807" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="808" type="void" name="computeFInt" >
     <UML:Parameter visibility="private" xmi.id="809" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="810" type="void" name="computeFInt" >
     <UML:Parameter visibility="private" xmi.id="811" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="812" value="" type="SimpleVector *" />
     <UML:Parameter visibility="private" xmi.id="813" value="" type="SimpleVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="814" type="void" name="computeJacobianQFInt" >
     <UML:Parameter visibility="private" xmi.id="815" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="816" type="void" name="computeJacobianQFInt" >
     <UML:Parameter visibility="private" xmi.id="817" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="818" value="" type="SimpleVector *" name="q" />
     <UML:Parameter visibility="private" xmi.id="819" value="" type="SimpleVector *" name="velocity" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="820" type="void" name="computeJacobianQNNL" />
    <UML:Operation visibility="public" xmi.id="821" type="void" name="computeJacobianQNNL" >
     <UML:Parameter visibility="private" xmi.id="822" value="" type="SimpleVector *" name="q" />
     <UML:Parameter visibility="private" xmi.id="823" value="" type="SimpleVector *" name="velocity" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="824" type="void" name="computeJacobianVelocityFInt" >
     <UML:Parameter visibility="private" xmi.id="825" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="826" type="void" name="computeJacobianVelocityFInt" >
     <UML:Parameter visibility="private" xmi.id="827" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="828" value="" type="SimpleVector *" name="q" />
     <UML:Parameter visibility="private" xmi.id="829" value="" type="SimpleVector *" name="velocity" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="830" type="void" name="computeJacobianVelocityNNL" />
    <UML:Operation visibility="public" xmi.id="831" type="void" name="computeJacobianVelocityNNL" >
     <UML:Parameter visibility="private" xmi.id="832" value="" type="SimpleVector *" name="q" />
     <UML:Parameter visibility="private" xmi.id="833" value="" type="SimpleVector *" name="velocity" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="834" type="void" name="computeMass" >
     <UML:Parameter visibility="private" xmi.id="835" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="836" type="void" name="computeMass" >
     <UML:Parameter visibility="private" xmi.id="837" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="838" value="" type="SimpleVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="839" type="void" name="computeNNL" />
    <UML:Operation visibility="public" xmi.id="840" type="void" name="computeNNL" >
     <UML:Parameter visibility="private" xmi.id="841" value="" type="SimpleVector *" name="q" />
     <UML:Parameter visibility="private" xmi.id="842" value="" type="SimpleVector *" name="velocity" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="843" type="LagrangianDS *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="844" value="" type="DynamicalSystem *" name="ds" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="845" type="virtual void" name="display" />
    <UML:Operation visibility="public" xmi.id="846" type="virtual double" name="dsConvergenceIndicator" />
    <UML:Operation visibility="public" xmi.id="847" type="const SimpleVector" name="getFExt" />
    <UML:Operation visibility="public" xmi.id="848" type="SimpleVector *" name="getFExtPtr" />
    <UML:Operation visibility="public" xmi.id="849" type="const SimpleVector" name="getFInt" />
    <UML:Operation visibility="public" xmi.id="850" type="SimpleVector *" name="getFIntPtr" />
    <UML:Operation visibility="public" xmi.id="851" type="bool" name="getIsLDSPlugin" >
     <UML:Parameter visibility="private" xmi.id="852" value="" type="const unsigned int &amp;" name="n" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="853" type="const SiconosMatrix" name="getJacobianQFInt" />
    <UML:Operation visibility="public" xmi.id="854" type="SiconosMatrix *" name="getJacobianQFIntPtr" />
    <UML:Operation visibility="public" xmi.id="855" type="const SiconosMatrix" name="getJacobianQNNL" />
    <UML:Operation visibility="public" xmi.id="856" type="SiconosMatrix *" name="getJacobianQNNLPtr" />
    <UML:Operation visibility="public" xmi.id="857" type="const SiconosMatrix" name="getJacobianVelocityFInt" />
    <UML:Operation visibility="public" xmi.id="858" type="SiconosMatrix *" name="getJacobianVelocityFIntPtr" />
    <UML:Operation visibility="public" xmi.id="859" type="const SiconosMatrix" name="getJacobianVelocityNNL" />
    <UML:Operation visibility="public" xmi.id="860" type="SiconosMatrix *" name="getJacobianVelocityNNLPtr" />
    <UML:Operation visibility="public" xmi.id="861" type="const SiconosMatrix" name="getMass" />
    <UML:Operation visibility="public" xmi.id="862" type="SiconosMatrix *" name="getMassPtr" />
    <UML:Operation visibility="public" xmi.id="863" type="const SimpleVector" name="getNNL" />
    <UML:Operation visibility="public" xmi.id="864" type="SimpleVector *" name="getNNLPtr" />
    <UML:Operation visibility="public" xmi.id="865" type="const unsigned int" name="getNdof" />
    <UML:Operation visibility="public" xmi.id="866" type="const SimpleVector" name="getP" />
    <UML:Operation visibility="public" xmi.id="867" type="SimpleVector *" name="getPPtr" />
    <UML:Operation visibility="public" xmi.id="868" type="const SimpleVector" name="getQ" />
    <UML:Operation visibility="public" xmi.id="869" type="const SimpleVector" name="getQ0" />
    <UML:Operation visibility="public" xmi.id="870" type="SimpleVector *" name="getQ0Ptr" />
    <UML:Operation visibility="public" xmi.id="871" type="const SimpleVector" name="getQFree" />
    <UML:Operation visibility="public" xmi.id="872" type="SimpleVector *" name="getQFreePtr" />
    <UML:Operation visibility="public" xmi.id="873" type="const SiconosMemory" name="getQMemory" />
    <UML:Operation visibility="public" xmi.id="874" type="SiconosMemory *" name="getQMemoryPtr" />
    <UML:Operation visibility="public" xmi.id="875" type="SimpleVector *" name="getQPtr" />
    <UML:Operation visibility="public" xmi.id="876" type="const SimpleVector" name="getVelocity" />
    <UML:Operation visibility="public" xmi.id="877" type="const SimpleVector" name="getVelocity0" />
    <UML:Operation visibility="public" xmi.id="878" type="SimpleVector *" name="getVelocity0Ptr" />
    <UML:Operation visibility="public" xmi.id="879" type="const SimpleVector" name="getVelocityFree" />
    <UML:Operation visibility="public" xmi.id="880" type="SimpleVector *" name="getVelocityFreePtr" />
    <UML:Operation visibility="public" xmi.id="881" type="const SiconosMemory" name="getVelocityMemory" />
    <UML:Operation visibility="public" xmi.id="882" type="SiconosMemory *" name="getVelocityMemoryPtr" />
    <UML:Operation visibility="public" xmi.id="883" type="SimpleVector *" name="getVelocityPtr" />
    <UML:Operation visibility="public" xmi.id="884" type="void" name="initMemory" >
     <UML:Parameter visibility="private" xmi.id="885" value="" type="const unsigned int &amp;" name="steps" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="886" type="virtual void" name="saveDSToXML" />
    <UML:Operation visibility="public" xmi.id="887" type="void" name="setComputeFExtFunction" >
     <UML:Parameter visibility="private" xmi.id="888" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="889" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="890" type="void" name="setComputeFIntFunction" >
     <UML:Parameter visibility="private" xmi.id="891" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="892" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="893" type="void" name="setComputeJacobianQFIntFunction" >
     <UML:Parameter visibility="private" xmi.id="894" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="895" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="896" type="void" name="setComputeJacobianQNNLFunction" >
     <UML:Parameter visibility="private" xmi.id="897" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="898" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="899" type="void" name="setComputeJacobianVelocityFIntFunction" >
     <UML:Parameter visibility="private" xmi.id="900" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="901" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="902" type="void" name="setComputeJacobianVelocityNNLFunction" >
     <UML:Parameter visibility="private" xmi.id="903" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="904" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="905" type="void" name="setComputeMassFunction" >
     <UML:Parameter visibility="private" xmi.id="906" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="907" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="908" type="void" name="setComputeNNLFunction" >
     <UML:Parameter visibility="private" xmi.id="909" value="" type="const std :: string &amp;" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="910" value="" type="const std :: string &amp;" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="911" type="void" name="setFExt" >
     <UML:Parameter visibility="private" xmi.id="912" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="913" type="void" name="setFExtPtr" >
     <UML:Parameter visibility="private" xmi.id="914" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="915" type="void" name="setFInt" >
     <UML:Parameter visibility="private" xmi.id="916" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="917" type="void" name="setFIntPtr" >
     <UML:Parameter visibility="private" xmi.id="918" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="919" type="void" name="setJacobianQFInt" >
     <UML:Parameter visibility="private" xmi.id="920" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="921" type="void" name="setJacobianQFIntPtr" >
     <UML:Parameter visibility="private" xmi.id="922" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="923" type="void" name="setJacobianQNNL" >
     <UML:Parameter visibility="private" xmi.id="924" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="925" type="void" name="setJacobianQNNLPtr" >
     <UML:Parameter visibility="private" xmi.id="926" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="927" type="void" name="setJacobianVelocityFInt" >
     <UML:Parameter visibility="private" xmi.id="928" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="929" type="void" name="setJacobianVelocityFIntPtr" >
     <UML:Parameter visibility="private" xmi.id="930" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="931" type="void" name="setJacobianVelocityNNL" >
     <UML:Parameter visibility="private" xmi.id="932" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="933" type="void" name="setJacobianVelocityNNLPtr" >
     <UML:Parameter visibility="private" xmi.id="934" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="935" type="void" name="setMass" >
     <UML:Parameter visibility="private" xmi.id="936" value="" type="const SiconosMatrix &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="937" type="void" name="setMassPtr" >
     <UML:Parameter visibility="private" xmi.id="938" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="939" type="void" name="setNNL" >
     <UML:Parameter visibility="private" xmi.id="940" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="941" type="void" name="setNNLPtr" >
     <UML:Parameter visibility="private" xmi.id="942" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="943" type="void" name="setNdof" >
     <UML:Parameter visibility="private" xmi.id="944" value="" type="const unsigned int &amp;" name="newNdof" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="945" type="void" name="setP" >
     <UML:Parameter visibility="private" xmi.id="946" value="" type="const SimpleVector &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="947" type="void" name="setPPtr" >
     <UML:Parameter visibility="private" xmi.id="948" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="949" type="void" name="setQ" >
     <UML:Parameter visibility="private" xmi.id="950" value="" type="const SimpleVector &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="951" type="void" name="setQ0" >
     <UML:Parameter visibility="private" xmi.id="952" value="" type="const SimpleVector &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="953" type="void" name="setQ0Ptr" >
     <UML:Parameter visibility="private" xmi.id="954" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="955" type="void" name="setQFree" >
     <UML:Parameter visibility="private" xmi.id="956" value="" type="const SimpleVector &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="957" type="void" name="setQFreePtr" >
     <UML:Parameter visibility="private" xmi.id="958" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="959" type="void" name="setQMemory" >
     <UML:Parameter visibility="private" xmi.id="960" value="" type="const SiconosMemory &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="961" type="void" name="setQMemoryPtr" >
     <UML:Parameter visibility="private" xmi.id="962" value="" type="SiconosMemory *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="963" type="void" name="setQPtr" >
     <UML:Parameter visibility="private" xmi.id="964" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="965" type="void" name="setVelocity" >
     <UML:Parameter visibility="private" xmi.id="966" value="" type="const SimpleVector &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="967" type="void" name="setVelocity0" >
     <UML:Parameter visibility="private" xmi.id="968" value="" type="const SimpleVector &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="969" type="void" name="setVelocity0Ptr" >
     <UML:Parameter visibility="private" xmi.id="970" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="971" type="void" name="setVelocityFree" >
     <UML:Parameter visibility="private" xmi.id="972" value="" type="const SimpleVector &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="973" type="void" name="setVelocityFreePtr" >
     <UML:Parameter visibility="private" xmi.id="974" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="975" type="void" name="setVelocityMemory" >
     <UML:Parameter visibility="private" xmi.id="976" value="" type="const SiconosMemory &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="977" type="void" name="setVelocityMemoryPtr" >
     <UML:Parameter visibility="private" xmi.id="978" value="" type="SiconosMemory *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="979" type="void" name="setVelocityPtr" >
     <UML:Parameter visibility="private" xmi.id="980" value="" type="SimpleVector *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="981" type="void" name="swapInMemory" />
    <UML:Operation visibility="protected" xmi.id="982" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="983" value="" type="*" name="computeJacobianVelocityNNLPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="984" type="virtual " name="~LagrangianDS" />
    <UML:Attribute visibility="protected" xmi.id="767" value="" type="SimpleVector *" name="NNL" />
    <UML:Attribute visibility="protected" xmi.id="768" value="" type="SiconosSharedLibrary" name="cShared" />
    <UML:Attribute visibility="protected" xmi.id="769" value="" type="SimpleVector *" name="fExt" />
    <UML:Attribute visibility="protected" xmi.id="770" value="" type="SimpleVector *" name="fInt" />
    <UML:Attribute visibility="protected" xmi.id="771" value="" type="bool" name="isMassAllocatedIn" />
    <UML:Attribute visibility="protected" xmi.id="772" value="" type="bool" name="isPAllocatedIn" />
    <UML:Attribute visibility="protected" xmi.id="773" value="" type="SiconosMatrix *" name="jacobianQFInt" />
    <UML:Attribute visibility="protected" xmi.id="774" value="" type="SiconosMatrix *" name="jacobianQNNL" />
    <UML:Attribute visibility="protected" xmi.id="775" value="" type="SiconosMatrix *" name="jacobianVelocityFInt" />
    <UML:Attribute visibility="protected" xmi.id="776" value="" type="SiconosMatrix *" name="jacobianVelocityNNL" />
    <UML:Attribute visibility="protected" xmi.id="777" value="" type="SiconosMatrix *" name="mass" />
    <UML:Attribute visibility="protected" xmi.id="778" value="" type="unsigned int" name="ndof" />
    <UML:Attribute visibility="protected" xmi.id="779" value="" type="SimpleVector *" name="p" />
    <UML:Attribute visibility="protected" xmi.id="780" value="" type="SimpleVector *" name="q" />
    <UML:Attribute visibility="protected" xmi.id="781" value="" type="SimpleVector *" name="q0" />
    <UML:Attribute visibility="protected" xmi.id="782" value="" type="SimpleVector *" name="qFree" />
    <UML:Attribute visibility="protected" xmi.id="783" value="" type="SiconosMemory *" name="qMemory" />
    <UML:Attribute visibility="protected" xmi.id="784" value="" type="SimpleVector *" name="velocity" />
    <UML:Attribute visibility="protected" xmi.id="785" value="" type="SimpleVector *" name="velocity0" />
    <UML:Attribute visibility="protected" xmi.id="786" value="" type="SimpleVector *" name="velocityFree" />
    <UML:Attribute visibility="protected" xmi.id="787" value="" type="SiconosMemory *" name="velocityMemory" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="985" name="InteractionLink" >
    <UML:Operation visibility="protected" xmi.id="988" type="" name="InteractionLink" />
    <UML:Operation visibility="public" xmi.id="989" type="" name="InteractionLink" >
     <UML:Parameter visibility="private" xmi.id="990" value="" type="Interaction *" />
     <UML:Parameter visibility="private" xmi.id="991" value="" type="Interaction *" />
     <UML:Parameter visibility="private" xmi.id="992" value="" type="const std :: vector &lt; DynamicalSystem * > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="993" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="994" type="Interaction *" name="getLinkedInteractionPtr" />
    <UML:Operation visibility="public" xmi.id="995" type="Interaction *" name="getOriginInteractionPtr" />
    <UML:Operation visibility="public" xmi.id="996" type="void" name="setCommonDS" >
     <UML:Parameter visibility="private" xmi.id="997" value="" type="const std :: vector &lt; DynamicalSystem * > &amp;" name="vs" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="998" type="void" name="setLinkedInteractionPtr" >
     <UML:Parameter visibility="private" xmi.id="999" value="" type="Interaction *" name="newInter" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1000" type="void" name="setOriginInteractionPtr" >
     <UML:Parameter visibility="private" xmi.id="1001" value="" type="Interaction *" name="newInter" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1002" type="virtual " name="~InteractionLink" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="1016" name="NLinearBC" >
    <UML:Operation visibility="public" xmi.id="1017" type="" name="NLinearBC" />
    <UML:Operation visibility="public" xmi.id="1018" type="" name="NLinearBC" >
     <UML:Parameter visibility="private" xmi.id="1019" value="" type="BoundaryConditionXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1020" type="NLinearBC *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="1021" value="" type="BoundaryCondition *" name="bc" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1022" type="void" name="createBoundaryCondition" >
     <UML:Parameter visibility="private" xmi.id="1023" value="" type="BoundaryConditionXML *" name="bcXML" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="1024" type="void" name="fillBCWithBCXML" />
    <UML:Operation visibility="public" xmi.id="1025" type="void" name="saveBCToXML" />
    <UML:Operation visibility="public" xmi.id="1026" type="" name="~NLinearBC" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="1027" name="LinearTIEC" >
    <UML:Operation visibility="public" xmi.id="1028" type="" name="LinearTIEC" />
    <UML:Operation visibility="public" xmi.id="1029" type="" name="LinearTIEC" >
     <UML:Parameter visibility="private" xmi.id="1030" value="" type="EqualityConstraintXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1031" type="void" name="createEqualityConstraint" >
     <UML:Parameter visibility="private" xmi.id="1032" value="" type="EqualityConstraintXML *" name="ecXML" />
     <UML:Parameter visibility="private" xmi.id="1033" value="" type="int" name="number" />
     <UML:Parameter visibility="private" xmi.id="1034" value="" type="SiconosMatrix *" name="G" />
     <UML:Parameter visibility="private" xmi.id="1035" value="" type="std :: vector &lt; DSInputOutput * > *" name="dsioVector" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1036" type="virtual " name="~LinearTIEC" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="1037" name="LagrangianLinearTIDS" >
    <UML:Operation visibility="protected" xmi.id="1042" type="" name="LagrangianLinearTIDS" />
    <UML:Operation visibility="public" xmi.id="1043" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1044" value="" type="DSXML *" name="dsXML" />
     <UML:Parameter visibility="private" xmi.id="1045" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1046" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1047" value="" type="const DynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1048" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1049" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="1050" value="" type="const unsigned int &amp;" name="ndof" />
     <UML:Parameter visibility="private" xmi.id="1051" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1052" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1053" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1054" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1055" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="1056" value="" type="const unsigned int &amp;" name="ndof" />
     <UML:Parameter visibility="private" xmi.id="1057" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1058" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1059" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="1060" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="1061" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1062" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1063" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="1064" value="" type="const unsigned int &amp;" name="ndof" />
     <UML:Parameter visibility="private" xmi.id="1065" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1066" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1067" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1068" type="" name="LagrangianLinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1069" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="1070" value="" type="const unsigned int &amp;" name="ndof" />
     <UML:Parameter visibility="private" xmi.id="1071" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1072" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1073" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="1074" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="1075" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1076" type="LagrangianLinearTIDS *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="1077" value="" type="DynamicalSystem *" name="ds" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1078" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="1079" type="double" name="dsConvergenceIndicator" />
    <UML:Operation visibility="public" xmi.id="1080" type="const SiconosMatrix" name="getC" />
    <UML:Operation visibility="public" xmi.id="1081" type="SiconosMatrix *" name="getCPtr" />
    <UML:Operation visibility="public" xmi.id="1082" type="const SiconosMatrix" name="getK" />
    <UML:Operation visibility="public" xmi.id="1083" type="SiconosMatrix *" name="getKPtr" />
    <UML:Operation visibility="public" xmi.id="1084" type="void" name="saveDSToXML" />
    <UML:Operation visibility="public" xmi.id="1085" type="void" name="setC" >
     <UML:Parameter visibility="private" xmi.id="1086" value="" type="const SiconosMatrix &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1087" type="void" name="setCPtr" >
     <UML:Parameter visibility="private" xmi.id="1088" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1089" type="void" name="setK" >
     <UML:Parameter visibility="private" xmi.id="1090" value="" type="const SiconosMatrix &amp;" name="newValue" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1091" type="void" name="setKPtr" >
     <UML:Parameter visibility="private" xmi.id="1092" value="" type="SiconosMatrix *" name="newPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1093" type="" name="~LagrangianLinearTIDS" />
    <UML:Attribute visibility="private" xmi.id="1038" value="" type="SiconosMatrix *" name="C" />
    <UML:Attribute visibility="private" xmi.id="1039" value="" type="SiconosMatrix *" name="K" />
    <UML:Attribute visibility="private" xmi.id="1040" value="" type="bool" name="isCAllocatedIn" />
    <UML:Attribute visibility="private" xmi.id="1041" value="" type="bool" name="isKAllocatedIn" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="1094" name="EqualityConstraint" >
    <UML:Operation visibility="public" xmi.id="1099" type="" name="EqualityConstraint" />
    <UML:Operation visibility="public" xmi.id="1100" type="" name="EqualityConstraint" >
     <UML:Parameter visibility="private" xmi.id="1101" value="" type="EqualityConstraintXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1102" type="void" name="addDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="1103" value="" type="DSInputOutput *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1104" type="virtual void" name="computeInput" >
     <UML:Parameter visibility="private" xmi.id="1105" value="" type="double" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1106" type="virtual void" name="computeOutput" >
     <UML:Parameter visibility="private" xmi.id="1107" value="" type="double" name="time" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1108" type="void" name="createEqualityConstraint" >
     <UML:Parameter visibility="private" xmi.id="1109" value="" type="EqualityConstraintXML *" name="ecXML" />
     <UML:Parameter visibility="private" xmi.id="1110" value="" type="int" name="number" />
     <UML:Parameter visibility="private" xmi.id="1111" value="" type="SiconosMatrix *" name="G" />
     <UML:Parameter visibility="private" xmi.id="1112" value="" type="std :: vector &lt; DSInputOutput * > *" name="dsioVector" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1113" type="void" name="display" />
    <UML:Operation visibility="protected" xmi.id="1114" type="void" name="fillEqualityConstraintWithEqualityConstraintXML" />
    <UML:Operation visibility="public" xmi.id="1115" type="DSInputOutput *" name="getDSInputOutput" >
     <UML:Parameter visibility="private" xmi.id="1116" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1117" type="EqualityConstraintXML *" name="getEqualityConstraintXML" />
    <UML:Operation visibility="public" xmi.id="1118" type="SiconosMatrix *" name="getGPtr" />
    <UML:Operation visibility="public" xmi.id="1119" type="int" name="getNumber" />
    <UML:Operation visibility="protected" xmi.id="1120" type="virtual void" name="init" />
    <UML:Operation visibility="public" xmi.id="1121" type="void" name="saveEqualityConstraintToXML" />
    <UML:Operation visibility="public" xmi.id="1122" type="virtual void" name="setComputeInputFunction" >
     <UML:Parameter visibility="private" xmi.id="1123" value="" type="std :: string" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="1124" value="" type="std :: string" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1125" type="virtual void" name="setComputeOutputFunction" >
     <UML:Parameter visibility="private" xmi.id="1126" value="" type="std :: string" name="pluginPath" />
     <UML:Parameter visibility="private" xmi.id="1127" value="" type="std :: string" name="functionName" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1128" type="void" name="setDSInputOutputs" >
     <UML:Parameter visibility="private" xmi.id="1129" value="" type="std :: vector &lt; DSInputOutput * >" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1130" type="void" name="setEqualityConstraintXML" >
     <UML:Parameter visibility="private" xmi.id="1131" value="" type="EqualityConstraintXML *" name="ecxml" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1132" type="void" name="setG" >
     <UML:Parameter visibility="private" xmi.id="1133" value="" type="SiconosMatrix &amp;" name="G" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1134" type="void" name="setId" >
     <UML:Parameter visibility="private" xmi.id="1135" value="" type="std :: string" name="id" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1136" type="void" name="setNumber" >
     <UML:Parameter visibility="private" xmi.id="1137" value="" type="int" name="number" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="1138" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="1139" value="" type="*" name="computeInputPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1140" type="virtual " name="~EqualityConstraint" />
    <UML:Attribute visibility="protected" xmi.id="1095" value="" type="SiconosMatrix" name="G" />
    <UML:Attribute visibility="protected" xmi.id="1096" value="" type="SiconosSharedLibrary" name="cShared" />
    <UML:Attribute visibility="protected" xmi.id="1097" value="" type="EqualityConstraintXML *" name="ecXML" />
    <UML:Attribute visibility="protected" xmi.id="1098" value="" type="int" name="number" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="1141" name="LinearTIR" >
    <UML:Operation visibility="protected" xmi.id="1148" type="" name="LinearTIR" />
    <UML:Operation visibility="public" xmi.id="1149" type="" name="LinearTIR" >
     <UML:Parameter visibility="private" xmi.id="1150" value="" type="RelationXML *" />
     <UML:Parameter visibility="private" xmi.id="1151" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1152" type="" name="LinearTIR" >
     <UML:Parameter visibility="private" xmi.id="1153" value="" type="const Relation &amp;" />
     <UML:Parameter visibility="private" xmi.id="1154" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1155" type="" name="LinearTIR" >
     <UML:Parameter visibility="private" xmi.id="1156" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="1157" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="1158" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1159" type="" name="LinearTIR" >
     <UML:Parameter visibility="private" xmi.id="1160" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="1161" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="1162" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="1163" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1164" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="1165" value="" type="const SimpleVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1166" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1167" type="void" name="computeFreeOutput" >
     <UML:Parameter visibility="private" xmi.id="1168" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1169" type="void" name="computeInput" >
     <UML:Parameter visibility="private" xmi.id="1170" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1171" type="void" name="computeOutput" >
     <UML:Parameter visibility="private" xmi.id="1172" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1173" type="LinearTIR *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="1174" value="" type="Relation *" name="r" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1175" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="1176" type="const SimpleVector" name="getA" />
    <UML:Operation visibility="public" xmi.id="1177" type="SimpleVector *" name="getAPtr" />
    <UML:Operation visibility="public" xmi.id="1178" type="const SiconosMatrix" name="getB" />
    <UML:Operation visibility="public" xmi.id="1179" type="void" name="getBBlockDSPtr" >
     <UML:Parameter visibility="private" xmi.id="1180" value="" type="DynamicalSystem *" />
     <UML:Parameter visibility="private" xmi.id="1181" value="" type="SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1182" type="void" name="getBBlockDSPtr" >
     <UML:Parameter visibility="private" xmi.id="1183" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="1184" value="" type="SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1185" type="SiconosMatrix *" name="getBPtr" />
    <UML:Operation visibility="public" xmi.id="1186" type="const SiconosMatrix" name="getC" />
    <UML:Operation visibility="public" xmi.id="1187" type="void" name="getCBlockDSPtr" >
     <UML:Parameter visibility="private" xmi.id="1188" value="" type="DynamicalSystem *" />
     <UML:Parameter visibility="private" xmi.id="1189" value="" type="SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1190" type="void" name="getCBlockDSPtr" >
     <UML:Parameter visibility="private" xmi.id="1191" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="1192" value="" type="SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1193" type="SiconosMatrix *" name="getCPtr" />
    <UML:Operation visibility="public" xmi.id="1194" type="const SiconosMatrix" name="getD" />
    <UML:Operation visibility="public" xmi.id="1195" type="SiconosMatrix *" name="getDPtr" />
    <UML:Operation visibility="public" xmi.id="1196" type="const SimpleVector" name="getE" />
    <UML:Operation visibility="public" xmi.id="1197" type="SimpleVector *" name="getEPtr" />
    <UML:Operation visibility="public" xmi.id="1198" type="const SiconosMatrix" name="getF" />
    <UML:Operation visibility="public" xmi.id="1199" type="SiconosMatrix *" name="getFPtr" />
    <UML:Operation visibility="public" xmi.id="1200" type="void" name="saveRelationToXML" />
    <UML:Operation visibility="public" xmi.id="1201" type="void" name="setA" >
     <UML:Parameter visibility="private" xmi.id="1202" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1203" type="void" name="setAPtr" >
     <UML:Parameter visibility="private" xmi.id="1204" value="" type="SimpleVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1205" type="void" name="setB" >
     <UML:Parameter visibility="private" xmi.id="1206" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1207" type="void" name="setBPtr" >
     <UML:Parameter visibility="private" xmi.id="1208" value="" type="SiconosMatrix *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1209" type="void" name="setC" >
     <UML:Parameter visibility="private" xmi.id="1210" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1211" type="void" name="setCPtr" >
     <UML:Parameter visibility="private" xmi.id="1212" value="" type="SiconosMatrix *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1213" type="void" name="setD" >
     <UML:Parameter visibility="private" xmi.id="1214" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1215" type="void" name="setDPtr" >
     <UML:Parameter visibility="private" xmi.id="1216" value="" type="SiconosMatrix *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1217" type="void" name="setE" >
     <UML:Parameter visibility="private" xmi.id="1218" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1219" type="void" name="setEPtr" >
     <UML:Parameter visibility="private" xmi.id="1220" value="" type="SimpleVector *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1221" type="void" name="setF" >
     <UML:Parameter visibility="private" xmi.id="1222" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1223" type="void" name="setFPtr" >
     <UML:Parameter visibility="private" xmi.id="1224" value="" type="SiconosMatrix *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1225" type="" name="~LinearTIR" />
    <UML:Attribute visibility="private" xmi.id="1142" value="" type="SiconosMatrix *" name="B" />
    <UML:Attribute visibility="private" xmi.id="1143" value="" type="SiconosMatrix *" name="C" />
    <UML:Attribute visibility="private" xmi.id="1144" value="" type="SiconosMatrix *" name="D" />
    <UML:Attribute visibility="private" xmi.id="1145" value="" type="SiconosMatrix *" name="F" />
    <UML:Attribute visibility="private" xmi.id="1146" value="" type="SimpleVector *" name="a" />
    <UML:Attribute visibility="private" xmi.id="1147" value="" type="SimpleVector *" name="e" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="1226" name="LagrangianR" >
    <UML:Operation visibility="public" xmi.id="1228" type="" name="LagrangianR" >
     <UML:Parameter visibility="private" xmi.id="1229" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1230" type="" name="LagrangianR" >
     <UML:Parameter visibility="private" xmi.id="1231" value="" type="RelationXML *" />
     <UML:Parameter visibility="private" xmi.id="1232" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1233" type="" name="LagrangianR" >
     <UML:Parameter visibility="private" xmi.id="1234" value="" type="const Relation &amp;" />
     <UML:Parameter visibility="private" xmi.id="1235" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1236" type="" name="LagrangianR" >
     <UML:Parameter visibility="private" xmi.id="1237" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="1238" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="1239" value="" type="Interaction *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1240" type="void" name="computeJacobian" />
    <UML:Operation visibility="public" xmi.id="1241" type="LagrangianR *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="1242" value="" type="Relation *" name="r" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1243" type="void" name="saveRelationToXML" />
    <UML:Operation visibility="protected" xmi.id="1244" type="" name="void" >
     <UML:Parameter visibility="private" xmi.id="1245" value="" type="*" name="computeHPtr" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1246" type="" name="~LagrangianR" />
    <UML:Attribute visibility="private" xmi.id="1227" value="" type="SiconosSharedLibrary" name="cShared" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="1247" name="NewtonImpactLawNSL" >
    <UML:Operation visibility="public" xmi.id="1249" type="" name="NewtonImpactLawNSL" />
    <UML:Operation visibility="public" xmi.id="1250" type="" name="NewtonImpactLawNSL" >
     <UML:Parameter visibility="private" xmi.id="1251" value="" type="NonSmoothLawXML *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1252" type="" name="NewtonImpactLawNSL" >
     <UML:Parameter visibility="private" xmi.id="1253" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1254" type="NewtonImpactLawNSL *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="1255" value="" type="NonSmoothLaw *" name="nsl" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1256" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="1257" type="const double" name="getE" />
    <UML:Operation visibility="public" xmi.id="1258" type="bool" name="isVerified" />
    <UML:Operation visibility="public" xmi.id="1259" type="void" name="saveNonSmoothLawToXML" />
    <UML:Operation visibility="public" xmi.id="1260" type="void" name="setE" >
     <UML:Parameter visibility="private" xmi.id="1261" value="" type="const double &amp;" name="newVal" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1262" type="" name="~NewtonImpactLawNSL" />
    <UML:Attribute visibility="private" xmi.id="1248" value="" type="double" name="e" />
   </UML:Class>
   <UML:Enum stereotype="enum" visibility="public" xmi.id="1283" name="dynamicalsystem" >
    <UML:EnumLiteral visibility="public" xmi.id="1284" name="LAGRANGIANNLDS" />
    <UML:EnumLiteral visibility="public" xmi.id="1285" name="LAGRANGIANTIDS" />
    <UML:EnumLiteral visibility="public" xmi.id="1286" name="LINEARTIDS" />
   </UML:Enum>
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="1287" name=")" />
   <UML:Class stereotype="class" visibility="public" xmi.id="1366" name="LinearTIDS" >
    <UML:Operation visibility="protected" xmi.id="1367" type="" name="LinearTIDS" />
    <UML:Operation visibility="public" xmi.id="1368" type="" name="LinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1369" value="" type="DynamicalSystemXML *" />
     <UML:Parameter visibility="private" xmi.id="1370" value="" type="NonSmoothDynamicalSystem *" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1371" type="" name="LinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1372" value="" type="const DynamicalSystem &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1373" type="" name="LinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1374" value="" type="const LinearTIDS &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1375" type="" name="LinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1376" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="1377" value="" type="const SiconosVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1378" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1379" type="" name="LinearTIDS" >
     <UML:Parameter visibility="private" xmi.id="1380" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="1381" value="" type="const SiconosVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="1382" value="" type="const SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="1383" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1384" type="bool" name="checkDynamicalSystem" />
    <UML:Operation visibility="public" xmi.id="1385" type="void" name="computeJacobianXRhs" >
     <UML:Parameter visibility="private" xmi.id="1386" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="1387" value="" type="const bool &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1388" type="void" name="computeRhs" >
     <UML:Parameter visibility="private" xmi.id="1389" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="1390" value="" type="const bool &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1391" type="LinearTIDS *" name="convert" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="1392" value="" type="DynamicalSystem *" name="ds" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="1393" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="1394" type="" name="~LinearTIDS" />
   </UML:Class>
   <UML:Association visibility="public" xmi.id="52" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="47" />
     <UML:AssociationEndRole visibility="private" type="51" name="topology" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="135" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="132" />
     <UML:AssociationEndRole visibility="protected" type="134" name="interaction" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="588" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="580" />
     <UML:AssociationEndRole visibility="protected" type="47" name="nsds" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="986" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="985" />
     <UML:AssociationEndRole visibility="private" type="134" name="linkedInteraction" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="10" visibility="public" xmi.id="1263" parent="270" />
   <UML:Generalization child="21" visibility="public" xmi.id="1264" parent="270" />
   <UML:Generalization child="99" visibility="public" xmi.id="1265" parent="756" />
   <UML:Generalization child="211" visibility="public" xmi.id="1266" parent="472" />
   <UML:Generalization child="279" visibility="public" xmi.id="1267" parent="472" />
   <UML:Generalization child="300" visibility="public" xmi.id="1268" parent="472" />
   <UML:Generalization child="309" visibility="public" xmi.id="1269" parent="172" />
   <UML:Generalization child="323" visibility="public" xmi.id="1270" parent="172" />
   <UML:Generalization child="329" visibility="public" xmi.id="1271" parent="323" />
   <UML:Generalization child="359" visibility="public" xmi.id="1272" parent="1094" />
   <UML:Generalization child="369" visibility="public" xmi.id="1273" parent="580" />
   <UML:Generalization child="420" visibility="public" xmi.id="1274" parent="1226" />
   <UML:Generalization child="756" visibility="public" xmi.id="1275" parent="1094" />
   <UML:Generalization child="766" visibility="public" xmi.id="1276" parent="580" />
   <UML:Generalization child="1016" visibility="public" xmi.id="1277" parent="270" />
   <UML:Generalization child="1027" visibility="public" xmi.id="1278" parent="359" />
   <UML:Generalization child="1037" visibility="public" xmi.id="1279" parent="766" />
   <UML:Generalization child="1141" visibility="public" xmi.id="1280" parent="132" />
   <UML:Generalization child="1226" visibility="public" xmi.id="1281" parent="132" />
   <UML:Generalization child="1247" visibility="public" xmi.id="1282" parent="472" />
   <UML:Association visibility="public" xmi.id="1297" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="51" />
     <UML:AssociationEndRole visibility="public" type="134" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1300" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="47" />
     <UML:AssociationEndRole visibility="public" type="1094" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1314" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="580" />
     <UML:AssociationEndRole visibility="public" type="172" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1319" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="134" />
     <UML:AssociationEndRole visibility="public" type="580" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1331" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="47" />
     <UML:AssociationEndRole visibility="public" type="134" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1332" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="47" />
     <UML:AssociationEndRole visibility="public" type="580" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1358" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="985" />
     <UML:AssociationEndRole visibility="public" type="134" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1359" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="134" />
     <UML:AssociationEndRole visibility="public" type="132" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1360" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="134" />
     <UML:AssociationEndRole visibility="public" type="472" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1363" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="580" />
     <UML:AssociationEndRole visibility="public" type="270" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1364" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="47" />
     <UML:AssociationEndRole visibility="public" type="51" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="1366" visibility="public" xmi.id="1395" parent="369" />
  </UML:Model>
  <diagrams>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="1006" snapy="10" showatts="0" xmi.id="1" documentation="" type="402" showops="0" showpackage="0" name="class diagram" localid="30000" showstereotype="0" showscope="0" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#2f0dd5" canvasheight="821" >
    <widgets>
     <UML:ClassWidget usesdiagramfillcolour="1" width="193" showattsigs="603" usesdiagramusefillcolour="1" x="353" linecolour="none" y="28" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="47" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="119" showattsigs="603" usesdiagramusefillcolour="1" x="164" linecolour="none" y="80" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="580" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="74" showattsigs="603" usesdiagramusefillcolour="1" x="443" linecolour="none" y="153" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="134" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="70" showattsigs="603" usesdiagramusefillcolour="1" x="506" linecolour="none" y="71" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="51" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="125" showattsigs="603" usesdiagramusefillcolour="1" x="731" linecolour="none" y="49" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="1094" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="78" showattsigs="603" usesdiagramusefillcolour="1" x="754" linecolour="none" y="154" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="1027" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="66" showattsigs="603" usesdiagramusefillcolour="1" x="760" linecolour="none" y="103" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="359" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="136" showattsigs="603" usesdiagramusefillcolour="1" x="866" linecolour="none" y="104" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="99" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="97" showattsigs="603" usesdiagramusefillcolour="1" x="886" linecolour="none" y="49" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="756" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="59" showattsigs="603" usesdiagramusefillcolour="1" x="358" linecolour="none" y="209" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="132" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="89" showattsigs="603" usesdiagramusefillcolour="1" x="452" linecolour="none" y="209" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="1226" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="128" showattsigs="603" usesdiagramusefillcolour="1" x="432" linecolour="none" y="273" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="420" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="70" showattsigs="603" usesdiagramusefillcolour="1" x="352" linecolour="none" y="274" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="1141" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="108" showattsigs="603" usesdiagramusefillcolour="1" x="603" linecolour="none" y="152" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="472" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="171" showattsigs="603" usesdiagramusefillcolour="1" x="689" linecolour="none" y="268" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="211" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="148" showattsigs="603" usesdiagramusefillcolour="1" x="588" linecolour="none" y="306" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="1247" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="203" showattsigs="603" usesdiagramusefillcolour="1" x="781" linecolour="none" y="233" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="300" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="69" showattsigs="603" usesdiagramusefillcolour="1" x="579" linecolour="none" y="238" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="279" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="96" showattsigs="603" usesdiagramusefillcolour="1" x="31" linecolour="none" y="80" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="766" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="147" showattsigs="603" usesdiagramusefillcolour="1" x="6" linecolour="none" y="163" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="1037" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="65" showattsigs="603" usesdiagramusefillcolour="1" x="141" linecolour="none" y="127" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="369" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="103" showattsigs="603" usesdiagramusefillcolour="1" x="312" linecolour="none" y="82" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="985" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="102" showattsigs="603" usesdiagramusefillcolour="1" x="190" linecolour="none" y="249" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="172" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="110" showattsigs="603" usesdiagramusefillcolour="1" x="30" linecolour="none" y="278" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="323" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="149" showattsigs="603" usesdiagramusefillcolour="1" x="11" linecolour="none" y="343" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="329" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="79" showattsigs="603" usesdiagramusefillcolour="1" x="196" linecolour="none" y="343" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="309" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="129" showattsigs="603" usesdiagramusefillcolour="1" x="291" linecolour="none" y="341" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="270" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="75" showattsigs="603" usesdiagramusefillcolour="1" x="235" linecolour="none" y="403" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="1016" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="66" showattsigs="603" usesdiagramusefillcolour="1" x="326" linecolour="none" y="403" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="21" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="79" showattsigs="603" usesdiagramusefillcolour="1" x="407" linecolour="none" y="403" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="10" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="208" linecolour="none" y="54" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1320" text="(1,n)" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="491" linecolour="none" y="73" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1323" text="1" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="585" linecolour="none" y="143" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1325" text="1" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="243" linecolour="none" y="231" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1326" text="(1,n)" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="330" linecolour="none" y="320" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1327" text="1" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="702" linecolour="none" y="39" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1329" text="(0,n)" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="442" linecolour="none" y="128" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1333" text="2" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="477" linecolour="none" y="125" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1334" text="(0,n)" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="377" linecolour="none" y="189" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1361" text="1" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="271" linecolour="none" y="118" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1362" text="(1,n)" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="77" showattsigs="603" usesdiagramusefillcolour="1" x="135" linecolour="none" y="201" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="1366" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="4" indexb="3" widgetbid="134" widgetaid="51" xmi.id="1297" >
      <linepath>
       <startpoint startx="541" starty="98" />
       <endpoint endx="498" endy="153" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="1094" widgetaid="47" xmi.id="1300" >
      <linepath>
       <startpoint startx="546" starty="41" />
       <endpoint endx="731" endy="62" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="1094" widgetaid="359" xmi.id="1272" >
      <linepath>
       <startpoint startx="793" starty="103" />
       <endpoint endx="793" endy="76" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="359" widgetaid="1027" xmi.id="1278" >
      <linepath>
       <startpoint startx="793" starty="154" />
       <endpoint endx="793" endy="130" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="756" widgetaid="99" xmi.id="1265" >
      <linepath>
       <startpoint startx="934" starty="104" />
       <endpoint endx="934" endy="76" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="1094" widgetaid="756" xmi.id="1275" >
      <linepath>
       <startpoint startx="886" starty="62" />
       <endpoint endx="856" endy="62" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="132" widgetaid="1226" xmi.id="1281" >
      <linepath>
       <startpoint startx="452" starty="222" />
       <endpoint endx="417" endy="222" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="1226" widgetaid="420" xmi.id="1274" >
      <linepath>
       <startpoint startx="496" starty="273" />
       <endpoint endx="496" endy="236" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="132" widgetaid="1141" xmi.id="1280" >
      <linepath>
       <startpoint startx="387" starty="274" />
       <endpoint endx="387" endy="236" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="5" indexb="3" widgetbid="472" widgetaid="211" xmi.id="1266" >
      <linepath>
       <startpoint startx="774" starty="268" />
       <endpoint endx="667" endy="179" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="5" indexb="2" widgetbid="472" widgetaid="1247" xmi.id="1282" >
      <linepath>
       <startpoint startx="662" starty="306" />
       <endpoint endx="646" endy="179" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="5" indexb="4" widgetbid="472" widgetaid="300" xmi.id="1268" >
      <linepath>
       <startpoint startx="882" starty="233" />
       <endpoint endx="689" endy="179" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="5" indexb="1" widgetbid="472" widgetaid="279" xmi.id="1267" >
      <linepath>
       <startpoint startx="613" starty="238" />
       <endpoint endx="624" endy="179" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="580" widgetaid="766" xmi.id="1276" >
      <linepath>
       <startpoint startx="127" starty="93" />
       <endpoint endx="164" endy="93" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="766" widgetaid="1037" xmi.id="1279" >
      <linepath>
       <startpoint startx="79" starty="163" />
       <endpoint endx="79" endy="107" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="5" indexb="1" widgetbid="580" widgetaid="369" xmi.id="1273" >
      <linepath>
       <startpoint startx="173" starty="127" />
       <endpoint endx="187" endy="107" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="5" indexa="2" totalcountb="2" indexb="1" widgetbid="172" widgetaid="580" xmi.id="1314" >
      <linepath>
       <startpoint startx="211" starty="107" />
       <endpoint endx="241" endy="249" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="172" widgetaid="323" xmi.id="1270" >
      <linepath>
       <startpoint startx="85" starty="278" />
       <endpoint endx="190" endy="262" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="323" widgetaid="329" xmi.id="1271" >
      <linepath>
       <startpoint startx="85" starty="343" />
       <endpoint endx="85" endy="305" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="172" widgetaid="309" xmi.id="1269" >
      <linepath>
       <startpoint startx="235" starty="343" />
       <endpoint endx="241" endy="276" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="4" indexb="1" widgetbid="270" widgetaid="1016" xmi.id="1277" >
      <linepath>
       <startpoint startx="272" starty="403" />
       <endpoint endx="323" endy="368" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="4" indexb="2" widgetbid="270" widgetaid="21" xmi.id="1264" >
      <linepath>
       <startpoint startx="359" starty="403" />
       <endpoint endx="355" endy="368" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="4" indexb="3" widgetbid="270" widgetaid="10" xmi.id="1263" >
      <linepath>
       <startpoint startx="446" starty="403" />
       <endpoint endx="387" endy="368" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="1" totalcountb="5" indexb="4" widgetbid="580" widgetaid="134" xmi.id="1319" >
      <linepath>
       <startpoint startx="443" starty="162" />
       <endpoint endx="259" endy="107" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="1" totalcountb="4" indexb="2" widgetbid="134" widgetaid="47" xmi.id="1331" >
      <linepath>
       <startpoint startx="417" starty="55" />
       <endpoint endx="480" endy="153" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="580" widgetaid="47" xmi.id="1332" >
      <linepath>
       <startpoint startx="353" starty="41" />
       <endpoint endx="223" endy="80" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="4" indexb="1" widgetbid="134" widgetaid="985" xmi.id="1358" >
      <linepath>
       <startpoint startx="363" starty="109" />
       <endpoint endx="461" endy="153" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="132" widgetaid="134" xmi.id="1359" >
      <linepath>
       <startpoint startx="443" starty="171" />
       <endpoint endx="387" endy="209" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="472" widgetaid="134" xmi.id="1360" >
      <linepath>
       <startpoint startx="517" starty="166" />
       <endpoint endx="603" endy="165" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="5" indexa="3" totalcountb="2" indexb="1" widgetbid="270" widgetaid="580" xmi.id="1363" >
      <linepath>
       <startpoint startx="235" starty="107" />
       <endpoint endx="355" endy="341" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="51" widgetaid="47" xmi.id="1364" >
      <linepath>
       <startpoint startx="481" starty="55" />
       <endpoint endx="506" endy="84" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="369" widgetaid="1366" roleBdoc="" roleAdoc="" type="500" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="173" starty="201" />
       <endpoint endx="173" endy="154" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Views" >
    <listitem open="1" type="801" id="-1" label="Logical View" >
     <listitem open="0" type="807" id="1" label="class diagram" />
     <listitem open="0" type="813" id="270" label="BoundaryCondition" >
      <listitem open="0" type="814" id="271" label="bcXML" />
      <listitem open="0" type="815" id="273" label="BoundaryCondition" />
      <listitem open="0" type="815" id="272" label="BoundaryCondition" />
      <listitem open="0" type="815" id="275" label="fillBCWithBCXML" />
      <listitem open="0" type="815" id="276" label="setBoundaryConditionXML" />
      <listitem open="0" type="815" id="278" label="~BoundaryCondition" />
     </listitem>
     <listitem open="0" type="813" id="300" label="ComplementarityConditionNSL" >
      <listitem open="0" type="815" id="302" label="ComplementarityConditionNSL" />
      <listitem open="0" type="815" id="301" label="ComplementarityConditionNSL" />
      <listitem open="0" type="815" id="304" label="convert" />
      <listitem open="0" type="815" id="306" label="isVerified" />
      <listitem open="0" type="815" id="307" label="saveNonSmoothLawToXML" />
      <listitem open="0" type="815" id="308" label="~ComplementarityConditionNSL" />
     </listitem>
     <listitem open="0" type="813" id="172" label="DSInputOutput" >
      <listitem open="0" type="814" id="173" label="H" />
      <listitem open="0" type="814" id="174" label="cShared" />
      <listitem open="0" type="814" id="175" label="dsioxml" />
      <listitem open="0" type="814" id="176" label="number" />
      <listitem open="0" type="815" id="177" label="DSInputOutput" />
      <listitem open="0" type="815" id="178" label="DSInputOutput" />
      <listitem open="0" type="815" id="180" label="createDSInputOutput" />
      <listitem open="0" type="815" id="185" label="display" />
      <listitem open="0" type="815" id="186" label="fillDSInputOutputWithDSInputOutputXML" />
      <listitem open="0" type="815" id="187" label="getDSInputOutputXML" />
      <listitem open="0" type="815" id="188" label="getHPtr" />
      <listitem open="0" type="815" id="189" label="getNumber" />
      <listitem open="0" type="815" id="190" label="init" />
      <listitem open="0" type="815" id="191" label="saveDSInputOutputToXML" />
      <listitem open="0" type="815" id="192" label="setComputeInputFunction" />
      <listitem open="0" type="815" id="195" label="setComputeOutputFunction" />
      <listitem open="0" type="815" id="198" label="setDSInputOutputXML" />
      <listitem open="0" type="815" id="200" label="setDynamicalSystems" />
      <listitem open="0" type="815" id="202" label="setH" />
      <listitem open="0" type="815" id="204" label="setId" />
      <listitem open="0" type="815" id="206" label="setNumber" />
      <listitem open="0" type="815" id="208" label="void" />
      <listitem open="0" type="815" id="210" label="~DSInputOutput" />
     </listitem>
     <listitem open="0" type="813" id="580" label="DynamicalSystem" >
      <listitem open="0" type="814" id="582" label="T" />
      <listitem open="0" type="814" id="583" label="cShared" />
      <listitem open="0" type="814" id="584" label="dsxml" />
      <listitem open="0" type="814" id="585" label="isBCAllocatedIn" />
      <listitem open="0" type="814" id="586" label="jacobianX" />
      <listitem open="0" type="814" id="587" label="n" />
      <listitem open="0" type="814" id="589" label="number" />
      <listitem open="0" type="814" id="590" label="r" />
      <listitem open="0" type="814" id="591" label="rMemory" />
      <listitem open="0" type="814" id="592" label="stepsInMemory" />
      <listitem open="0" type="814" id="593" label="u" />
      <listitem open="0" type="814" id="594" label="uSize" />
      <listitem open="0" type="814" id="595" label="x" />
      <listitem open="0" type="814" id="596" label="x0" />
      <listitem open="0" type="814" id="597" label="xDot" />
      <listitem open="0" type="814" id="598" label="xDotMemory" />
      <listitem open="0" type="814" id="599" label="xFree" />
      <listitem open="0" type="814" id="600" label="xMemory" />
      <listitem open="0" type="815" id="602" label="DynamicalSystem" />
      <listitem open="0" type="815" id="605" label="DynamicalSystem" />
      <listitem open="0" type="815" id="607" label="DynamicalSystem" />
      <listitem open="0" type="815" id="601" label="DynamicalSystem" />
      <listitem open="0" type="815" id="612" label="addDSInputOutput" />
      <listitem open="0" type="815" id="614" label="addTmpWorkVector" />
      <listitem open="0" type="815" id="617" label="allocateTmpWorkVector" />
      <listitem open="0" type="815" id="620" label="computeJacobianX" />
      <listitem open="0" type="815" id="622" label="computeT" />
      <listitem open="0" type="815" id="623" label="computeU" />
      <listitem open="0" type="815" id="625" label="computeVectorField" />
      <listitem open="0" type="815" id="627" label="display" />
      <listitem open="0" type="815" id="628" label="dsConvergenceIndicator" />
      <listitem open="0" type="815" id="629" label="fillBoundaryConditionsFromXml" />
      <listitem open="0" type="815" id="630" label="fillDsioFromXml" />
      <listitem open="0" type="815" id="631" label="freeTmpWorkVector" />
      <listitem open="0" type="815" id="633" label="getBoundaryConditionPtr" />
      <listitem open="0" type="815" id="634" label="getDSInputOutput" />
      <listitem open="0" type="815" id="636" label="getDynamicalSystemXMLPtr" />
      <listitem open="0" type="815" id="637" label="getJacobianX" />
      <listitem open="0" type="815" id="638" label="getJacobianXPtr" />
      <listitem open="0" type="815" id="639" label="getN" />
      <listitem open="0" type="815" id="640" label="getNSDSPtr" />
      <listitem open="0" type="815" id="641" label="getNumber" />
      <listitem open="0" type="815" id="642" label="getR" />
      <listitem open="0" type="815" id="643" label="getRMemory" />
      <listitem open="0" type="815" id="644" label="getRMemoryPtr" />
      <listitem open="0" type="815" id="645" label="getRPtr" />
      <listitem open="0" type="815" id="646" label="getStepsInMemory" />
      <listitem open="0" type="815" id="647" label="getT" />
      <listitem open="0" type="815" id="648" label="getTPtr" />
      <listitem open="0" type="815" id="649" label="getTmpWorkVector" />
      <listitem open="0" type="815" id="651" label="getU" />
      <listitem open="0" type="815" id="652" label="getUPtr" />
      <listitem open="0" type="815" id="653" label="getUSize" />
      <listitem open="0" type="815" id="654" label="getVectorFieldPtr" />
      <listitem open="0" type="815" id="655" label="getX" />
      <listitem open="0" type="815" id="656" label="getX0" />
      <listitem open="0" type="815" id="657" label="getX0Ptr" />
      <listitem open="0" type="815" id="658" label="getXDot" />
      <listitem open="0" type="815" id="659" label="getXDotMemory" />
      <listitem open="0" type="815" id="660" label="getXDotMemoryPtr" />
      <listitem open="0" type="815" id="661" label="getXDotPtr" />
      <listitem open="0" type="815" id="662" label="getXFree" />
      <listitem open="0" type="815" id="663" label="getXFreePtr" />
      <listitem open="0" type="815" id="664" label="getXMemory" />
      <listitem open="0" type="815" id="665" label="getXMemoryPtr" />
      <listitem open="0" type="815" id="666" label="getXPtr" />
      <listitem open="0" type="815" id="667" label="initMemory" />
      <listitem open="0" type="815" id="669" label="saveBCToXML" />
      <listitem open="0" type="815" id="670" label="saveDSDataToXML" />
      <listitem open="0" type="815" id="671" label="saveDSIOToXML" />
      <listitem open="0" type="815" id="672" label="saveDSToXML" />
      <listitem open="0" type="815" id="673" label="setBoundaryConditionPtr" />
      <listitem open="0" type="815" id="675" label="setComputeJacobianXFunction" />
      <listitem open="0" type="815" id="678" label="setComputeTFunction" />
      <listitem open="0" type="815" id="681" label="setComputeUFunction" />
      <listitem open="0" type="815" id="684" label="setDSInputOutputs" />
      <listitem open="0" type="815" id="686" label="setDynamicalSystemXMLPtr" />
      <listitem open="0" type="815" id="688" label="setId" />
      <listitem open="0" type="815" id="690" label="setJacobianX" />
      <listitem open="0" type="815" id="692" label="setJacobianXPtr" />
      <listitem open="0" type="815" id="694" label="setN" />
      <listitem open="0" type="815" id="696" label="setNSDSPtr" />
      <listitem open="0" type="815" id="698" label="setNumber" />
      <listitem open="0" type="815" id="700" label="setR" />
      <listitem open="0" type="815" id="702" label="setRMemory" />
      <listitem open="0" type="815" id="704" label="setRMemoryPtr" />
      <listitem open="0" type="815" id="706" label="setRPtr" />
      <listitem open="0" type="815" id="708" label="setStepsInMemory" />
      <listitem open="0" type="815" id="710" label="setT" />
      <listitem open="0" type="815" id="712" label="setTPtr" />
      <listitem open="0" type="815" id="714" label="setTmpWorkVector" />
      <listitem open="0" type="815" id="717" label="setType" />
      <listitem open="0" type="815" id="719" label="setU" />
      <listitem open="0" type="815" id="721" label="setUPtr" />
      <listitem open="0" type="815" id="723" label="setUSize" />
      <listitem open="0" type="815" id="725" label="setVectorFieldFunction" />
      <listitem open="0" type="815" id="728" label="setX" />
      <listitem open="0" type="815" id="730" label="setX0" />
      <listitem open="0" type="815" id="732" label="setX0Ptr" />
      <listitem open="0" type="815" id="734" label="setXDot" />
      <listitem open="0" type="815" id="736" label="setXDotMemory" />
      <listitem open="0" type="815" id="738" label="setXDotMemoryPtr" />
      <listitem open="0" type="815" id="740" label="setXDotPtr" />
      <listitem open="0" type="815" id="742" label="setXFree" />
      <listitem open="0" type="815" id="744" label="setXFreePtr" />
      <listitem open="0" type="815" id="746" label="setXMemory" />
      <listitem open="0" type="815" id="748" label="setXMemoryPtr" />
      <listitem open="0" type="815" id="750" label="setXPtr" />
      <listitem open="0" type="815" id="752" label="swapInMemory" />
      <listitem open="0" type="815" id="753" label="void" />
      <listitem open="0" type="815" id="755" label="~DynamicalSystem" />
     </listitem>
     <listitem open="0" type="813" id="1094" label="EqualityConstraint" >
      <listitem open="0" type="814" id="1095" label="G" />
      <listitem open="0" type="814" id="1096" label="cShared" />
      <listitem open="0" type="814" id="1097" label="ecXML" />
      <listitem open="0" type="814" id="1098" label="number" />
      <listitem open="0" type="815" id="1099" label="EqualityConstraint" />
      <listitem open="0" type="815" id="1100" label="EqualityConstraint" />
      <listitem open="0" type="815" id="1102" label="addDSInputOutput" />
      <listitem open="0" type="815" id="1104" label="computeInput" />
      <listitem open="0" type="815" id="1106" label="computeOutput" />
      <listitem open="0" type="815" id="1108" label="createEqualityConstraint" />
      <listitem open="0" type="815" id="1113" label="display" />
      <listitem open="0" type="815" id="1114" label="fillEqualityConstraintWithEqualityConstraintXML" />
      <listitem open="0" type="815" id="1115" label="getDSInputOutput" />
      <listitem open="0" type="815" id="1117" label="getEqualityConstraintXML" />
      <listitem open="0" type="815" id="1118" label="getGPtr" />
      <listitem open="0" type="815" id="1119" label="getNumber" />
      <listitem open="0" type="815" id="1120" label="init" />
      <listitem open="0" type="815" id="1121" label="saveEqualityConstraintToXML" />
      <listitem open="0" type="815" id="1122" label="setComputeInputFunction" />
      <listitem open="0" type="815" id="1125" label="setComputeOutputFunction" />
      <listitem open="0" type="815" id="1128" label="setDSInputOutputs" />
      <listitem open="0" type="815" id="1130" label="setEqualityConstraintXML" />
      <listitem open="0" type="815" id="1132" label="setG" />
      <listitem open="0" type="815" id="1134" label="setId" />
      <listitem open="0" type="815" id="1136" label="setNumber" />
      <listitem open="0" type="815" id="1138" label="void" />
      <listitem open="0" type="815" id="1140" label="~EqualityConstraint" />
     </listitem>
     <listitem open="0" type="813" id="134" label="Interaction" >
      <listitem open="0" type="814" id="468" label="interactionxml" />
      <listitem open="0" type="814" id="469" label="isNsLawAllocatedIn" />
      <listitem open="0" type="814" id="470" label="isRelationAllocatedIn" />
      <listitem open="0" type="814" id="471" label="nInteraction" />
      <listitem open="0" type="814" id="474" label="number" />
      <listitem open="0" type="815" id="480" label="Interaction" />
      <listitem open="0" type="815" id="476" label="Interaction" />
      <listitem open="0" type="815" id="477" label="Interaction" />
      <listitem open="0" type="815" id="482" label="Interaction" />
      <listitem open="0" type="815" id="487" label="createComplementarityConditionNSL" />
      <listitem open="0" type="815" id="488" label="createNewtonImpactFrictionNSL" />
      <listitem open="0" type="815" id="492" label="createNewtonImpactLawNSL" />
      <listitem open="0" type="815" id="494" label="createRelayNSL" />
      <listitem open="0" type="815" id="497" label="display" />
      <listitem open="0" type="815" id="498" label="getDynamicalSystem" />
      <listitem open="0" type="815" id="500" label="getDynamicalSystemPtr" />
      <listitem open="0" type="815" id="502" label="getInteractionXMLPtr" />
      <listitem open="0" type="815" id="503" label="getLambda" />
      <listitem open="0" type="815" id="505" label="getLambdaOld" />
      <listitem open="0" type="815" id="507" label="getLambdaOldPtr" />
      <listitem open="0" type="815" id="509" label="getLambdaPtr" />
      <listitem open="0" type="815" id="511" label="getNInteraction" />
      <listitem open="0" type="815" id="512" label="getNonSmoothLawPtr" />
      <listitem open="0" type="815" id="513" label="getNumber" />
      <listitem open="0" type="815" id="514" label="getRelationPtr" />
      <listitem open="0" type="815" id="515" label="getY" />
      <listitem open="0" type="815" id="517" label="getYOld" />
      <listitem open="0" type="815" id="519" label="getYOldPtr" />
      <listitem open="0" type="815" id="521" label="getYPtr" />
      <listitem open="0" type="815" id="523" label="saveInteractionToXML" />
      <listitem open="0" type="815" id="524" label="setDynamicalSystems" />
      <listitem open="0" type="815" id="526" label="setId" />
      <listitem open="0" type="815" id="528" label="setInteractionXMLPtr" />
      <listitem open="0" type="815" id="530" label="setLambda" />
      <listitem open="0" type="815" id="532" label="setLambda" />
      <listitem open="0" type="815" id="537" label="setLambdaOld" />
      <listitem open="0" type="815" id="535" label="setLambdaOld" />
      <listitem open="0" type="815" id="542" label="setLambdaOldPtr" />
      <listitem open="0" type="815" id="540" label="setLambdaOldPtr" />
      <listitem open="0" type="815" id="547" label="setLambdaPtr" />
      <listitem open="0" type="815" id="545" label="setLambdaPtr" />
      <listitem open="0" type="815" id="550" label="setNInteraction" />
      <listitem open="0" type="815" id="552" label="setNonSmoothLawPtr" />
      <listitem open="0" type="815" id="554" label="setNumber" />
      <listitem open="0" type="815" id="556" label="setRelationPtr" />
      <listitem open="0" type="815" id="560" label="setY" />
      <listitem open="0" type="815" id="558" label="setY" />
      <listitem open="0" type="815" id="565" label="setYOld" />
      <listitem open="0" type="815" id="563" label="setYOld" />
      <listitem open="0" type="815" id="570" label="setYOldPtr" />
      <listitem open="0" type="815" id="568" label="setYOldPtr" />
      <listitem open="0" type="815" id="573" label="setYPtr" />
      <listitem open="0" type="815" id="575" label="setYPtr" />
      <listitem open="0" type="815" id="578" label="swapInMemory" />
      <listitem open="0" type="815" id="579" label="~Interaction" />
     </listitem>
     <listitem open="0" type="813" id="985" label="InteractionLink" >
      <listitem open="0" type="815" id="989" label="InteractionLink" />
      <listitem open="0" type="815" id="988" label="InteractionLink" />
      <listitem open="0" type="815" id="993" label="display" />
      <listitem open="0" type="815" id="994" label="getLinkedInteractionPtr" />
      <listitem open="0" type="815" id="995" label="getOriginInteractionPtr" />
      <listitem open="0" type="815" id="996" label="setCommonDS" />
      <listitem open="0" type="815" id="998" label="setLinkedInteractionPtr" />
      <listitem open="0" type="815" id="1000" label="setOriginInteractionPtr" />
      <listitem open="0" type="815" id="1002" label="~InteractionLink" />
     </listitem>
     <listitem open="0" type="813" id="766" label="LagrangianDS" >
      <listitem open="0" type="814" id="767" label="NNL" />
      <listitem open="0" type="814" id="768" label="cShared" />
      <listitem open="0" type="814" id="769" label="fExt" />
      <listitem open="0" type="814" id="770" label="fInt" />
      <listitem open="0" type="814" id="771" label="isMassAllocatedIn" />
      <listitem open="0" type="814" id="772" label="isPAllocatedIn" />
      <listitem open="0" type="814" id="773" label="jacobianQFInt" />
      <listitem open="0" type="814" id="774" label="jacobianQNNL" />
      <listitem open="0" type="814" id="775" label="jacobianVelocityFInt" />
      <listitem open="0" type="814" id="776" label="jacobianVelocityNNL" />
      <listitem open="0" type="814" id="777" label="mass" />
      <listitem open="0" type="814" id="778" label="ndof" />
      <listitem open="0" type="814" id="779" label="p" />
      <listitem open="0" type="814" id="780" label="q" />
      <listitem open="0" type="814" id="781" label="q0" />
      <listitem open="0" type="814" id="782" label="qFree" />
      <listitem open="0" type="814" id="783" label="qMemory" />
      <listitem open="0" type="814" id="784" label="velocity" />
      <listitem open="0" type="814" id="785" label="velocity0" />
      <listitem open="0" type="814" id="786" label="velocityFree" />
      <listitem open="0" type="814" id="787" label="velocityMemory" />
      <listitem open="0" type="815" id="789" label="LagrangianDS" />
      <listitem open="0" type="815" id="794" label="LagrangianDS" />
      <listitem open="0" type="815" id="800" label="LagrangianDS" />
      <listitem open="0" type="815" id="792" label="LagrangianDS" />
      <listitem open="0" type="815" id="788" label="LagrangianDS" />
      <listitem open="0" type="815" id="806" label="computeFExt" />
      <listitem open="0" type="815" id="808" label="computeFInt" />
      <listitem open="0" type="815" id="810" label="computeFInt" />
      <listitem open="0" type="815" id="816" label="computeJacobianQFInt" />
      <listitem open="0" type="815" id="814" label="computeJacobianQFInt" />
      <listitem open="0" type="815" id="821" label="computeJacobianQNNL" />
      <listitem open="0" type="815" id="820" label="computeJacobianQNNL" />
      <listitem open="0" type="815" id="824" label="computeJacobianVelocityFInt" />
      <listitem open="0" type="815" id="826" label="computeJacobianVelocityFInt" />
      <listitem open="0" type="815" id="831" label="computeJacobianVelocityNNL" />
      <listitem open="0" type="815" id="830" label="computeJacobianVelocityNNL" />
      <listitem open="0" type="815" id="836" label="computeMass" />
      <listitem open="0" type="815" id="834" label="computeMass" />
      <listitem open="0" type="815" id="840" label="computeNNL" />
      <listitem open="0" type="815" id="839" label="computeNNL" />
      <listitem open="0" type="815" id="843" label="convert" />
      <listitem open="0" type="815" id="845" label="display" />
      <listitem open="0" type="815" id="846" label="dsConvergenceIndicator" />
      <listitem open="0" type="815" id="847" label="getFExt" />
      <listitem open="0" type="815" id="848" label="getFExtPtr" />
      <listitem open="0" type="815" id="849" label="getFInt" />
      <listitem open="0" type="815" id="850" label="getFIntPtr" />
      <listitem open="0" type="815" id="851" label="getIsLDSPlugin" />
      <listitem open="0" type="815" id="853" label="getJacobianQFInt" />
      <listitem open="0" type="815" id="854" label="getJacobianQFIntPtr" />
      <listitem open="0" type="815" id="855" label="getJacobianQNNL" />
      <listitem open="0" type="815" id="856" label="getJacobianQNNLPtr" />
      <listitem open="0" type="815" id="857" label="getJacobianVelocityFInt" />
      <listitem open="0" type="815" id="858" label="getJacobianVelocityFIntPtr" />
      <listitem open="0" type="815" id="859" label="getJacobianVelocityNNL" />
      <listitem open="0" type="815" id="860" label="getJacobianVelocityNNLPtr" />
      <listitem open="0" type="815" id="861" label="getMass" />
      <listitem open="0" type="815" id="862" label="getMassPtr" />
      <listitem open="0" type="815" id="863" label="getNNL" />
      <listitem open="0" type="815" id="864" label="getNNLPtr" />
      <listitem open="0" type="815" id="865" label="getNdof" />
      <listitem open="0" type="815" id="866" label="getP" />
      <listitem open="0" type="815" id="867" label="getPPtr" />
      <listitem open="0" type="815" id="868" label="getQ" />
      <listitem open="0" type="815" id="869" label="getQ0" />
      <listitem open="0" type="815" id="870" label="getQ0Ptr" />
      <listitem open="0" type="815" id="871" label="getQFree" />
      <listitem open="0" type="815" id="872" label="getQFreePtr" />
      <listitem open="0" type="815" id="873" label="getQMemory" />
      <listitem open="0" type="815" id="874" label="getQMemoryPtr" />
      <listitem open="0" type="815" id="875" label="getQPtr" />
      <listitem open="0" type="815" id="876" label="getVelocity" />
      <listitem open="0" type="815" id="877" label="getVelocity0" />
      <listitem open="0" type="815" id="878" label="getVelocity0Ptr" />
      <listitem open="0" type="815" id="879" label="getVelocityFree" />
      <listitem open="0" type="815" id="880" label="getVelocityFreePtr" />
      <listitem open="0" type="815" id="881" label="getVelocityMemory" />
      <listitem open="0" type="815" id="882" label="getVelocityMemoryPtr" />
      <listitem open="0" type="815" id="883" label="getVelocityPtr" />
      <listitem open="0" type="815" id="884" label="initMemory" />
      <listitem open="0" type="815" id="886" label="saveDSToXML" />
      <listitem open="0" type="815" id="887" label="setComputeFExtFunction" />
      <listitem open="0" type="815" id="890" label="setComputeFIntFunction" />
      <listitem open="0" type="815" id="893" label="setComputeJacobianQFIntFunction" />
      <listitem open="0" type="815" id="896" label="setComputeJacobianQNNLFunction" />
      <listitem open="0" type="815" id="899" label="setComputeJacobianVelocityFIntFunction" />
      <listitem open="0" type="815" id="902" label="setComputeJacobianVelocityNNLFunction" />
      <listitem open="0" type="815" id="905" label="setComputeMassFunction" />
      <listitem open="0" type="815" id="908" label="setComputeNNLFunction" />
      <listitem open="0" type="815" id="911" label="setFExt" />
      <listitem open="0" type="815" id="913" label="setFExtPtr" />
      <listitem open="0" type="815" id="915" label="setFInt" />
      <listitem open="0" type="815" id="917" label="setFIntPtr" />
      <listitem open="0" type="815" id="919" label="setJacobianQFInt" />
      <listitem open="0" type="815" id="921" label="setJacobianQFIntPtr" />
      <listitem open="0" type="815" id="923" label="setJacobianQNNL" />
      <listitem open="0" type="815" id="925" label="setJacobianQNNLPtr" />
      <listitem open="0" type="815" id="927" label="setJacobianVelocityFInt" />
      <listitem open="0" type="815" id="929" label="setJacobianVelocityFIntPtr" />
      <listitem open="0" type="815" id="931" label="setJacobianVelocityNNL" />
      <listitem open="0" type="815" id="933" label="setJacobianVelocityNNLPtr" />
      <listitem open="0" type="815" id="935" label="setMass" />
      <listitem open="0" type="815" id="937" label="setMassPtr" />
      <listitem open="0" type="815" id="939" label="setNNL" />
      <listitem open="0" type="815" id="941" label="setNNLPtr" />
      <listitem open="0" type="815" id="943" label="setNdof" />
      <listitem open="0" type="815" id="945" label="setP" />
      <listitem open="0" type="815" id="947" label="setPPtr" />
      <listitem open="0" type="815" id="949" label="setQ" />
      <listitem open="0" type="815" id="951" label="setQ0" />
      <listitem open="0" type="815" id="953" label="setQ0Ptr" />
      <listitem open="0" type="815" id="955" label="setQFree" />
      <listitem open="0" type="815" id="957" label="setQFreePtr" />
      <listitem open="0" type="815" id="959" label="setQMemory" />
      <listitem open="0" type="815" id="961" label="setQMemoryPtr" />
      <listitem open="0" type="815" id="963" label="setQPtr" />
      <listitem open="0" type="815" id="965" label="setVelocity" />
      <listitem open="0" type="815" id="967" label="setVelocity0" />
      <listitem open="0" type="815" id="969" label="setVelocity0Ptr" />
      <listitem open="0" type="815" id="971" label="setVelocityFree" />
      <listitem open="0" type="815" id="973" label="setVelocityFreePtr" />
      <listitem open="0" type="815" id="975" label="setVelocityMemory" />
      <listitem open="0" type="815" id="977" label="setVelocityMemoryPtr" />
      <listitem open="0" type="815" id="979" label="setVelocityPtr" />
      <listitem open="0" type="815" id="981" label="swapInMemory" />
      <listitem open="0" type="815" id="982" label="void" />
      <listitem open="0" type="815" id="984" label="~LagrangianDS" />
     </listitem>
     <listitem open="0" type="813" id="323" label="LagrangianDSIO" >
      <listitem open="0" type="814" id="324" label="cShared" />
      <listitem open="0" type="815" id="325" label="LagrangianDSIO" />
      <listitem open="0" type="815" id="326" label="void" />
      <listitem open="0" type="815" id="328" label="~LagrangianDSIO" />
     </listitem>
     <listitem open="0" type="813" id="756" label="LagrangianEC" >
      <listitem open="0" type="815" id="758" label="LagrangianEC" />
      <listitem open="0" type="815" id="757" label="LagrangianEC" />
      <listitem open="0" type="815" id="760" label="createEqualityConstraint" />
      <listitem open="0" type="815" id="765" label="~LagrangianEC" />
     </listitem>
     <listitem open="0" type="813" id="329" label="LagrangianLinearDSIO" >
      <listitem open="0" type="814" id="330" label="H" />
      <listitem open="0" type="814" id="331" label="b" />
      <listitem open="0" type="815" id="333" label="LagrangianLinearDSIO" />
      <listitem open="0" type="815" id="332" label="LagrangianLinearDSIO" />
      <listitem open="0" type="815" id="335" label="computeFreeOutput" />
      <listitem open="0" type="815" id="337" label="computeInput" />
      <listitem open="0" type="815" id="339" label="computeOutput" />
      <listitem open="0" type="815" id="341" label="convert" />
      <listitem open="0" type="815" id="343" label="createDSInputOutput" />
      <listitem open="0" type="815" id="347" label="display" />
      <listitem open="0" type="815" id="348" label="fillDSInputOutputWithDSInputOutputXML" />
      <listitem open="0" type="815" id="349" label="getB" />
      <listitem open="0" type="815" id="350" label="getBPtr" />
      <listitem open="0" type="815" id="351" label="getH" />
      <listitem open="0" type="815" id="352" label="getHPtr" />
      <listitem open="0" type="815" id="353" label="saveDSInputOutputToXML" />
      <listitem open="0" type="815" id="354" label="setB" />
      <listitem open="0" type="815" id="356" label="setH" />
      <listitem open="0" type="815" id="358" label="~LagrangianLinearDSIO" />
     </listitem>
     <listitem open="0" type="813" id="99" label="LagrangianLinearEC" >
      <listitem open="0" type="814" id="100" label="b" />
      <listitem open="0" type="814" id="101" label="h" />
      <listitem open="0" type="815" id="102" label="LagrangianLinearEC" />
      <listitem open="0" type="815" id="103" label="LagrangianLinearEC" />
      <listitem open="0" type="815" id="105" label="LagrangianLinearEC" />
      <listitem open="0" type="815" id="108" label="computeFreeOutput" />
      <listitem open="0" type="815" id="110" label="computeInput" />
      <listitem open="0" type="815" id="112" label="computeOutput" />
      <listitem open="0" type="815" id="114" label="convert" />
      <listitem open="0" type="815" id="116" label="createEqualityConstraint" />
      <listitem open="0" type="815" id="120" label="display" />
      <listitem open="0" type="815" id="121" label="fillEqualityConstraintWithEqualityConstraintXML" />
      <listitem open="0" type="815" id="122" label="getB" />
      <listitem open="0" type="815" id="123" label="getBPtr" />
      <listitem open="0" type="815" id="124" label="getH" />
      <listitem open="0" type="815" id="125" label="getHPtr" />
      <listitem open="0" type="815" id="126" label="saveEqualityConstraintToXML" />
      <listitem open="0" type="815" id="127" label="setB" />
      <listitem open="0" type="815" id="129" label="setH" />
      <listitem open="0" type="815" id="131" label="~LagrangianLinearEC" />
     </listitem>
     <listitem open="0" type="813" id="420" label="LagrangianLinearR" >
      <listitem open="0" type="814" id="421" label="H" />
      <listitem open="0" type="814" id="422" label="b" />
      <listitem open="0" type="814" id="423" label="isBAllocatedIn" />
      <listitem open="0" type="814" id="424" label="isHAllocatedIn" />
      <listitem open="0" type="815" id="429" label="LagrangianLinearR" />
      <listitem open="0" type="815" id="426" label="LagrangianLinearR" />
      <listitem open="0" type="815" id="425" label="LagrangianLinearR" />
      <listitem open="0" type="815" id="435" label="LagrangianLinearR" />
      <listitem open="0" type="815" id="432" label="LagrangianLinearR" />
      <listitem open="0" type="815" id="439" label="computeFreeOutput" />
      <listitem open="0" type="815" id="441" label="computeInput" />
      <listitem open="0" type="815" id="443" label="computeOutput" />
      <listitem open="0" type="815" id="445" label="convert" />
      <listitem open="0" type="815" id="447" label="display" />
      <listitem open="0" type="815" id="448" label="getB" />
      <listitem open="0" type="815" id="449" label="getBPtr" />
      <listitem open="0" type="815" id="450" label="getH" />
      <listitem open="0" type="815" id="451" label="getHBlockDS" />
      <listitem open="0" type="815" id="454" label="getHBlockDS" />
      <listitem open="0" type="815" id="457" label="getHPtr" />
      <listitem open="0" type="815" id="458" label="saveRelationToXML" />
      <listitem open="0" type="815" id="459" label="setB" />
      <listitem open="0" type="815" id="461" label="setBPtr" />
      <listitem open="0" type="815" id="463" label="setH" />
      <listitem open="0" type="815" id="465" label="setHPtr" />
      <listitem open="0" type="815" id="467" label="~LagrangianLinearR" />
     </listitem>
     <listitem open="0" type="813" id="1037" label="LagrangianLinearTIDS" >
      <listitem open="0" type="814" id="1038" label="C" />
      <listitem open="0" type="814" id="1039" label="K" />
      <listitem open="0" type="814" id="1040" label="isCAllocatedIn" />
      <listitem open="0" type="814" id="1041" label="isKAllocatedIn" />
      <listitem open="0" type="815" id="1046" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="1068" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="1062" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="1042" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="1054" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="1043" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="1048" label="LagrangianLinearTIDS" />
      <listitem open="0" type="815" id="1076" label="convert" />
      <listitem open="0" type="815" id="1078" label="display" />
      <listitem open="0" type="815" id="1079" label="dsConvergenceIndicator" />
      <listitem open="0" type="815" id="1080" label="getC" />
      <listitem open="0" type="815" id="1081" label="getCPtr" />
      <listitem open="0" type="815" id="1082" label="getK" />
      <listitem open="0" type="815" id="1083" label="getKPtr" />
      <listitem open="0" type="815" id="1084" label="saveDSToXML" />
      <listitem open="0" type="815" id="1085" label="setC" />
      <listitem open="0" type="815" id="1087" label="setCPtr" />
      <listitem open="0" type="815" id="1089" label="setK" />
      <listitem open="0" type="815" id="1091" label="setKPtr" />
      <listitem open="0" type="815" id="1093" label="~LagrangianLinearTIDS" />
     </listitem>
     <listitem open="0" type="813" id="1226" label="LagrangianR" >
      <listitem open="0" type="814" id="1227" label="cShared" />
      <listitem open="0" type="815" id="1236" label="LagrangianR" />
      <listitem open="0" type="815" id="1230" label="LagrangianR" />
      <listitem open="0" type="815" id="1233" label="LagrangianR" />
      <listitem open="0" type="815" id="1228" label="LagrangianR" />
      <listitem open="0" type="815" id="1240" label="computeJacobian" />
      <listitem open="0" type="815" id="1241" label="convert" />
      <listitem open="0" type="815" id="1243" label="saveRelationToXML" />
      <listitem open="0" type="815" id="1244" label="void" />
      <listitem open="0" type="815" id="1246" label="~LagrangianR" />
     </listitem>
     <listitem open="0" type="813" id="21" label="LinearBC" >
      <listitem open="0" type="814" id="22" label="omega" />
      <listitem open="0" type="814" id="23" label="omega0" />
      <listitem open="0" type="814" id="24" label="omegaT" />
      <listitem open="0" type="815" id="25" label="LinearBC" />
      <listitem open="0" type="815" id="26" label="LinearBC" />
      <listitem open="0" type="815" id="28" label="convert" />
      <listitem open="0" type="815" id="30" label="createBoundaryCondition" />
      <listitem open="0" type="815" id="35" label="fillBCWithBCXML" />
      <listitem open="0" type="815" id="36" label="getOmega" />
      <listitem open="0" type="815" id="37" label="getOmega0" />
      <listitem open="0" type="815" id="38" label="getOmegaT" />
      <listitem open="0" type="815" id="39" label="saveBCToXML" />
      <listitem open="0" type="815" id="40" label="setOmega" />
      <listitem open="0" type="815" id="42" label="setOmega0" />
      <listitem open="0" type="815" id="44" label="setOmegaT" />
      <listitem open="0" type="815" id="46" label="~LinearBC" />
     </listitem>
     <listitem open="0" type="813" id="369" label="LinearDS" >
      <listitem open="0" type="814" id="370" label="A" />
      <listitem open="0" type="814" id="371" label="b" />
      <listitem open="0" type="814" id="372" label="cShared" />
      <listitem open="0" type="814" id="373" label="isAAllocatedIn" />
      <listitem open="0" type="814" id="374" label="isBAllocatedIn" />
      <listitem open="0" type="815" id="379" label="LinearDS" />
      <listitem open="0" type="815" id="376" label="LinearDS" />
      <listitem open="0" type="815" id="375" label="LinearDS" />
      <listitem open="0" type="815" id="387" label="LinearDS" />
      <listitem open="0" type="815" id="381" label="LinearDS" />
      <listitem open="0" type="815" id="391" label="computeA" />
      <listitem open="0" type="815" id="393" label="computeB" />
      <listitem open="0" type="815" id="395" label="convert" />
      <listitem open="0" type="815" id="397" label="display" />
      <listitem open="0" type="815" id="398" label="getA" />
      <listitem open="0" type="815" id="399" label="getAPtr" />
      <listitem open="0" type="815" id="400" label="getB" />
      <listitem open="0" type="815" id="401" label="getBPtr" />
      <listitem open="0" type="815" id="402" label="saveDSToXML" />
      <listitem open="0" type="815" id="403" label="setA" />
      <listitem open="0" type="815" id="405" label="setAPtr" />
      <listitem open="0" type="815" id="407" label="setB" />
      <listitem open="0" type="815" id="409" label="setBPtr" />
      <listitem open="0" type="815" id="411" label="setComputeAFunction" />
      <listitem open="0" type="815" id="414" label="setComputeBFunction" />
      <listitem open="0" type="815" id="417" label="void" />
      <listitem open="0" type="815" id="419" label="~LinearDS" />
     </listitem>
     <listitem open="0" type="813" id="309" label="LinearDSIO" >
      <listitem open="0" type="814" id="310" label="A" />
      <listitem open="0" type="814" id="311" label="B" />
      <listitem open="0" type="815" id="313" label="LinearDSIO" />
      <listitem open="0" type="815" id="312" label="LinearDSIO" />
      <listitem open="0" type="815" id="315" label="createDSInputOutput" />
      <listitem open="0" type="815" id="320" label="fillDSInputOutputWithDSInputOutputXML" />
      <listitem open="0" type="815" id="321" label="saveDSInputOutputToXML" />
      <listitem open="0" type="815" id="322" label="~LinearDSIO" />
     </listitem>
     <listitem open="0" type="813" id="359" label="LinearEC" >
      <listitem open="0" type="815" id="361" label="LinearEC" />
      <listitem open="0" type="815" id="360" label="LinearEC" />
      <listitem open="0" type="815" id="363" label="createEqualityConstraint" />
      <listitem open="0" type="815" id="368" label="~LinearEC" />
     </listitem>
     <listitem open="0" type="813" id="1366" label="LinearTIDS" >
      <listitem open="0" type="815" id="1379" label="LinearTIDS" />
      <listitem open="0" type="815" id="1373" label="LinearTIDS" />
      <listitem open="0" type="815" id="1368" label="LinearTIDS" />
      <listitem open="0" type="815" id="1375" label="LinearTIDS" />
      <listitem open="0" type="815" id="1371" label="LinearTIDS" />
      <listitem open="0" type="815" id="1367" label="LinearTIDS" />
      <listitem open="0" type="815" id="1384" label="checkDynamicalSystem" />
      <listitem open="0" type="815" id="1385" label="computeJacobianXRhs" />
      <listitem open="0" type="815" id="1388" label="computeRhs" />
      <listitem open="0" type="815" id="1391" label="convert" />
      <listitem open="0" type="815" id="1393" label="display" />
      <listitem open="0" type="815" id="1394" label="~LinearTIDS" />
     </listitem>
     <listitem open="0" type="813" id="1027" label="LinearTIEC" >
      <listitem open="0" type="815" id="1029" label="LinearTIEC" />
      <listitem open="0" type="815" id="1028" label="LinearTIEC" />
      <listitem open="0" type="815" id="1031" label="createEqualityConstraint" />
      <listitem open="0" type="815" id="1036" label="~LinearTIEC" />
     </listitem>
     <listitem open="0" type="813" id="1141" label="LinearTIR" >
      <listitem open="0" type="814" id="1142" label="B" />
      <listitem open="0" type="814" id="1143" label="C" />
      <listitem open="0" type="814" id="1144" label="D" />
      <listitem open="0" type="814" id="1145" label="F" />
      <listitem open="0" type="814" id="1146" label="a" />
      <listitem open="0" type="814" id="1147" label="e" />
      <listitem open="0" type="815" id="1152" label="LinearTIR" />
      <listitem open="0" type="815" id="1149" label="LinearTIR" />
      <listitem open="0" type="815" id="1148" label="LinearTIR" />
      <listitem open="0" type="815" id="1159" label="LinearTIR" />
      <listitem open="0" type="815" id="1155" label="LinearTIR" />
      <listitem open="0" type="815" id="1167" label="computeFreeOutput" />
      <listitem open="0" type="815" id="1169" label="computeInput" />
      <listitem open="0" type="815" id="1171" label="computeOutput" />
      <listitem open="0" type="815" id="1173" label="convert" />
      <listitem open="0" type="815" id="1175" label="display" />
      <listitem open="0" type="815" id="1176" label="getA" />
      <listitem open="0" type="815" id="1177" label="getAPtr" />
      <listitem open="0" type="815" id="1178" label="getB" />
      <listitem open="0" type="815" id="1182" label="getBBlockDSPtr" />
      <listitem open="0" type="815" id="1179" label="getBBlockDSPtr" />
      <listitem open="0" type="815" id="1185" label="getBPtr" />
      <listitem open="0" type="815" id="1186" label="getC" />
      <listitem open="0" type="815" id="1190" label="getCBlockDSPtr" />
      <listitem open="0" type="815" id="1187" label="getCBlockDSPtr" />
      <listitem open="0" type="815" id="1193" label="getCPtr" />
      <listitem open="0" type="815" id="1194" label="getD" />
      <listitem open="0" type="815" id="1195" label="getDPtr" />
      <listitem open="0" type="815" id="1196" label="getE" />
      <listitem open="0" type="815" id="1197" label="getEPtr" />
      <listitem open="0" type="815" id="1198" label="getF" />
      <listitem open="0" type="815" id="1199" label="getFPtr" />
      <listitem open="0" type="815" id="1200" label="saveRelationToXML" />
      <listitem open="0" type="815" id="1201" label="setA" />
      <listitem open="0" type="815" id="1203" label="setAPtr" />
      <listitem open="0" type="815" id="1205" label="setB" />
      <listitem open="0" type="815" id="1207" label="setBPtr" />
      <listitem open="0" type="815" id="1209" label="setC" />
      <listitem open="0" type="815" id="1211" label="setCPtr" />
      <listitem open="0" type="815" id="1213" label="setD" />
      <listitem open="0" type="815" id="1215" label="setDPtr" />
      <listitem open="0" type="815" id="1217" label="setE" />
      <listitem open="0" type="815" id="1219" label="setEPtr" />
      <listitem open="0" type="815" id="1221" label="setF" />
      <listitem open="0" type="815" id="1223" label="setFPtr" />
      <listitem open="0" type="815" id="1225" label="~LinearTIR" />
     </listitem>
     <listitem open="0" type="813" id="1016" label="NLinearBC" >
      <listitem open="0" type="815" id="1018" label="NLinearBC" />
      <listitem open="0" type="815" id="1017" label="NLinearBC" />
      <listitem open="0" type="815" id="1020" label="convert" />
      <listitem open="0" type="815" id="1022" label="createBoundaryCondition" />
      <listitem open="0" type="815" id="1024" label="fillBCWithBCXML" />
      <listitem open="0" type="815" id="1025" label="saveBCToXML" />
      <listitem open="0" type="815" id="1026" label="~NLinearBC" />
     </listitem>
     <listitem open="0" type="813" id="211" label="NewtonImpactFrictionNSL" >
      <listitem open="0" type="814" id="212" label="en" />
      <listitem open="0" type="814" id="213" label="et" />
      <listitem open="0" type="814" id="214" label="mu" />
      <listitem open="0" type="815" id="215" label="NewtonImpactFrictionNSL" />
      <listitem open="0" type="815" id="216" label="NewtonImpactFrictionNSL" />
      <listitem open="0" type="815" id="218" label="NewtonImpactFrictionNSL" />
      <listitem open="0" type="815" id="222" label="convert" />
      <listitem open="0" type="815" id="224" label="display" />
      <listitem open="0" type="815" id="225" label="getEn" />
      <listitem open="0" type="815" id="226" label="getEt" />
      <listitem open="0" type="815" id="227" label="getMu" />
      <listitem open="0" type="815" id="228" label="isVerified" />
      <listitem open="0" type="815" id="229" label="saveNonSmoothLawToXML" />
      <listitem open="0" type="815" id="230" label="setEn" />
      <listitem open="0" type="815" id="232" label="setEt" />
      <listitem open="0" type="815" id="234" label="setMu" />
      <listitem open="0" type="815" id="236" label="~NewtonImpactFrictionNSL" />
     </listitem>
     <listitem open="0" type="813" id="1247" label="NewtonImpactLawNSL" >
      <listitem open="0" type="814" id="1248" label="e" />
      <listitem open="0" type="815" id="1252" label="NewtonImpactLawNSL" />
      <listitem open="0" type="815" id="1249" label="NewtonImpactLawNSL" />
      <listitem open="0" type="815" id="1250" label="NewtonImpactLawNSL" />
      <listitem open="0" type="815" id="1254" label="convert" />
      <listitem open="0" type="815" id="1256" label="display" />
      <listitem open="0" type="815" id="1257" label="getE" />
      <listitem open="0" type="815" id="1258" label="isVerified" />
      <listitem open="0" type="815" id="1259" label="saveNonSmoothLawToXML" />
      <listitem open="0" type="815" id="1260" label="setE" />
      <listitem open="0" type="815" id="1262" label="~NewtonImpactLawNSL" />
     </listitem>
     <listitem open="0" type="813" id="47" label="NonSmoothDynamicalSystem" >
      <listitem open="0" type="814" id="48" label="BVP" />
      <listitem open="0" type="814" id="49" label="isTopologyAllocatedIn" />
      <listitem open="0" type="814" id="50" label="nsdsxml" />
      <listitem open="0" type="815" id="53" label="NonSmoothDynamicalSystem" />
      <listitem open="0" type="815" id="55" label="NonSmoothDynamicalSystem" />
      <listitem open="0" type="815" id="57" label="NonSmoothDynamicalSystem" />
      <listitem open="0" type="815" id="59" label="addDynamicalSystem" />
      <listitem open="0" type="815" id="61" label="addEqualityConstraint" />
      <listitem open="0" type="815" id="63" label="addInteraction" />
      <listitem open="0" type="815" id="65" label="display" />
      <listitem open="0" type="815" id="66" label="getDSVectorSize" />
      <listitem open="0" type="815" id="67" label="getDynamicalSystemPtr" />
      <listitem open="0" type="815" id="69" label="getDynamicalSystemPtrNumber" />
      <listitem open="0" type="815" id="71" label="getEqualityConstraintPtr" />
      <listitem open="0" type="815" id="73" label="getInteractionPtr" />
      <listitem open="0" type="815" id="75" label="getInteractionPtrNumber" />
      <listitem open="0" type="815" id="77" label="getInteractionVectorSize" />
      <listitem open="0" type="815" id="78" label="getNSDSXMLPtr" />
      <listitem open="0" type="815" id="79" label="getTopologyPtr" />
      <listitem open="0" type="815" id="80" label="hasDynamicalSystemNumber" />
      <listitem open="0" type="815" id="82" label="hasInteractionNumber" />
      <listitem open="0" type="815" id="84" label="isBVP" />
      <listitem open="0" type="815" id="85" label="isIVP" />
      <listitem open="0" type="815" id="86" label="nsdsConvergenceIndicator" />
      <listitem open="0" type="815" id="87" label="saveNSDSToXML" />
      <listitem open="0" type="815" id="88" label="setBVP" />
      <listitem open="0" type="815" id="90" label="setDynamicalSystems" />
      <listitem open="0" type="815" id="92" label="setEqualityConstraints" />
      <listitem open="0" type="815" id="94" label="setInteractions" />
      <listitem open="0" type="815" id="96" label="setNSDSXMLPtr" />
      <listitem open="0" type="815" id="98" label="~NonSmoothDynamicalSystem" />
     </listitem>
     <listitem open="0" type="813" id="472" label="NonSmoothLaw" >
      <listitem open="0" type="814" id="1003" label="nslawxml" />
      <listitem open="0" type="815" id="1005" label="NonSmoothLaw" />
      <listitem open="0" type="815" id="1004" label="NonSmoothLaw" />
      <listitem open="0" type="815" id="1007" label="display" />
      <listitem open="0" type="815" id="1008" label="getNonSmoothLawXML" />
      <listitem open="0" type="815" id="1009" label="isVerified" />
      <listitem open="0" type="815" id="1010" label="saveNonSmoothLawToXML" />
      <listitem open="0" type="815" id="1011" label="setNonSmoothLawXML" />
      <listitem open="0" type="815" id="1013" label="setType" />
      <listitem open="0" type="815" id="1015" label="~NonSmoothLaw" />
     </listitem>
     <listitem open="0" type="813" id="10" label="PeriodicBC" >
      <listitem open="0" type="815" id="12" label="PeriodicBC" />
      <listitem open="0" type="815" id="11" label="PeriodicBC" />
      <listitem open="0" type="815" id="14" label="convert" />
      <listitem open="0" type="815" id="16" label="createBoundaryCondition" />
      <listitem open="0" type="815" id="18" label="fillBCWithBCXML" />
      <listitem open="0" type="815" id="19" label="saveBCToXML" />
      <listitem open="0" type="815" id="20" label="~PeriodicBC" />
     </listitem>
     <listitem open="0" type="813" id="132" label="Relation" >
      <listitem open="0" type="814" id="133" label="cShared" />
      <listitem open="0" type="814" id="136" label="relationxml" />
      <listitem open="0" type="815" id="142" label="Relation" />
      <listitem open="0" type="815" id="139" label="Relation" />
      <listitem open="0" type="815" id="137" label="Relation" />
      <listitem open="0" type="815" id="145" label="addDSInputOutput" />
      <listitem open="0" type="815" id="147" label="computeFreeOutput" />
      <listitem open="0" type="815" id="149" label="computeInput" />
      <listitem open="0" type="815" id="151" label="computeOutput" />
      <listitem open="0" type="815" id="153" label="getDSInputOutput" />
      <listitem open="0" type="815" id="155" label="getInteractionPtr" />
      <listitem open="0" type="815" id="156" label="getRelationXML" />
      <listitem open="0" type="815" id="157" label="setComputeInputFunction" />
      <listitem open="0" type="815" id="160" label="setComputeOutputFunction" />
      <listitem open="0" type="815" id="163" label="setDSInputOutputs" />
      <listitem open="0" type="815" id="165" label="setInteractionPtr" />
      <listitem open="0" type="815" id="167" label="setRelationXML" />
      <listitem open="0" type="815" id="169" label="void" />
      <listitem open="0" type="815" id="171" label="~Relation" />
     </listitem>
     <listitem open="0" type="813" id="279" label="RelayNSL" >
      <listitem open="0" type="814" id="280" label="c" />
      <listitem open="0" type="814" id="281" label="d" />
      <listitem open="0" type="815" id="282" label="RelayNSL" />
      <listitem open="0" type="815" id="283" label="RelayNSL" />
      <listitem open="0" type="815" id="285" label="RelayNSL" />
      <listitem open="0" type="815" id="288" label="convert" />
      <listitem open="0" type="815" id="290" label="display" />
      <listitem open="0" type="815" id="291" label="getC" />
      <listitem open="0" type="815" id="292" label="getD" />
      <listitem open="0" type="815" id="293" label="isVerified" />
      <listitem open="0" type="815" id="294" label="saveNonSmoothLawToXML" />
      <listitem open="0" type="815" id="295" label="setC" />
      <listitem open="0" type="815" id="297" label="setD" />
      <listitem open="0" type="815" id="299" label="~RelayNSL" />
     </listitem>
     <listitem open="0" type="813" id="51" label="Topology" >
      <listitem open="0" type="814" id="237" label="effectiveSizeOutput" />
      <listitem open="0" type="814" id="238" label="isTopologyTimeInvariant" />
      <listitem open="0" type="814" id="239" label="isTopologyUpToDate" />
      <listitem open="0" type="815" id="241" label="Topology" />
      <listitem open="0" type="815" id="242" label="Topology" />
      <listitem open="0" type="815" id="245" label="computeEffectiveSizeOutput" />
      <listitem open="0" type="815" id="244" label="computeEffectiveSizeOutput" />
      <listitem open="0" type="815" id="247" label="computeIndexMinMap" />
      <listitem open="0" type="815" id="248" label="computeInteractionEffectivePositionMap" />
      <listitem open="0" type="815" id="249" label="computeLinkedInteractionMap" />
      <listitem open="0" type="815" id="250" label="computeRelativeDegreesMap" />
      <listitem open="0" type="815" id="251" label="getEffectiveSizeOutput" />
      <listitem open="0" type="815" id="252" label="getInteractionEffectivePosition" />
      <listitem open="0" type="815" id="254" label="isTimeInvariant" />
      <listitem open="0" type="815" id="255" label="isUpToDate" />
      <listitem open="0" type="815" id="256" label="setEffectiveIndexes" />
      <listitem open="0" type="815" id="259" label="setEffectiveSizeOutput" />
      <listitem open="0" type="815" id="261" label="setIndexMax" />
      <listitem open="0" type="815" id="264" label="setTimeInvariant" />
      <listitem open="0" type="815" id="266" label="setUpToDate" />
      <listitem open="0" type="815" id="268" label="updateTopology" />
      <listitem open="0" type="815" id="269" label="~Topology" />
     </listitem>
     <listitem open="0" type="830" id="-1" label="Datatypes" >
      <listitem open="1" type="829" id="1287" label=")" />
      <listitem open="1" type="829" id="4" label="bool" />
      <listitem open="1" type="829" id="3" label="char" />
      <listitem open="1" type="829" id="6" label="double" />
      <listitem open="1" type="829" id="5" label="float" />
      <listitem open="1" type="829" id="2" label="int" />
      <listitem open="1" type="829" id="7" label="long" />
      <listitem open="1" type="829" id="8" label="short" />
      <listitem open="1" type="829" id="9" label="string" />
     </listitem>
     <listitem open="1" type="831" id="1283" label="dynamicalsystem" />
    </listitem>
    <listitem open="1" type="802" id="-1" label="Use Case View" />
    <listitem open="1" type="821" id="-1" label="Component View" />
    <listitem open="1" type="827" id="-1" label="Deployment View" />
   </listitem>
  </listview>
  <codegeneration/>
 </XMI.content>
</XMI>
