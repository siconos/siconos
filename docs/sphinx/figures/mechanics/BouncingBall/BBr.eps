%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 4002 [ 0]
[750 3710 752 3710 755 3710 757 3710 759 3710 761 3710 764 3710 766 3710 768 3710 770 3710 
773 3710 775 3710 777 3710 779 3710 782 3710 784 3710 786 3710 788 3710 791 3710 793 3710 
795 3710 797 3710 800 3710 802 3710 804 3710 806 3710 809 3710 811 3710 813 3710 815 3710 
818 3710 820 3710 822 3710 824 3710 827 3710 829 3710 831 3710 833 3710 836 3710 838 3710 
840 3710 842 3710 845 3710 847 3710 849 3710 851 3710 854 3710 856 3710 858 3710 860 3710 
863 3710 865 3710 867 3710 869 3710 872 3710 874 3710 876 3710 878 3710 881 3710 883 3710 
885 3710 887 3710 890 3710 892 3710 894 3710 896 3710 899 3710 901 3710 903 3710 905 3710 
908 3710 910 3710 912 3710 914 3710 917 3710 919 3710 921 3710 923 3710 926 3710 928 3710 
930 3710 932 3710 935 3710 937 3710 939 3710 941 3710 944 3710 946 3710 948 3710 950 3710 
953 3710 955 729 957 3710 959 3710 962 3710 964 3710 966 3710 968 3710 971 3710 973 3710 
975 3710 977 3710 980 3710 982 3710 984 3710 986 3710 989 3710 991 3710 993 3710 995 3710 
998 3710 1000 3710 1002 3710 1004 3710 1007 3710 1009 3710 1011 3710 1013 3710 1016 3710 1018 3710 
1020 3710 1022 3710 1025 3710 1027 3710 1029 3710 1031 3710 1034 3710 1036 3710 1038 3710 1040 3710 
1043 3710 1045 3710 1047 3710 1049 3710 1052 3710 1054 3710 1056 3710 1058 3710 1061 3710 1063 3710 
1065 3710 1067 3710 1070 3710 1072 3710 1074 3710 1076 3710 1079 3710 1081 3710 1083 3710 1085 3710 
1088 3710 1090 3710 1092 3710 1094 3710 1097 3710 1099 3710 1101 3710 1103 3710 1106 3710 1108 3710 
1110 3710 1112 3710 1115 3710 1117 3710 1119 3710 1121 3710 1124 3710 1126 3710 1128 3710 1130 3710 
1133 3710 1135 3710 1137 3710 1139 3710 1142 3710 1144 3710 1146 3710 1148 3710 1151 3710 1153 3710 
1155 3710 1157 3710 1160 3710 1162 3710 1164 3710 1166 3710 1169 3710 1171 3710 1173 3710 1175 3710 
1178 3710 1180 3710 1182 3710 1184 3710 1187 3710 1189 3710 1191 3710 1193 3710 1196 3710 1198 3710 
1200 3710 1202 3710 1205 3710 1207 3710 1209 3710 1211 3710 1214 3710 1216 3710 1218 3710 1220 3710 
1223 3710 1225 3710 1227 3710 1229 3710 1232 3710 1234 3710 1236 3710 1238 3710 1241 3710 1243 3710 
1245 3710 1247 3710 1250 3710 1252 3710 1254 3710 1256 3710 1259 3710 1261 3710 1263 3710 1265 3710 
1268 3710 1270 3710 1272 3710 1274 3710 1277 3710 1279 3710 1281 3710 1283 3710 1286 3710 1288 3710 
1290 3710 1292 3710 1295 3710 1297 3710 1299 3710 1301 3710 1304 3710 1306 3710 1308 3710 1310 3710 
1313 3710 1315 3710 1317 3710 1319 3710 1322 1025 1324 3710 1326 3710 1328 3710 1331 3710 1333 3710 
1335 3710 1337 3710 1340 3710 1342 3710 1344 3710 1346 3710 1349 3710 1351 3710 1353 3710 1355 3710 
1358 3710 1360 3710 1362 3710 1364 3710 1367 3710 1369 3710 1371 3710 1373 3710 1376 3710 1378 3710 
1380 3710 1382 3710 1385 3710 1387 3710 1389 3710 1391 3710 1394 3710 1396 3710 1398 3710 1400 3710 
1403 3710 1405 3710 1407 3710 1409 3710 1412 3710 1414 3710 1416 3710 1418 3710 1421 3710 1423 3710 
1425 3710 1427 3710 1430 3710 1432 3710 1434 3710 1436 3710 1439 3710 1441 3710 1443 3710 1445 3710 
1448 3710 1450 3710 1452 3710 1454 3710 1457 3710 1459 3710 1461 3710 1463 3710 1466 3710 1468 3710 
1470 3710 1472 3710 1475 3710 1477 3710 1479 3710 1481 3710 1484 3710 1486 3710 1488 3710 1490 3710 
1493 3710 1495 3710 1497 3710 1499 3710 1502 3710 1504 3710 1506 3710 1508 3710 1511 3710 1513 3710 
1515 3710 1517 3710 1520 3710 1522 3710 1524 3710 1526 3710 1529 3710 1531 3710 1533 3710 1535 3710 
1538 3710 1540 3710 1542 3710 1544 3710 1547 3710 1549 3710 1551 3710 1553 3710 1556 3710 1558 3710 
1560 3710 1562 3710 1565 3710 1567 3710 1569 3710 1571 3710 1574 3710 1576 3710 1578 3710 1580 3710 
1583 3710 1585 3710 1587 3710 1589 3710 1592 3710 1594 3710 1596 3710 1598 3710 1601 3710 1603 3710 
1605 3710 1607 3710 1610 3710 1612 3710 1614 3710 1616 3710 1619 3710 1621 3710 1623 3710 1625 3710 
1628 3710 1630 3710 1632 3710 1634 3710 1637 3710 1639 3710 1641 3710 1643 3710 1646 3710 1648 3710 
1650 3710 1652 1286 1655 3710 1657 3710 1659 3710 1661 3710 1664 3710 1666 3710 1668 3710 1670 3710 
1673 3710 1675 3710 1677 3710 1679 3710 1682 3710 1684 3710 1686 3710 1688 3710 1691 3710 1693 3710 
1695 3710 1697 3710 1700 3710 1702 3710 1704 3710 1706 3710 1709 3710 1711 3710 1713 3710 1715 3710 
1718 3710 1720 3710 1722 3710 1724 3710 1727 3710 1729 3710 1731 3710 1733 3710 1736 3710 1738 3710 
1740 3710 1742 3710 1745 3710 1747 3710 1749 3710 1751 3710 1754 3710 1756 3710 1758 3710 1760 3710 
1763 3710 1765 3710 1767 3710 1769 3710 1772 3710 1774 3710 1776 3710 1778 3710 1781 3710 1783 3710 
1785 3710 1787 3710 1790 3710 1792 3710 1794 3710 1796 3710 1799 3710 1801 3710 1803 3710 1805 3710 
1808 3710 1810 3710 1812 3710 1814 3710 1817 3710 1819 3710 1821 3710 1823 3710 1826 3710 1828 3710 
1830 3710 1832 3710 1835 3710 1837 3710 1839 3710 1841 3710 1844 3710 1846 3710 1848 3710 1850 3710 
1853 3710 1855 3710 1857 3710 1859 3710 1862 3710 1864 3710 1866 3710 1868 3710 1871 3710 1873 3710 
1875 3710 1877 3710 1880 3710 1882 3710 1884 3710 1886 3710 1889 3710 1891 3710 1893 3710 1895 3710 
1898 3710 1900 3710 1902 3710 1904 3710 1907 3710 1909 3710 1911 3710 1913 3710 1916 3710 1918 3710 
1920 3710 1922 3710 1925 3710 1927 3710 1929 3710 1931 3710 1934 3710 1936 3710 1938 3710 1940 3710 
1943 3710 1945 3710 1947 3710 1949 3710 1952 1512 1954 3710 1956 3710 1958 3710 1961 3710 1963 3710 
1965 3710 1967 3710 1970 3710 1972 3710 1974 3710 1976 3710 1979 3710 1981 3710 1983 3710 1985 3710 
1988 3710 1990 3710 1992 3710 1994 3710 1997 3710 1999 3710 2001 3710 2003 3710 2006 3710 2008 3710 
2010 3710 2012 3710 2015 3710 2017 3710 2019 3710 2021 3710 2024 3710 2026 3710 2028 3710 2030 3710 
2033 3710 2035 3710 2037 3710 2039 3710 2042 3710 2044 3710 2046 3710 2048 3710 2051 3710 2053 3710 
2055 3710 2057 3710 2060 3710 2062 3710 2064 3710 2066 3710 2069 3710 2071 3710 2073 3710 2075 3710 
2078 3710 2080 3710 2082 3710 2084 3710 2087 3710 2089 3710 2091 3710 2093 3710 2096 3710 2098 3710 
2100 3710 2102 3710 2105 3710 2107 3710 2109 3710 2111 3710 2114 3710 2116 3710 2118 3710 2120 3710 
2123 3710 2125 3710 2127 3710 2129 3710 2132 3710 2134 3710 2136 3710 2138 3710 2141 3710 2143 3710 
2145 3710 2147 3710 2150 3710 2152 3710 2154 3710 2156 3710 2159 3710 2161 3710 2163 3710 2165 3710 
2168 3710 2170 3710 2172 3710 2174 3710 2177 3710 2179 3710 2181 3710 2183 3710 2186 3710 2188 3710 
2190 3710 2192 3710 2195 3710 2197 3710 2199 3710 2201 3710 2204 3710 2206 3710 2208 3710 2210 3710 
2213 3710 2215 3710 2217 3710 2219 3710 2222 1736 2224 3710 2226 3710 2228 3710 2231 3710 2233 3710 
2235 3710 2237 3710 2240 3710 2242 3710 2244 3710 2246 3710 2249 3710 2251 3710 2253 3710 2255 3710 
2258 3710 2260 3710 2262 3710 2264 3710 2267 3710 2269 3710 2271 3710 2273 3710 2276 3710 2278 3710 
2280 3710 2282 3710 2285 3710 2287 3710 2289 3710 2291 3710 2294 3710 2296 3710 2298 3710 2300 3710 
2303 3710 2305 3710 2307 3710 2309 3710 2312 3710 2314 3710 2316 3710 2318 3710 2321 3710 2323 3710 
2325 3710 2327 3710 2330 3710 2332 3710 2334 3710 2336 3710 2339 3710 2341 3710 2343 3710 2345 3710 
2348 3710 2350 3710 2352 3710 2354 3710 2357 3710 2359 3710 2361 3710 2363 3710 2366 3710 2368 3710 
2370 3710 2372 3710 2375 3710 2377 3710 2379 3710 2381 3710 2384 3710 2386 3710 2388 3710 2390 3710 
2393 3710 2395 3710 2397 3710 2399 3710 2402 3710 2404 3710 2406 3710 2408 3710 2411 3710 2413 3710 
2415 3710 2417 3710 2420 3710 2422 3710 2424 3710 2426 3710 2429 3710 2431 3710 2433 3710 2435 3710 
2438 3710 2440 3710 2442 3710 2444 3710 2447 3710 2449 3710 2451 3710 2453 3710 2456 3710 2458 3710 
2460 3710 2462 3710 2465 1930 2467 3710 2469 3710 2471 3710 2474 3710 2476 3710 2478 3710 2480 3710 
2483 3710 2485 3710 2487 3710 2489 3710 2492 3710 2494 3710 2496 3710 2498 3710 2501 3710 2503 3710 
2505 3710 2507 3710 2510 3710 2512 3710 2514 3710 2516 3710 2519 3710 2521 3710 2523 3710 2525 3710 
2528 3710 2530 3710 2532 3710 2534 3710 2537 3710 2539 3710 2541 3710 2543 3710 2546 3710 2548 3710 
2550 3710 2552 3710 2555 3710 2557 3710 2559 3710 2561 3710 2564 3710 2566 3710 2568 3710 2570 3710 
2573 3710 2575 3710 2577 3710 2579 3710 2582 3710 2584 3710 2586 3710 2588 3710 2591 3710 2593 3710 
2595 3710 2597 3710 2600 3710 2602 3710 2604 3710 2606 3710 2609 3710 2611 3710 2613 3710 2615 3710 
2618 3710 2620 3710 2622 3710 2624 3710 2627 3710 2629 3710 2631 3710 2633 3710 2636 3710 2638 3710 
2640 3710 2642 3710 2645 3710 2647 3710 2649 3710 2651 3710 2654 3710 2656 3710 2658 3710 2660 3710 
2663 3710 2665 3710 2667 3710 2669 3710 2672 3710 2674 3710 2676 3710 2678 3710 2681 3710 2683 2118 
2685 3710 2687 3710 2690 3710 2692 3710 2694 3710 2696 3710 2699 3710 2701 3710 2703 3710 2705 3710 
2708 3710 2710 3710 2712 3710 2714 3710 2717 3710 2719 3710 2721 3710 2723 3710 2726 3710 2728 3710 
2730 3710 2732 3710 2735 3710 2737 3710 2739 3710 2741 3710 2744 3710 2746 3710 2748 3710 2750 3710 
2753 3710 2755 3710 2757 3710 2759 3710 2762 3710 2764 3710 2766 3710 2768 3710 2771 3710 2773 3710 
2775 3710 2777 3710 2780 3710 2782 3710 2784 3710 2786 3710 2789 3710 2791 3710 2793 3710 2795 3710 
2798 3710 2800 3710 2802 3710 2804 3710 2807 3710 2809 3710 2811 3710 2813 3710 2816 3710 2818 3710 
2820 3710 2822 3710 2825 3710 2827 3710 2829 3710 2831 3710 2834 3710 2836 3710 2838 3710 2840 3710 
2843 3710 2845 3710 2847 3710 2849 3710 2852 3710 2854 3710 2856 3710 2858 3710 2861 3710 2863 3710 
2865 3710 2867 3710 2870 3710 2872 3710 2874 3710 2876 3710 2879 2278 2881 3710 2883 3710 2885 3710 
2888 3710 2890 3710 2892 3710 2894 3710 2897 3710 2899 3710 2901 3710 2903 3710 2906 3710 2908 3710 
2910 3710 2912 3710 2915 3710 2917 3710 2919 3710 2921 3710 2924 3710 2926 3710 2928 3710 2930 3710 
2933 3710 2935 3710 2937 3710 2939 3710 2942 3710 2944 3710 2946 3710 2948 3710 2951 3710 2953 3710 
2955 3710 2957 3710 2960 3710 2962 3710 2964 3710 2966 3710 2969 3710 2971 3710 2973 3710 2975 3710 
2978 3710 2980 3710 2982 3710 2984 3710 2987 3710 2989 3710 2991 3710 2993 3710 2996 3710 2998 3710 
3000 3710 3002 3710 3005 3710 3007 3710 3009 3710 3011 3710 3014 3710 3016 3710 3018 3710 3020 3710 
3023 3710 3025 3710 3027 3710 3029 3710 3032 3710 3034 3710 3036 3710 3038 3710 3041 3710 3043 3710 
3045 3710 3047 3710 3050 3710 3052 3710 3054 2430 3056 3710 3059 3710 3061 3710 3063 3710 3065 3710 
3068 3710 3070 3710 3072 3710 3074 3710 3077 3710 3079 3710 3081 3710 3083 3710 3086 3710 3088 3710 
3090 3710 3092 3710 3095 3710 3097 3710 3099 3710 3101 3710 3104 3710 3106 3710 3108 3710 3110 3710 
3113 3710 3115 3710 3117 3710 3119 3710 3122 3710 3124 3710 3126 3710 3128 3710 3131 3710 3133 3710 
3135 3710 3137 3710 3140 3710 3142 3710 3144 3710 3146 3710 3149 3710 3151 3710 3153 3710 3155 3710 
3158 3710 3160 3710 3162 3710 3164 3710 3167 3710 3169 3710 3171 3710 3173 3710 3176 3710 3178 3710 
3180 3710 3182 3710 3185 3710 3187 3710 3189 3710 3191 3710 3194 3710 3196 3710 3198 3710 3200 3710 
3203 3710 3205 3710 3207 3710 3209 3710 3212 2557 3214 3710 3216 3710 3218 3710 3221 3710 3223 3710 
3225 3710 3227 3710 3230 3710 3232 3710 3234 3710 3236 3710 3239 3710 3241 3710 3243 3710 3245 3710 
3248 3710 3250 3710 3252 3710 3254 3710 3257 3710 3259 3710 3261 3710 3263 3710 3266 3710 3268 3710 
3270 3710 3272 3710 3275 3710 3277 3710 3279 3710 3281 3710 3284 3710 3286 3710 3288 3710 3290 3710 
3293 3710 3295 3710 3297 3710 3299 3710 3302 3710 3304 3710 3306 3710 3308 3710 3311 3710 3313 3710 
3315 3710 3317 3710 3320 3710 3322 3710 3324 3710 3326 3710 3329 3710 3331 3710 3333 3710 3335 3710 
3338 3710 3340 3710 3342 3710 3344 3710 3347 3710 3349 3710 3351 3710 3353 2673 3356 3710 3358 3710 
3360 3710 3362 3710 3365 3710 3367 3710 3369 3710 3371 3710 3374 3710 3376 3710 3378 3710 3380 3710 
3383 3710 3385 3710 3387 3710 3389 3710 3392 3710 3394 3710 3396 3710 3398 3710 3401 3710 3403 3710 
3405 3710 3407 3710 3410 3710 3412 3710 3414 3710 3416 3710 3419 3710 3421 3710 3423 3710 3425 3710 
3428 3710 3430 3710 3432 3710 3434 3710 3437 3710 3439 3710 3441 3710 3443 3710 3446 3710 3448 3710 
3450 3710 3452 3710 3455 3710 3457 3710 3459 3710 3461 3710 3464 3710 3466 3710 3468 3710 3470 3710 
3473 3710 3475 3710 3477 3710 3479 3710 3482 2766 3484 3710 3486 3710 3488 3710 3491 3710 3493 3710 
3495 3710 3497 3710 3500 3710 3502 3710 3504 3710 3506 3710 3509 3710 3511 3710 3513 3710 3515 3710 
3518 3710 3520 3710 3522 3710 3524 3710 3527 3710 3529 3710 3531 3710 3533 3710 3536 3710 3538 3710 
3540 3710 3542 3710 3545 3710 3547 3710 3549 3710 3551 3710 3554 3710 3556 3710 3558 3710 3560 3710 
3563 3710 3565 3710 3567 3710 3569 3710 3572 3710 3574 3710 3576 3710 3578 3710 3581 3710 3583 3710 
3585 3710 3587 3710 3590 3710 3592 3710 3594 3710 3596 2880 3599 3710 3601 3710 3603 3710 3605 3710 
3608 3710 3610 3710 3612 3710 3614 3710 3617 3710 3619 3710 3621 3710 3623 3710 3626 3710 3628 3710 
3630 3710 3632 3710 3635 3710 3637 3710 3639 3710 3641 3710 3644 3710 3646 3710 3648 3710 3650 3710 
3653 3710 3655 3710 3657 3710 3659 3710 3662 3710 3664 3710 3666 3710 3668 3710 3671 3710 3673 3710 
3675 3710 3677 3710 3680 3710 3682 3710 3684 3710 3686 3710 3689 3710 3691 3710 3693 3710 3695 3710 
3698 3710 3700 2942 3702 3710 3704 3710 3707 3710 3709 3710 3711 3710 3713 3710 3716 3710 3718 3710 
3720 3710 3722 3710 3725 3710 3727 3710 3729 3710 3731 3710 3734 3710 3736 3710 3738 3710 3740 3710 
3743 3710 3745 3710 3747 3710 3749 3710 3752 3710 3754 3710 3756 3710 3758 3710 3761 3710 3763 3710 
3765 3710 3767 3710 3770 3710 3772 3710 3774 3710 3776 3710 3779 3710 3781 3710 3783 3710 3785 3710 
3788 3710 3790 3710 3792 3710 3794 3018 3797 3710 3799 3710 3801 3710 3803 3710 3806 3710 3808 3710 
3810 3710 3812 3710 3815 3710 3817 3710 3819 3710 3821 3710 3824 3710 3826 3710 3828 3710 3830 3710 
3833 3710 3835 3710 3837 3710 3839 3710 3842 3710 3844 3710 3846 3710 3848 3710 3851 3710 3853 3710 
3855 3710 3857 3710 3860 3710 3862 3710 3864 3710 3866 3710 3869 3710 3871 3710 3873 3710 3875 3710 
3878 3114 3880 3710 3882 3710 3884 3710 3887 3710 3889 3710 3891 3710 3893 3710 3896 3710 3898 3710 
3900 3710 3902 3710 3905 3710 3907 3710 3909 3710 3911 3710 3914 3710 3916 3710 3918 3710 3920 3710 
3923 3710 3925 3710 3927 3710 3929 3710 3932 3710 3934 3710 3936 3710 3938 3710 3941 3710 3943 3710 
3945 3710 3947 3710 3950 3710 3952 3159 3954 3710 3956 3710 3959 3710 3961 3710 3963 3710 3965 3710 
3968 3710 3970 3710 3972 3710 3974 3710 3977 3710 3979 3710 3981 3710 3983 3710 3986 3710 3988 3710 
3990 3710 3992 3710 3995 3710 3997 3710 3999 3710 4001 3710 4004 3710 4006 3710 4008 3710 4010 3710 
4013 3710 4015 3710 4017 3710 4019 3218 4022 3710 4024 3710 4026 3710 4028 3710 4031 3710 4033 3710 
4035 3710 4037 3710 4040 3710 4042 3710 4044 3710 4046 3710 4049 3710 4051 3710 4053 3710 4055 3710 
4058 3710 4060 3710 4062 3710 4064 3710 4067 3710 4069 3710 4071 3710 4073 3710 4076 3710 4078 3710 
4080 3264 4082 3710 4085 3710 4087 3710 4089 3710 4091 3710 4094 3710 4096 3710 4098 3710 4100 3710 
4103 3710 4105 3710 4107 3710 4109 3710 4112 3710 4114 3710 4116 3710 4118 3710 4121 3710 4123 3710 
4125 3710 4127 3710 4130 3710 4132 3710 4134 3321 4136 3710 4139 3710 4141 3710 4143 3710 4145 3710 
4148 3710 4150 3710 4152 3710 4154 3710 4157 3710 4159 3710 4161 3710 4163 3710 4166 3710 4168 3710 
4170 3710 4172 3710 4175 3710 4177 3710 4179 3710 4181 3369 4184 3710 4186 3710 4188 3710 4190 3710 
4193 3710 4195 3710 4197 3710 4199 3710 4202 3710 4204 3710 4206 3710 4208 3710 4211 3710 4213 3710 
4215 3710 4217 3710 4220 3710 4222 3710 4224 3392 4226 3710 4229 3710 4231 3710 4233 3710 4235 3710 
4238 3710 4240 3710 4242 3710 4244 3710 4247 3710 4249 3710 4251 3710 4253 3710 4256 3710 4258 3710 
4260 3710 4262 3710 4265 3404 4267 3710 4269 3710 4271 3710 4274 3710 4276 3710 4278 3710 4280 3710 
4283 3710 4285 3710 4287 3710 4289 3710 4292 3710 4294 3710 4296 3710 4298 3710 4301 3459 4303 3710 
4305 3710 4307 3710 4310 3710 4312 3710 4314 3710 4316 3710 4319 3710 4321 3710 4323 3710 4325 3710 
4328 3710 4330 3710 4332 3475 4334 3710 4337 3710 4339 3710 4341 3710 4343 3710 4346 3710 4348 3710 
4350 3710 4352 3710 4355 3710 4357 3710 4359 3710 4361 3493 4364 3710 4366 3710 4368 3710 4370 3710 
4373 3710 4375 3710 4377 3710 4379 3710 4382 3710 4384 3710 4386 3710 4388 3510 4391 3710 4393 3710 
4395 3710 4397 3710 4400 3710 4402 3710 4404 3710 4406 3710 4409 3710 4411 3710 4413 3528 4415 3710 
4418 3710 4420 3710 4422 3710 4424 3710 4427 3710 4429 3710 4431 3710 4433 3710 4436 3545 4438 3710 
4440 3710 4442 3710 4445 3710 4447 3710 4449 3710 4451 3710 4454 3595 4456 3710 4458 3710 4460 3710 
4463 3710 4465 3710 4467 3710 4469 3583 4472 3710 4474 3710 4476 3710 4478 3710 4481 3710 4483 3710 
4485 3594 4487 3710 4490 3710 4492 3710 4494 3710 4496 3710 4499 3617 4501 3710 4503 3710 4505 3710 
4508 3710 4510 3629 4512 3710 4514 3710 4517 3710 4519 3710 4521 3618 4523 3710 4526 3710 4528 3710 
4530 3661 4532 3710 4535 3710 4537 3655 4539 3710 4541 3710 4544 3661 4546 3710 4548 3710 4550 3656 
4553 3710 4555 3710 4557 3660 4559 3710 4562 3710 4564 3656 4566 3710 4568 3693 4571 3693 4573 3693 
4575 3693 4577 3693 4580 3693 4582 3693 4584 3693 4586 3693 4589 3693 4591 3693 4593 3693 4595 3693 
4598 3693 4600 3693 4602 3693 4604 3693 4607 3693 4609 3693 4611 3693 4613 3693 4616 3693 4618 3693 
4620 3693 4622 3693 4625 3693 4627 3693 4629 3693 4631 3693 4634 3693 4636 3693 4638 3693 4640 3693 
4643 3693 4645 3693 4647 3693 4649 3693 4652 3693 4654 3693 4656 3693 4658 3693 4661 3693 4663 3693 
4665 3693 4667 3693 4670 3693 4672 3693 4674 3693 4676 3693 4679 3693 4681 3693 4683 3693 4685 3693 
4688 3693 4690 3693 4692 3693 4694 3693 4697 3693 4699 3693 4701 3693 4703 3693 4706 3693 4708 3693 
4710 3693 4712 3693 4715 3693 4717 3693 4719 3693 4721 3693 4724 3693 4726 3693 4728 3693 4730 3693 
4733 3693 4735 3693 4737 3693 4739 3693 4742 3693 4744 3693 4746 3693 4748 3693 4751 3693 4753 3693 
4755 3693 4757 3693 4760 3693 4762 3693 4764 3693 4766 3693 4769 3693 4771 3693 4773 3693 4775 3693 
4778 3693 4780 3693 4782 3693 4784 3693 4787 3693 4789 3693 4791 3693 4793 3693 4796 3693 4798 3693 
4800 3693 4802 3693 4805 3693 4807 3693 4809 3693 4811 3693 4814 3693 4816 3693 4818 3693 4820 3693 
4823 3693 4825 3693 4827 3693 4829 3693 4832 3693 4834 3693 4836 3693 4838 3693 4841 3693 4843 3693 
4845 3693 4847 3693 4850 3693 4852 3693 4854 3693 4856 3693 4859 3693 4861 3693 4863 3693 4865 3693 
4868 3693 4870 3693 4872 3693 4874 3693 4877 3693 4879 3693 4881 3693 4883 3693 4886 3693 4888 3693 
4890 3693 4892 3693 4895 3693 4897 3693 4899 3693 4901 3693 4904 3693 4906 3693 4908 3693 4910 3693 
4913 3693 4915 3693 4917 3693 4919 3693 4922 3693 4924 3693 4926 3693 4928 3693 4931 3693 4933 3693 
4935 3693 4937 3693 4940 3693 4942 3693 4944 3693 4946 3693 4949 3693 4951 3693 4953 3693 4955 3693 
4958 3693 4960 3693 4962 3693 4964 3693 4967 3693 4969 3693 4971 3693 4973 3693 4976 3693 4978 3693 
4980 3693 4982 3693 4985 3693 4987 3693 4989 3693 4991 3693 4994 3693 4996 3693 4998 3693 5000 3693 
5003 3693 5005 3693 5007 3693 5009 3693 5012 3693 5014 3693 5016 3693 5018 3693 5021 3693 5023 3693 
5025 3693 5027 3693 5030 3693 5032 3693 5034 3693 5036 3693 5039 3693 5041 3693 5043 3693 5045 3693 
5048 3693 5050 3693 5052 3693 5054 3693 5057 3693 5059 3693 5061 3693 5063 3693 5066 3693 5068 3693 
5070 3693 5072 3693 5075 3693 5077 3693 5079 3693 5081 3693 5084 3693 5086 3693 5088 3693 5090 3693 
5093 3693 5095 3693 5097 3693 5099 3693 5102 3693 5104 3693 5106 3693 5108 3693 5111 3693 5113 3693 
5115 3693 5117 3693 5120 3693 5122 3693 5124 3693 5126 3693 5129 3693 5131 3693 5133 3693 5135 3693 
5138 3693 5140 3693 5142 3693 5144 3693 5147 3693 5149 3693 5151 3693 5153 3693 5156 3693 5158 3693 
5160 3693 5162 3693 5165 3693 5167 3693 5169 3693 5171 3693 5174 3693 5176 3693 5178 3693 5180 3693 
5183 3693 5185 3693 5187 3693 5189 3693 5192 3693 5194 3693 5196 3693 5198 3693 5201 3693 5203 3693 
5205 3693 5207 3693 5210 3693 5212 3693 5214 3693 5216 3693 5219 3693 5221 3693 5223 3693 5225 3693 
5228 3693 5230 3693 5232 3693 5234 3693 5237 3693 5239 3693 5241 3693 5243 3693 5246 3693 5248 3693 
5250 3693 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(0) 723 3873 0  0.00 [723 3773 55 99] Show
%Latex:\myput{723}{367}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3773 
] dogrey 
32 Setcolor
32 Setcolor
(1) 1173 3873 0  0.00 [1173 3773 55 99] Show
%Latex:\myput{1173}{367}{5}{1}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1200 3710 1200 3773 
] dogrey 
32 Setcolor
32 Setcolor
(2) 1623 3873 0  0.00 [1623 3773 55 99] Show
%Latex:\myput{1623}{367}{5}{2}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1650 3710 1650 3773 
] dogrey 
32 Setcolor
32 Setcolor
(3) 2073 3873 0  0.00 [2073 3773 55 99] Show
%Latex:\myput{2073}{367}{5}{3}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[2100 3710 2100 3773 
] dogrey 
32 Setcolor
32 Setcolor
(4) 2523 3873 0  0.00 [2523 3773 55 99] Show
%Latex:\myput{2523}{367}{5}{4}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[2550 3710 2550 3773 
] dogrey 
32 Setcolor
32 Setcolor
(5) 2973 3873 0  0.00 [2973 3773 55 99] Show
%Latex:\myput{2973}{367}{5}{5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3000 3710 3000 3773 
] dogrey 
32 Setcolor
32 Setcolor
(6) 3423 3873 0  0.00 [3423 3773 55 99] Show
%Latex:\myput{3423}{367}{5}{6}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3450 3710 3450 3773 
] dogrey 
32 Setcolor
32 Setcolor
(7) 3873 3873 0  0.00 [3873 3773 55 99] Show
%Latex:\myput{3873}{367}{5}{7}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3900 3710 3900 3773 
] dogrey 
32 Setcolor
32 Setcolor
(8) 4323 3873 0  0.00 [4323 3773 55 99] Show
%Latex:\myput{4323}{367}{5}{8}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4350 3710 4350 3773 
] dogrey 
32 Setcolor
32 Setcolor
(9) 4773 3873 0  0.00 [4773 3773 55 99] Show
%Latex:\myput{4773}{367}{5}{9}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4800 3710 4800 3773 
] dogrey 
32 Setcolor
32 Setcolor
(10) 5195 3873 0  0.00 [5195 3773 111 99] Show
%Latex:\myput{5195}{367}{5}{10}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 3710 5250 3773 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[975 3710 975 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1200 3710 1200 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1425 3710 1425 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1650 3710 1650 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1875 3710 1875 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2100 3710 2100 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2325 3710 2325 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2550 3710 2550 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2775 3710 2775 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3000 3710 3000 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3225 3710 3225 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3450 3710 3450 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3675 3710 3675 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3900 3710 3900 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4125 3710 4125 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4350 3710 4350 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4575 3710 4575 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4800 3710 4800 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[5025 3710 5025 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(0) 623 3748 0  0.00 [623 3648 55 99] Show
%Latex:\myput{623}{492}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 690 3710 
] dogrey 
32 Setcolor
32 Setcolor
(1) 623 3395 0  0.00 [623 3295 55 99] Show
%Latex:\myput{623}{845}{5}{1}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3357 690 3357 
] dogrey 
32 Setcolor
32 Setcolor
(2) 623 3041 0  0.00 [623 2941 55 99] Show
%Latex:\myput{623}{1199}{5}{2}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3003 690 3003 
] dogrey 
32 Setcolor
32 Setcolor
(3) 623 2688 0  0.00 [623 2588 55 99] Show
%Latex:\myput{623}{1552}{5}{3}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2650 690 2650 
] dogrey 
32 Setcolor
32 Setcolor
(4) 623 2335 0  0.00 [623 2235 55 99] Show
%Latex:\myput{623}{1905}{5}{4}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2297 690 2297 
] dogrey 
32 Setcolor
32 Setcolor
(5) 623 1981 0  0.00 [623 1881 55 99] Show
%Latex:\myput{623}{2259}{5}{5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1943 690 1943 
] dogrey 
32 Setcolor
32 Setcolor
(6) 623 1628 0  0.00 [623 1528 55 99] Show
%Latex:\myput{623}{2612}{5}{6}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1590 690 1590 
] dogrey 
32 Setcolor
32 Setcolor
(7) 623 1275 0  0.00 [623 1175 55 99] Show
%Latex:\myput{623}{2965}{5}{7}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1237 690 1237 
] dogrey 
32 Setcolor
32 Setcolor
(8) 623 921 0  0.00 [623 821 55 99] Show
%Latex:\myput{623}{3319}{5}{8}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 883 690 883 
] dogrey 
32 Setcolor
32 Setcolor
(9) 623 568 0  0.00 [623 468 55 99] Show
%Latex:\myput{623}{3672}{5}{9}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 530 690 530 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3533 705 3533 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3357 705 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3180 705 3180 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3003 705 3003 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2827 705 2827 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2650 705 2650 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2473 705 2473 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2297 705 2297 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1943 705 1943 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1767 705 1767 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1590 705 1590 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1413 705 1413 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1237 705 1237 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1060 705 1060 
] dogrey 
 (drawsegs) 4 [ 32]
[750 883 705 883 
] dogrey 
 (drawsegs) 4 [ 32]
[750 707 705 707 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 5250 3710 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 530 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 


